{"parents": [], "prev": {"link": "../tutorials/quick_start/", "title": "Quick Start Guide"}, "next": {"link": "../api_tutorials/", "title": "API Tutorials"}, "title": "Architecture Overview", "meta": null, "body": "<section id=\"architecture-overview\">\n<h1>Architecture Overview<a class=\"headerlink\" href=\"#architecture-overview\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<section id=\"runhouse-resources\">\n<h2>Runhouse Resources<a class=\"headerlink\" href=\"#runhouse-resources\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Resources are the Runhouse primitive for objects that can be saved, shared, and reused. This can be split\ninto compute resources (clusters, functions, environments, and runs) and data resources (folder, table, blob, etc).</p>\n<section id=\"compute\">\n<h3>Compute<a class=\"headerlink\" href=\"#compute\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>The Compute APIs allow a seamless flow of code and execution across local and remote compute. They blur the line\nbetween program execution and deployment, providing both a path of least resistence for running a sub-routine on\nspecific hardware, while unceremoniously turning that sub-routine into a reusable service. They also provide\nconvenient dependency isolation and management, provider-agnostic provisioning and termination, and rich\ndebugging and accessibility interfaces built-in.</p>\n<ul class=\"simple\">\n<li><p><strong>Cluster</strong>: A set of machines which can be sent code or data. Generally, they are Ray clusters under the hood.</p></li>\n<li><p><strong>Environment</strong>: A set of packages to be installed via HTTP on remote clusters.</p></li>\n<li><p><strong>Functions</strong>: Functions are associated with clusters and environments, and are executed using an HTTP endpoint.</p></li>\n</ul>\n</section>\n<section id=\"data\">\n<h3>Data<a class=\"headerlink\" href=\"#data\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>The Data APIs provide a simple interface for storing, recalling, and moving data between the user\u2019s laptop,\nremote compute, cloud storage, and specialized storage (e.g. data warehouses). They provide least-common-denominator\nAPIs across providers, allowing users to easily specify the actions they want to take on the data without needed to\ndig into provider-specific APIs.</p>\n<ul class=\"simple\">\n<li><p><strong>Folder</strong>: Represents a specified location (could be local, remote, or file storage), for managing where various\nRunhouse resources live.</p></li>\n<li><p><strong>Table</strong>: Provides convenient APIs for writing, partitioning, fetch, and stream various data types.</p></li>\n<li><p><strong>Blob</strong>: Represents a single serialized file stored in a particular system.</p></li>\n</ul>\n</section>\n</section>\n<section id=\"accessibility-and-management\">\n<h2>Accessibility and Management<a class=\"headerlink\" href=\"#accessibility-and-management\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Runhouse enables the portability and sharing of resources across users and environments, and provides\ntools for visibility and management of these resources as long-living assets shared by teams or projects.</p>\n<section id=\"accessibility\">\n<h3>Accessibility<a class=\"headerlink\" href=\"#accessibility\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>The Runhouse RNS (Resource Naming System) provides a convenient way to name, persist, and recall resources\nacoss environments. Meanwhile, the Secrets APIs provide a simple interface for storing and retrieving secrets\nfrom your secure Runhouse account.</p>\n<ul class=\"simple\">\n<li><p><strong>Resource Naming System (RNS)</strong>: Consists of lightweight metadata for each resource type to captures the\ninformation needed to load it in a new environment, and a mechanism for saving and loading from either the working\ngit repo or a remote Runhouse key-value metadata store. The git-based approach (Local RNS) allows for local\npersistence and versioning or sharing across OSS projects. The metadata store (Runhouse RNS) is even more portable;\nit allows resource sharing across users and environments, anywhere there is an Internet connection and Python\ninterpreter. The RNS is backed by a management API (see below) to view and manage all resources.</p></li>\n<li><p><strong>Secrets API</strong>: Provides a simple interface for storing and retrieving secrets to a allow a more seamless\nexperience when accessing resources across environments. It provides a simple interface for storing and retrieving\nsecrets from a variety of providers (e.g. AWS, Azure, GCP, Hugging Face, Github, etc.) as well as SSH Keys and\ncustom secrets, and stores them in Hashicorp Vault.</p></li>\n<li><p><strong>Configs</strong>: Set and preserve default configs across environments.</p></li>\n</ul>\n</section>\n<section id=\"management\">\n<h3>Management<a class=\"headerlink\" href=\"#management\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Runhouse provides tools for visibility and management of resources as long-living assets shared by teams or projects.</p>\n<ul class=\"simple\">\n<li><p><strong>Organization structure</strong>: Both resources and users can be organized into arbitrarily-nested groups to apply access\npermissions, default behaviors (e.g. default storage locations, compute providers, instance autotermination, etc.),\nproject delineation, or staging (e.g. dev vs. prod).</p></li>\n<li><p><a class=\"reference external\" href=\"https://www.run.house/dashboard\">Management UI</a>: provides an individual or admin view of all resources, secrets,\ngroups, and sharing. Resource metadata is automatically versioned in RNS, allowing teams to maintain single-sources\nof truth for assets with zero downtime to update or roll back, and trace exact lineage for any existing resource.</p></li>\n</ul>\n</section>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./.\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.18.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["api_tutorials", "API Tutorials", "N", "next"], ["tutorials/quick_start", "Quick Start Guide", "P", "previous"]], "sourcename": "architecture.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Architecture Overview</a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse-resources\">Runhouse Resources</a><ul>\n<li><a class=\"reference internal\" href=\"#compute\">Compute</a></li>\n<li><a class=\"reference internal\" href=\"#data\">Data</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#accessibility-and-management\">Accessibility and Management</a><ul>\n<li><a class=\"reference internal\" href=\"#accessibility\">Accessibility</a></li>\n<li><a class=\"reference internal\" href=\"#management\">Management</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "architecture", "sidebars": ["sidebar-logo.html", "search-field.html", "sbt-sidebar-nav.html", "sbt-sidebar-footer.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "pagetitle": "Architecture Overview", "page_description": "Architecture Overview  Runhouse Resources  Resources are the Runhouse primitive for objects that can be saved, shared, and reused. This can be split into comput", "author": "the Runhouse team \ud83c\udfc3\u200d\u2640\ufe0f\ud83c\udfe0", "github_user": "run-house", "github_repo": "runhouse", "github_version": "stable", "doc_path": "docs/", "theme_search_bar_text": "Search the docs ...", "theme_show_toc_level": 1}