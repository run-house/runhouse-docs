{"parents": [{"link": "../", "title": "Python API"}], "prev": {"link": "../resource/", "title": "Resource"}, "next": {"link": "../cluster/", "title": "Cluster"}, "title": "Function", "meta": {}, "body": "<section id=\"function\">\n<h1>Function<a class=\"headerlink\" href=\"#function\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>A Function is a portable code block that can be sent to remote hardware to run as a subroutine or service.\nIt is comprised of the entrypoint, system (<a class=\"reference internal\" href=\"../cluster/#cluster\"><span class=\"std std-ref\">Cluster</span></a>), and requirements necessary to run it.</p>\n<section id=\"function-factory-methods\">\n<h2>Function Factory Methods<a class=\"headerlink\" href=\"#function-factory-methods\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"runhouse.function\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">runhouse.</span></span><span class=\"sig-name descname\"><span class=\"pre\">function</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fn</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">Callable</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">List</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.Env\"><span class=\"pre\">Env</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">load_secrets</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">serialize_notebook_fn</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function_factory/#function\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.function\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds an instance of <a class=\"reference internal\" href=\"#runhouse.Function\" title=\"runhouse.Function\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Function</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>fn</strong> (<em>Optional</em><em>[</em><em>str</em><em> or </em><em>Callable</em><em>]</em>) \u2013 The function to execute on the remote system when the function is called.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><em>str</em><em>]</em>) \u2013 Name of the Function to create or retrieve.\nThis can be either from a local config or from the RNS.</p></li>\n<li><p><strong>system</strong> (<em>Optional</em><em>[</em><em>str</em><em> or </em><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.Cluster\"><em>Cluster</em></a><em>]</em>) \u2013 Hardware (cluster) on which to execute the Function.\nThis can be either the string name of a Cluster object, or a Cluster object.</p></li>\n<li><p><strong>env</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><em>str</em><em>] or </em><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.Env\"><em>Env</em></a><em> or </em><em>str</em><em>]</em>) \u2013 List of requirements to install on the remote cluster, or path to the\nrequirements.txt file, or Env object or string name of an Env object.</p></li>\n<li><p><strong>dryrun</strong> (<em>bool</em>) \u2013 Whether to create the Function if it doesn\u2019t exist, or load the Function object as a dryrun.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>)</p></li>\n<li><p><strong>load_secrets</strong> (<em>bool</em>) \u2013 Whether or not to send secrets; only applicable if <cite>dryrun</cite> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>)</p></li>\n<li><p><strong>serialize_notebook_fn</strong> (<em>bool</em>) \u2013 If function is of a notebook setting, whether or not to serialized the function.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The resulting Function object.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#runhouse.Function\" title=\"runhouse.Function\">Function</a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">runhouse</span> <span class=\"k\">as</span> <span class=\"nn\">rh</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cluster</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">ondemand_cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_cluster&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">summer</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"nb\">sum</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_func&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;requirements.txt&#39;</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># using the function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">summer</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>  <span class=\"c1\"># returns 13</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Load function from above</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">reloaded_function</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_func&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"runhouse.aws_lambda_fn\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">runhouse.</span></span><span class=\"sig-name descname\"><span class=\"pre\">aws_lambda_fn</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fn</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Callable</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Dict</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">List</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.resources.envs.env.Env\"><span class=\"pre\">Env</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">runtime</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timeout</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">memory_size</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tmp_size</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">retention_time</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/aws_lambda_factory/#aws_lambda_fn\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.aws_lambda_fn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds an instance of <a class=\"reference internal\" href=\"#runhouse.LambdaFunction\" title=\"runhouse.LambdaFunction\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LambdaFunction</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>fn</strong> (<em>Optional</em><em>[</em><em>Callable</em><em>]</em>) \u2013 The Lambda function to be executed.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><em>str</em><em>]</em>) \u2013 Name of the Lambda Function to create or retrieve.\nThis can be either from a local config or from the RNS.</p></li>\n<li><p><strong>env</strong> (<em>Optional</em><em>[</em><em>Dict</em><em> or </em><em>List</em><em>[</em><em>str</em><em>] or </em><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.Env\"><em>Env</em></a><em>]</em>) \u2013 <p>Specifies the requirements that will be installed, and the environment\nvars that should be attached to the Lambda. Accepts three possible types:</p>\n<ol class=\"arabic\">\n<li><p>A dict which should contain the following keys:</p>\n<p>a. reqs: a list of the python libraries, to be installed by the Lambda, or just a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">requirements.txt</span></code> string.</p>\n<ol class=\"loweralpha simple\" start=\"2\">\n<li><p>env_vars: dictionary containing the env_vars that will be a part of the lambda configuration.</p></li>\n</ol>\n</li>\n<li><p>A list of strings, containing all the required python packages.</p></li>\n<li><p>An instance of Runhouse Env class.</p></li>\n</ol>\n<p>By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">runhouse</span></code> package will be installed, and env_vars will include <code class=\"docutils literal notranslate\"><span class=\"pre\">{HOME:</span> <span class=\"pre\">/tmp/home}</span></code>.</p>\n</p></li>\n<li><p><strong>runtime</strong> \u2013 (Optional[str]): The coding language of the function. Should be one of the following:\npython3.7, python3.8, python3.9, python3.10, python3.11. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">python3.9</span></code>)</p></li>\n<li><p><strong>timeout</strong> \u2013 Optional[int]: The maximum amount of time (in seconds) during which the Lambda will run in AWS\nwithout timing-out. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">900</span></code>, Min: <code class=\"docutils literal notranslate\"><span class=\"pre\">3</span></code>, Max: <code class=\"docutils literal notranslate\"><span class=\"pre\">900</span></code>)</p></li>\n<li><p><strong>memory_size</strong> \u2013 Optional[int], The amount of memory (in MB) to be allocated to the Lambda.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">10240</span></code>, Min: <code class=\"docutils literal notranslate\"><span class=\"pre\">128</span></code>, Max: <code class=\"docutils literal notranslate\"><span class=\"pre\">10240</span></code>)</p></li>\n<li><p><strong>tmp_size</strong> \u2013 Optional[int], This size of the /tmp folder in the aws lambda file system.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">10240</span></code>, Min: <code class=\"docutils literal notranslate\"><span class=\"pre\">512</span></code>, Max: <code class=\"docutils literal notranslate\"><span class=\"pre\">10240</span></code>).</p></li>\n<li><p><strong>retention_time</strong> \u2013 Optional[int] The time (in days) the Lambda execution logs will be saved in AWS\ncloudwatch. After that, they will be deleted. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">30</span></code> days)</p></li>\n<li><p><strong>dryrun</strong> (<em>bool</em>) \u2013 Whether to create the Function if it doesn\u2019t exist, or load the Function object as a dryrun.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>).</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><p>The resulting AWS Lambda Function object.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>When creating a Lambda function for the first time (not reloading it), a callable function is a mandatory\nargument.</p>\n</div>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#runhouse.LambdaFunction\" title=\"runhouse.LambdaFunction\">LambdaFunction</a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">runhouse</span> <span class=\"k\">as</span> <span class=\"nn\">rh</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Pass in a callable function  when creating a Lambda</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">multiply</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">b</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">multiply_lambda</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">aws_lambda_fn</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">multiply</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;lambdas_mult_func&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mult_res</span> <span class=\"o\">=</span> <span class=\"n\">multiply_lambda</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># returns 20.</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Load function from above</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">reloaded_function</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">aws_lambda_fn</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;lambdas_mult_func&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">reloaded_function_res</span> <span class=\"o\">=</span> <span class=\"n\">reloaded_function</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>  <span class=\"c1\"># returns 12.</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</section>\n<section id=\"function-class\">\n<h2>Function Class<a class=\"headerlink\" href=\"#function-class\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">runhouse.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Function</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fn_pointers</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Tuple</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.resources.envs.env.Env\"><span class=\"pre\">Env</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><blockquote>\n<div><dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fn_pointers</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Tuple</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.resources.envs.env.Env\"><span class=\"pre\">Env</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.__init__\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Runhouse Function object. It is comprised of the entrypoint, system/cluster,\nand dependencies necessary to run the service.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>To create a Function, please use the factory method <a class=\"reference internal\" href=\"#runhouse.function\" title=\"runhouse.function\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">function()</span></code></a>.</p>\n</div>\n</dd></dl>\n\n</div></blockquote>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.from_config\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_config</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.from_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.from_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a Function object from a config dictionary.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.get\">\n<span class=\"sig-name descname\"><span class=\"pre\">get</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.get\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the result of a Function call that was submitted as async using <cite>run</cite>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>run_key</strong> \u2013 A single or list of runhouse run_key strings returned by calling <code class=\"docutils literal notranslate\"><span class=\"pre\">.call.remote()</span></code> on the\nFunction. The ObjectRefs must be from the cluster that this Function is running on.</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remote_fn</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">local_fn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">gpu</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remote_fn_run</span> <span class=\"o\">=</span> <span class=\"n\">remote_fn</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remote_fn</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">remote_fn_run</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.http_url\">\n<span class=\"sig-name descname\"><span class=\"pre\">http_url</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">curl_command</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">str</span></span></span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.http_url\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.http_url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the endpoint needed to run the Function on the remote cluster, or provide the curl command if requested.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.keep_warm\">\n<span class=\"sig-name descname\"><span class=\"pre\">keep_warm</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">autostop_mins</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.keep_warm\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.keep_warm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Keep the system warm for autostop_mins. If autostop_mins is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> or -1, keep warm indefinitely.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># keep gpu warm for 30 mins</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remote_fn</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">local_fn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">gpu</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remote_fn</span><span class=\"o\">.</span><span class=\"n\">keep_warm</span><span class=\"p\">(</span><span class=\"n\">autostop_mins</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.method_signature\">\n<span class=\"sig-name descname\"><span class=\"pre\">method_signature</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">method</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.method_signature\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.method_signature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extracts the properties of a method that we want to preserve when sending the method over the wire.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.notebook\">\n<span class=\"sig-name descname\"><span class=\"pre\">notebook</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">persist</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sync_package_on_close</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">port_forward</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">8888</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.notebook\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.notebook\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Tunnel into and launch notebook from the system.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.share\">\n<span class=\"sig-name descname\"><span class=\"pre\">share</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visibility</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.share\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.share\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Grant access to the resource for a list of users (or a single user). If a user has a Runhouse account they\nwill receive an email notifying them of their new access. If the user does not have a Runhouse account they will\nalso receive instructions on creating one, after which they will be able to have access to the Resource. If\n<code class=\"docutils literal notranslate\"><span class=\"pre\">visibility</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">public</span></code>, users will not be notified.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>You can only grant access to other users if you have write access to the resource.</p>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>users</strong> (<em>Union</em><em>[</em><em>str</em><em>, </em><em>list</em><em>]</em><em>, </em><em>optional</em>) \u2013 Single user or list of user emails and / or runhouse account usernames.\nIf none are provided and <code class=\"docutils literal notranslate\"><span class=\"pre\">visibility</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">public</span></code>, resource will be made publicly\navailable to all users.</p></li>\n<li><p><strong>access_level</strong> (<code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ResourceAccess</span></code>, optional) \u2013 Access level to provide for the resource.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">read</span></code>.</p></li>\n<li><p><strong>visibility</strong> (<code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ResourceVisibility</span></code>, optional) \u2013 Type of visibility to provide for the shared\nresource. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>.</p></li>\n<li><p><strong>notify_users</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Whether to send an email notification to users who have been given access.\nNote: This is relevant for resources which are not <code class=\"docutils literal notranslate\"><span class=\"pre\">shareable</span></code>. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>headers</strong> (<em>dict</em><em>, </em><em>optional</em>) \u2013 Request headers to provide for the request to RNS. Contains the user\u2019s auth token.\nExample: <code class=\"docutils literal notranslate\"><span class=\"pre\">{&quot;Authorization&quot;:</span> <span class=\"pre\">f&quot;Bearer</span> <span class=\"pre\">{token}&quot;}</span></code></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt><cite>added_users</cite>:</dt><dd><p>Users who already have a Runhouse account and have been granted access to the resource.</p>\n</dd>\n<dt><cite>new_users</cite>:</dt><dd><p>Users who do not have Runhouse accounts and received notifications via their emails.</p>\n</dd>\n<dt><cite>valid_users</cite>:</dt><dd><p>Set of valid usernames and emails from <code class=\"docutils literal notranslate\"><span class=\"pre\">users</span></code> parameter.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Tuple(Dict, Dict, Set)</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Write access to the resource for these specific users.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Visibility will be set to private (users can search for and view resource in Den dashboard)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_resource</span><span class=\"o\">.</span><span class=\"n\">share</span><span class=\"p\">(</span><span class=\"n\">users</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;username1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;user2@gmail.com&quot;</span><span class=\"p\">],</span> <span class=\"n\">access_level</span><span class=\"o\">=</span><span class=\"s1\">&#39;write&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Make resource public, with read access to the resource for all users</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_resource</span><span class=\"o\">.</span><span class=\"n\">share</span><span class=\"p\">(</span><span class=\"n\">visibility</span><span class=\"o\">=</span><span class=\"s1\">&#39;public&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.to\">\n<span class=\"sig-name descname\"><span class=\"pre\">to</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">List</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.Env\"><span class=\"pre\">Env</span></a></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">[]</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force_install</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.to\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.to\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set up a Function and Env on the given system.\nIf the function is sent to AWS, the system should be <code class=\"docutils literal notranslate\"><span class=\"pre\">aws_lambda</span></code>\nSee the args of the factory method <a class=\"reference internal\" href=\"#runhouse.function\" title=\"runhouse.function\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">function()</span></code></a> for more information.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">local_fn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">gpu_cluster</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">local_fn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">gpu_cluster</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">my_conda_env</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">local_fn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">=</span><span class=\"s1\">&#39;aws_lambda&#39;</span><span class=\"p\">)</span>  <span class=\"c1\"># will deploy the rh.function to AWS as a Lambda.</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"lambda-function-class\">\n<h2>Lambda Function Class<a class=\"headerlink\" href=\"#lambda-function-class\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Lambda Function support is an alpha and under active development.\nPlease report any bugs and let us know of any feature requests.</p>\n</div>\n<div class=\"line-block\">\n<div class=\"line\">A <a class=\"reference external\" href=\"https://aws.amazon.com/lambda/\">Lambda Function</a> is a serverless compute service provided by AWS. It allows  you\nto run applications and backend services without provisioning or managing servers. Runhouse will allow you to\nmaintain, invoke and share your Lambda functions and their code. It is comprised of the entry point, configuration, and\ndependencies necessary to run the service.</div>\n</div>\n<div class=\"line-block\">\n<div class=\"line\">There are few core options to create an AWS Lambda using Runhouse:</div>\n</div>\n<ol class=\"arabic simple\">\n<li><p>Pass a callable Python function to the factory method.</p></li>\n<li><p>Follow a typical Lambda creation flow (as if you are using AWS APIs). That includes passing path(s) to Python files(s)\n(containing the code) and a handler function name to the from_handler_file() method. Arguments such as runtime,\nLambda name, timeout and memory size are accepted by the from_handler_file() method as well, but they are not\nmandatory and have default values.</p></li>\n<li><p>Create rh.function instance, and than send it over to AWS Lambdas. For example:\n<code class=\"code docutils literal notranslate\"><span class=\"pre\">rh.function(summer).to(system=&quot;aws_lambda&quot;)</span></code></p></li>\n</ol>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"runhouse.LambdaFunction\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">runhouse.</span></span><span class=\"sig-name descname\"><span class=\"pre\">LambdaFunction</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">paths_to_code</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">List</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">]</span></span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handler_function_name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">runtime</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fn_pointers</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">tuple</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.resources.envs.env.Env\"><span class=\"pre\">Env</span></a></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timeout</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">memory_size</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tmp_size</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">retention_time</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">30</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">access</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/aws_lambda/#LambdaFunction\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.LambdaFunction\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><blockquote>\n<div><dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.LambdaFunction.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">paths_to_code</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">List</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">]</span></span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handler_function_name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">runtime</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fn_pointers</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">tuple</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.resources.envs.env.Env\"><span class=\"pre\">Env</span></a></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timeout</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">memory_size</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tmp_size</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">retention_time</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">30</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">access</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/aws_lambda/#LambdaFunction.__init__\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.LambdaFunction.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Runhouse AWS Lambda object. It is comprised of the entry point, configuration,\nand dependencies necessary to run the service on AWS infra.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>To create an AWS lambda resource, please use the factory method <a class=\"reference internal\" href=\"#runhouse.aws_lambda_fn\" title=\"runhouse.aws_lambda_fn\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">aws_lambda_fn()</span></code></a>.</p>\n</div>\n</dd></dl>\n\n</div></blockquote>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.LambdaFunction.from_config\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_config</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/aws_lambda/#LambdaFunction.from_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.LambdaFunction.from_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create an AWS Lambda object from a config dictionary.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.LambdaFunction.from_handler_file\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_handler_file</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">paths_to_code</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">List</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">]</span></span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handler_function_name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">runtime</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">timeout</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">memory_size</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tmp_size</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">retention_time</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/aws_lambda/#LambdaFunction.from_handler_file\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.LambdaFunction.from_handler_file\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates an AWS Lambda function from a Python file.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>paths_to_code</strong> \u2013 (Optional[List[str]]): List of the FULL paths to the Python code file(s) that should be\nsent to AWS Lambda. First path in the list should be the path to the handler file which contains\nthe main (handler) function. If <code class=\"docutils literal notranslate\"><span class=\"pre\">fn</span></code> is provided, this argument is ignored.</p></li>\n<li><p><strong>handler_function_name</strong> \u2013 (Optional[str]): The name of the function in the handler file that will be executed\nby the Lambda. If <code class=\"docutils literal notranslate\"><span class=\"pre\">fn</span></code> is provided, this argument is ignored.</p></li>\n<li><p><strong>runtime</strong> \u2013 (Optional[str]): The coding language of the function. Should be one of the following:\npython3.7, python3.8, python3.9, python3.10, python3.11. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">python3.9</span></code>)</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><em>str</em><em>]</em>) \u2013 Name of the Lambda Function to create or retrieve.\nThis can be either from a local config or from the RNS.</p></li>\n<li><p><strong>env</strong> (<em>Optional</em><em>[</em><em>Dict</em><em> or </em><em>List</em><em>[</em><em>str</em><em>] or </em><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.Env\"><em>Env</em></a><em>]</em>) \u2013 <p>Specifies the requirements that will be installed, and the\nenvironment vars that should be attached to the Lambda. Accepts three possible types:</p>\n<ol class=\"arabic\">\n<li><p>A dict which should contain the following keys:</p>\n<blockquote>\n<div><p>reqs: a list of the python libraries, to be installed by the Lambda, or just a\n<a href=\"#id1\"><span class=\"problematic\" id=\"id2\">``</span></a>requirements.txt``string.</p>\n<p>env_vars: dictionary containing the env_vars that will be a part of the lambda configuration.</p>\n</div></blockquote>\n</li>\n<li><p>A list of strings, containing all the required python packages.</p></li>\n<li><p>An instance of Runhouse Env class. By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">runhouse</span></code> package will be installed, and env_vars\nwill include <code class=\"docutils literal notranslate\"><span class=\"pre\">{HOME:</span> <span class=\"pre\">/tmp/home}</span></code>.</p></li>\n</ol>\n</p></li>\n<li><p><strong>timeout</strong> \u2013 Optional[int]: The maximum amount of time (in seconds) during which the Lambda will run in AWS\nwithout timing-out. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">900</span></code>, Min: <code class=\"docutils literal notranslate\"><span class=\"pre\">3</span></code>, Max: <code class=\"docutils literal notranslate\"><span class=\"pre\">900</span></code>)</p></li>\n<li><p><strong>memory_size</strong> \u2013 Optional[int], The amount of memory (in MB) to be allocated to the Lambda.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">10240</span></code>, Min: <code class=\"docutils literal notranslate\"><span class=\"pre\">128</span></code>, Max: <code class=\"docutils literal notranslate\"><span class=\"pre\">10240</span></code>)</p></li>\n<li><p><strong>tmp_size</strong> \u2013 Optional[int], This size of the /tmp folder in the aws lambda file system.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">10240</span></code>, Min: <code class=\"docutils literal notranslate\"><span class=\"pre\">512</span></code>, Max: <code class=\"docutils literal notranslate\"><span class=\"pre\">10240</span></code>).</p></li>\n<li><p><strong>retention_time</strong> \u2013 Optional[int] The time (in days) the Lambda execution logs will be saved in AWS\ncloudwatch. After that, they will be deleted. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">30</span></code> days)</p></li>\n<li><p><strong>dryrun</strong> (<em>bool</em>) \u2013 Whether to create the Function if it doesn\u2019t exist, or load the Function object as a dryrun.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>).</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The resulting AWS Lambda Function object.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#runhouse.LambdaFunction\" title=\"runhouse.LambdaFunction\">LambdaFunction</a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># handler_file.py</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">summer</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># your &#39;main&#39; python file, where you are using runhouse</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">summer_lambda</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">LambdaFunction</span><span class=\"o\">.</span><span class=\"n\">from_handler_file</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                    <span class=\"n\">paths_to_code</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;/full/path/to/handler_file.py&#39;</span><span class=\"p\">],</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                    <span class=\"n\">handler_function_name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;summer&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                    <span class=\"n\">runtime</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;python3.9&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_func&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># invoking the function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">summer_res</span> <span class=\"o\">=</span> <span class=\"n\">summer_lambda</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>  <span class=\"c1\"># returns 13.</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.LambdaFunction.from_name\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_name</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alt_options</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/aws_lambda/#LambdaFunction.from_name\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.LambdaFunction.from_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load existing Resource via its name.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.LambdaFunction.map\">\n<span class=\"sig-name descname\"><span class=\"pre\">map</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/aws_lambda/#LambdaFunction.map\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.LambdaFunction.map\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Map a function over a list of arguments.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># The my_lambda_handler.py file</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">my_summer</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">,</span> <span class=\"n\">arg3</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"k\">return</span> <span class=\"n\">arg1</span> <span class=\"o\">+</span> <span class=\"n\">arg2</span> <span class=\"o\">+</span> <span class=\"n\">arg3</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># your &#39;main&#39; python file, where you are using runhouse</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">summer_lambda</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">aws_lambda_fn</span><span class=\"p\">(</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                    <span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">my_summer</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                    <span class=\"n\">runtime</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;python3.9&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>                    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_func&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">summer_lambda</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>  <span class=\"c1\"># output = [4, 9]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.LambdaFunction.starmap\">\n<span class=\"sig-name descname\"><span class=\"pre\">starmap</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">args_lists</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/aws_lambda/#LambdaFunction.starmap\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.LambdaFunction.starmap\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Like <a class=\"reference internal\" href=\"#runhouse.LambdaFunction.map\" title=\"runhouse.LambdaFunction.map\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">map()</span></code></a> except that the elements of the iterable are expected to be iterables\nthat are unpacked as arguments. An iterable of [(1,2), (3, 4)] results in [func(1,2), func(3,4)].</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">arg_list</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># invokes the Lambda function twice, once with args (1, 2, 3) and once with args (3, 4, 5)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">summer_lambda</span><span class=\"o\">.</span><span class=\"n\">starmap</span><span class=\"p\">(</span><span class=\"n\">arg_list</span><span class=\"p\">)</span> <span class=\"c1\"># output = [6, 12]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.LambdaFunction.teardown\">\n<span class=\"sig-name descname\"><span class=\"pre\">teardown</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/aws_lambda/#LambdaFunction.teardown\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.LambdaFunction.teardown\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Deletes a Lambda function instance from AWS. All relevant AWS resources\n(role, log group) are deleted as well.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">multiply</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">b</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">multiply_lambda</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">aws_lambda_fn</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">multiply</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;lambdas_mult_func&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mult_res</span> <span class=\"o\">=</span> <span class=\"n\">multiply_lambda</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># returns 20.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">multiply_lambda</span><span class=\"o\">.</span><span class=\"n\">teardown</span><span class=\"p\">()</span>  <span class=\"c1\"># returns true if succeeded, raises an exception otherwise.</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<section id=\"lambda-hardware-setup\">\n<h3>Lambda Hardware Setup<a class=\"headerlink\" href=\"#lambda-hardware-setup\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>To create an AWS Lambda, you must grant the necessary permissions to do so. They are provided by an IAM\nrole, which should be attached to a certain AWS profile. This setup is made in the <code class=\"code docutils literal notranslate\"><span class=\"pre\">~/.aws/config</span></code> file.</p>\n<p>For example, your local <code class=\"code docutils literal notranslate\"><span class=\"pre\">~/.aws/config</span></code> contains:</p>\n<div class=\"highlight-ini notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">[profile lambda]</span>\n<span class=\"na\">role_arn</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">arn:aws:iam::123456789:role/lambda-creation-role</span>\n<span class=\"na\">region</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">us-east-1</span>\n<span class=\"na\">source_profile</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">default</span>\n</pre></div>\n</div>\n<p>There are several ways to provide the necessary credentials which enables Lambda creation:</p>\n<ol class=\"arabic\">\n<li><p>Specify the profile name in your code editor:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li><p>Install the <cite>AWS Toolkit</cite> extension.</p></li>\n<li><p>Choose the relevant profile (e.g. <cite>profile lambda</cite>) and region (e.g <cite>us-east-1</cite>).</p></li>\n</ol>\n</div></blockquote>\n</li>\n<li><p>Environment Variable: setting <code class=\"code docutils literal notranslate\"><span class=\"pre\">AWS_PROFILE</span></code> to <code class=\"code docutils literal notranslate\"><span class=\"pre\">&quot;lambda&quot;</span></code></p></li>\n</ol>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>If no specific profile is provided, Runhouse will try using the default profile. Note if this default AWS identity\nwill not have the relevant IAM permissions for creating a Lambda, you will not be able to create a\nLambda.</p>\n</div>\n</section>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            name: \"python3\",\n            path: \"./api/python\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["api/python/cluster", "Cluster", "N", "next"], ["api/python/resource", "Resource", "P", "previous"]], "sourcename": "api/python/function.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Function</a><ul>\n<li><a class=\"reference internal\" href=\"#function-factory-methods\">Function Factory Methods</a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.function\"><code class=\"docutils literal notranslate\"><span class=\"pre\">function()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.aws_lambda_fn\"><code class=\"docutils literal notranslate\"><span class=\"pre\">aws_lambda_fn()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#function-class\">Function Class</a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.Function\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.from_config\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.from_config()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.get\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.get()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.http_url\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.http_url()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.keep_warm\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.keep_warm()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.method_signature\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.method_signature()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.notebook\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.notebook()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.share\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.share()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.to\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.to()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#lambda-function-class\">Lambda Function Class</a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.LambdaFunction\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LambdaFunction</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.LambdaFunction.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LambdaFunction.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.LambdaFunction.from_config\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LambdaFunction.from_config()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.LambdaFunction.from_handler_file\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LambdaFunction.from_handler_file()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.LambdaFunction.from_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LambdaFunction.from_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.LambdaFunction.map\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LambdaFunction.map()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.LambdaFunction.starmap\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LambdaFunction.starmap()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.LambdaFunction.teardown\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LambdaFunction.teardown()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#lambda-hardware-setup\">Lambda Hardware Setup</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "globaltoc": "<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Getting Started</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick-start-cloud/\">Cloud Quick Start</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick-start-local/\">Local Quick Start</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick-start-den/\">Den Quick Start</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Basics</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-clusters/\">Clusters</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-modules/\">Functions and Modules</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-envs/\">Envs and Packages</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-folders/\">Folders</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-secrets/\">Secrets</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-resources/\">Resource Management</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Reference</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/python/\">Python API</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/resource/\">Resource</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/function/\">Function</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/cluster/\">Cluster</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/env/\">Env</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/package/\">Package</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/module/\">Module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/mapper/\">Mapper</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/folder/\">Folder</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/table/\">Table</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/blob/\">Blob</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/file/\">File</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/secrets/\">Secrets</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/login/\">Login/Logout</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/cli/\">Command Line Interface</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Other Topics</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"architecture/\">Architecture Overview</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"debugging-logging/\">Debugging and Logging</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"troubleshooting/\">Manual Setup and Troubleshooting</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"security-and-authentication/\">Security and Authentication</a></li>\n</ul>\n", "current_page_name": "api/python/function", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.13"}