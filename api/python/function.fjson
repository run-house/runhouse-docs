{"parents": [{"link": "../", "title": "Python API"}], "prev": {"link": "../resource/", "title": "Resource"}, "next": {"link": "../cluster/", "title": "Cluster"}, "title": "Function", "meta": {}, "body": "<section id=\"function\">\n<h1>Function<a class=\"headerlink\" href=\"#function\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>A Function is a portable code block that can be sent to remote hardware to run as a subroutine or service.\nIt is comprised of the entrypoint, system (<a class=\"reference internal\" href=\"../cluster/#cluster\"><span class=\"std std-ref\">Cluster</span></a>), and requirements necessary to run it.</p>\n<section id=\"function-factory-methods\">\n<h2>Function Factory Methods<a class=\"headerlink\" href=\"#function-factory-methods\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"runhouse.function\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">runhouse.</span></span><span class=\"sig-name descname\"><span class=\"pre\">function</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fn</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">Callable</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">load_secrets</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">serialize_notebook_fn</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function_factory/#function\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.function\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Builds an instance of <a class=\"reference internal\" href=\"#runhouse.Function\" title=\"runhouse.Function\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Function</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>fn</strong> (<em>Optional</em><em>[</em><em>str</em><em> or </em><em>Callable</em><em>]</em>) \u2013 The function to execute on the remote system when the function is called.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><em>str</em><em>]</em>) \u2013 Name of the Function to create or retrieve.\nThis can be either from a local config or from Den. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>)</p></li>\n<li><p><strong>load_from_den</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Whether to try loading the function from Den. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>)</p></li>\n<li><p><strong>dryrun</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Whether to create the Function if it doesn\u2019t exist, or load the Function object as\na dryrun. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>)</p></li>\n<li><p><strong>serialize_notebook_fn</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 If function is of a notebook setting, whether or not to serialized the\nfunction. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The resulting Function object.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#runhouse.Function\" title=\"runhouse.Function\">Function</a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cluster</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">ondemand_cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_cluster&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">summer</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"nb\">sum</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_func&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;requirements.txt&#39;</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># using the function</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">summer</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>  <span class=\"c1\"># returns 13</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Load function from above</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">reloaded_function</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_func&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</section>\n<section id=\"function-class\">\n<h2>Function Class<a class=\"headerlink\" href=\"#function-class\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">runhouse.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Function</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fn_pointers</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Tuple</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><blockquote>\n<div><dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fn_pointers</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Tuple</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.__init__\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Runhouse Function object. It is comprised of the entrypoint, system/cluster,\nand dependencies necessary to run the service.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>To create a Function, please use the factory method <a class=\"reference internal\" href=\"#runhouse.function\" title=\"runhouse.function\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">function()</span></code></a>.</p>\n</div>\n</dd></dl>\n\n</div></blockquote>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.config\">\n<span class=\"sig-name descname\"><span class=\"pre\">config</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">condensed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The config of the function.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>condensed</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Whether to return the condensed config without expanding children subresources,\nor return the whole expanded config. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.from_config\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_config</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">config</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_resolve_children</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.from_config\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.from_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load or construct resource from config.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>config</strong> (<em>Dict</em>) \u2013 Resource config.</p></li>\n<li><p><strong>dryrun</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Whether to construct resource or load as dryrun (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>)</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.get\">\n<span class=\"sig-name descname\"><span class=\"pre\">get</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_key</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.get\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the result of a Function call that was submitted as async using <code class=\"docutils literal notranslate\"><span class=\"pre\">run</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>run_key</strong> \u2013 A single or list of runhouse <code class=\"docutils literal notranslate\"><span class=\"pre\">run_key</span></code> strings returned by calling <code class=\"docutils literal notranslate\"><span class=\"pre\">.call.remote()</span></code> on the\nFunction. The ObjectRefs must be from the cluster that this Function is running on.</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remote_fn</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">local_fn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">gpu</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remote_fn_run</span> <span class=\"o\">=</span> <span class=\"n\">remote_fn</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remote_fn</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">remote_fn_run</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.method_signature\">\n<span class=\"sig-name descname\"><span class=\"pre\">method_signature</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">method</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.method_signature\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.method_signature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Method signature, consisting of method properties to preserve when sending the method over the wire.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.share\">\n<span class=\"sig-name descname\"><span class=\"pre\">share</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visibility</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.share\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.share\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Grant access to the resource for a list of users (or a single user). By default, the user will\nreceive an email notification of access (if they have a Runhouse account) or instructions on creating\nan account to access the resource. If <code class=\"docutils literal notranslate\"><span class=\"pre\">visibility</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">public</span></code>, users will not be notified.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>You can only grant access to other users if you have write access to the resource.</p>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>users</strong> (<em>Union</em><em>[</em><em>str</em><em>, </em><em>list</em><em>]</em><em>, </em><em>optional</em>) \u2013 Single user or list of user emails and / or runhouse account usernames.\nIf none are provided and <code class=\"docutils literal notranslate\"><span class=\"pre\">visibility</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">public</span></code>, resource will be made publicly\navailable to all users. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>)</p></li>\n<li><p><strong>access_level</strong> (<code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ResourceAccess</span></code>, optional) \u2013 Access level to provide for the resource.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">read</span></code>).</p></li>\n<li><p><strong>visibility</strong> (<code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ResourceVisibility</span></code>, optional) \u2013 Type of visibility to provide for the shared\nresource. By default, the visibility is private. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>)</p></li>\n<li><p><strong>notify_users</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Whether to send an email notification to users who have been given access.\nNote: This is relevant for resources which are not <code class=\"docutils literal notranslate\"><span class=\"pre\">shareable</span></code>. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>)</p></li>\n<li><p><strong>headers</strong> (<em>Dict</em><em>, </em><em>optional</em>) \u2013 Request headers to provide for the request to Den. Contains the user\u2019s auth token.\nExample: <code class=\"docutils literal notranslate\"><span class=\"pre\">{&quot;Authorization&quot;:</span> <span class=\"pre\">f&quot;Bearer</span> <span class=\"pre\">{token}&quot;}</span></code></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt><cite>added_users</cite>:</dt><dd><p>Users who already have a Runhouse account and have been granted access to the resource.</p>\n</dd>\n<dt><cite>new_users</cite>:</dt><dd><p>Users who do not have Runhouse accounts and received notifications via their emails.</p>\n</dd>\n<dt><cite>valid_users</cite>:</dt><dd><p>Set of valid usernames and emails from <code class=\"docutils literal notranslate\"><span class=\"pre\">users</span></code> parameter.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Tuple(Dict, Dict, Set)</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Write access to the resource for these specific users.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Visibility will be set to private (users can search for and view resource in Den dashboard)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_resource</span><span class=\"o\">.</span><span class=\"n\">share</span><span class=\"p\">(</span><span class=\"n\">users</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;username1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;user2@gmail.com&quot;</span><span class=\"p\">],</span> <span class=\"n\">access_level</span><span class=\"o\">=</span><span class=\"s1\">&#39;write&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Make resource public, with read access to the resource for all users</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_resource</span><span class=\"o\">.</span><span class=\"n\">share</span><span class=\"p\">(</span><span class=\"n\">visibility</span><span class=\"o\">=</span><span class=\"s1\">&#39;public&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Function.to\">\n<span class=\"sig-name descname\"><span class=\"pre\">to</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">process</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">Process</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sync_local</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/functions/function/#Function.to\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Function.to\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Send the function to a specified process on a cluster. This will sync over relevant code for the function\nto run on the cluster, and return a remote_function object that will wrap remote calls to the function\nliving on the cluster.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>system</strong> (<em>str</em><em> or </em><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.Cluster\"><em>Cluster</em></a>) \u2013 The cluster to setup the function and process on.</p></li>\n<li><p><strong>process</strong> (<em>str</em><em> or </em><em>Dict</em><em>, </em><em>optional</em>) \u2013 The process to run the function on. If it\u2019s a Dict, it will be explicitly\ncreated with those args. or the set of requirements necessary to run the function. If no process is\nspecified, the function will be sent to the default_process created when the cluster is created\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>)</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><em>str</em><em>]</em><em>, </em><em>optional</em>) \u2013 Name to give to the function resource, if you wish to rename it.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>)</p></li>\n<li><p><strong>sync_local</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Whether to sync up and use the local function on the cluster. If <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>,\ndon\u2019t sync up and use the equivalent function found on the cluster. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>)</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">local_fn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">gpu_cluster</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">local_fn</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">gpu_cluster</span><span class=\"p\">,</span> <span class=\"n\">process</span><span class=\"o\">=</span><span class=\"n\">my_conda_env</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            name: \"python3\",\n            path: \"./api/python\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["api/python/cluster", "Cluster", "N", "next"], ["api/python/resource", "Resource", "P", "previous"]], "sourcename": "api/python/function.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Function</a><ul>\n<li><a class=\"reference internal\" href=\"#function-factory-methods\">Function Factory Methods</a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.function\"><code class=\"docutils literal notranslate\"><span class=\"pre\">function()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#function-class\">Function Class</a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.Function\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.config\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.config()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.from_config\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.from_config()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.get\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.get()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.method_signature\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.method_signature()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.share\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.share()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Function.to\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Function.to()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "globaltoc": "<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Getting Started</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"installation-setup/\">Installation and Compute Setup</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick-start-cloud/\">Quick Start</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"development-guide/\">Development Guide</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"runhouse-in-your-stack/\">Working with Common Libraries and Tools</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Basics</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-clusters/\">Clusters</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-modules/\">Functions and Modules</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-process/\">Processes</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-images/\">Images</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-folders/\">Folders</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-secrets/\">Secrets</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-resources/\">Resource Management</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Reference</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/python/\">Python API</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/resource/\">Resource</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/function/\">Function</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/cluster/\">Cluster</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/image/\">Image</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/package/\">Package</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/module/\">Module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/folder/\">Folder</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/secrets/\">Secrets</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/login/\">Login/Logout</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/cli/\">Command Line Interface</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Other Topics</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/async/\">Asynchronous Programming</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"installation/\">Installation and Setup</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"debugging-logging/\">Debugging and Logging</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"docker-setup/\">Docker: Cluster Setup</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"docker-workflows/\">Docker: Dev and Prod Workflows with Runhouse</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"security-and-authentication/\">Security and Authentication</a></li>\n</ul>\n", "current_page_name": "api/python/function", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}