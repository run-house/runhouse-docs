{"parents": [{"link": "../", "title": "Python API"}], "prev": {"link": "../package/", "title": "Package"}, "next": {"link": "../folder/", "title": "Folder"}, "title": "Module", "meta": {}, "body": "<section id=\"module\">\n<h1>Module<a class=\"headerlink\" href=\"#module\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>A Module represents a class that can be sent to and used on remote clusters and environments. Modules can live on remote hardware and its class methods called remotely.</p>\n<section id=\"module-factory-method\">\n<h2>Module Factory Method<a class=\"headerlink\" href=\"#module-factory-method\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"runhouse.module\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">runhouse.</span></span><span class=\"sig-name descname\"><span class=\"pre\">module</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cls</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">Type</span><span class=\"p\"><span class=\"pre\">]</span></span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.resources.envs.env.Env\"><span class=\"pre\">Env</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#module\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.module\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a Module object, which can be used to instantiate and interact with the class remotely.</p>\n<dl class=\"simple\">\n<dt>The behavior of Modules (and subclasses thereof) is as follows:</dt><dd><ul class=\"simple\">\n<li><p>Any callable public method of the module is intercepted and executed remotely over rpc, with exception of\ncertain functions Python doesn\u2019t make interceptable (e.g. __call__, __init__), and methods of the Module\nclass (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">to</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fetch</span></code>, etc.). Properties and private methods are not intercepted, and will be\nexecuted locally.</p></li>\n<li><p>Any method which executes remotely may be called normally, e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">model.forward(x)</span></code>, or asynchronously,\ne.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span> <span class=\"pre\">=</span> <span class=\"pre\">model.forward.run(x)</span></code> (which returns a key to retrieve the result with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">cluster.get(key)</span></code>), or with <code class=\"docutils literal notranslate\"><span class=\"pre\">run_obj</span> <span class=\"pre\">=</span> <span class=\"pre\">model.train.remote(x)</span></code>, which runs synchronously but returns\na remote object to avoid passing heavy results back over the network.</p></li>\n<li><p>Setting attributes, both public and private, will be executed remotely, with the new values only being\nset in the remote module and not the local one. This excludes any methods or attribtes of the Module class\nproper (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">system</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>), which will be set locally.</p></li>\n<li><p>Attributes, private properties can be fetched with the <code class=\"docutils literal notranslate\"><span class=\"pre\">remote</span></code> property, and the full resource can be\nfetched using <code class=\"docutils literal notranslate\"><span class=\"pre\">.fetch()</span></code>, e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">model.remote.weights</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">model.remote.__dict__</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">model.fetch()</span></code>.</p></li>\n<li><p>When a module is sent to a cluster, it\u2019s public attribtes are serialized, sent over, and repopulated in the\nremote instance. This means that any changes to the module\u2019s attributes will not be reflected in the remote</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>cls</strong> \u2013 The class to instantiate.</p></li>\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><em>str</em><em>]</em>) \u2013 Name to give the module object, to be reused later on.</p></li>\n<li><p><strong>system</strong> (<em>Optional</em><em>[</em><em>str</em><em> or </em><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.Cluster\"><em>Cluster</em></a><em>]</em>) \u2013 File system or cluster name. If providing a file system this must be one of:\n[<code class=\"docutils literal notranslate\"><span class=\"pre\">file</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">github</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sftp</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">ssh</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">s3</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">gs</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">azure</span></code>].\nWe are working to add additional file system support. If providing a cluster, this must be a cluster object\nor name, and whether the data is saved to the object store or filesystem depends on whether a path is\nspecified.</p></li>\n<li><p><strong>env</strong> (<em>Optional</em><em>[</em><em>str</em><em> or </em><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.Env\"><em>Env</em></a><em>]</em>) \u2013 Environment in which the module should live on the cluster, if system is cluster.</p></li>\n<li><p><strong>dryrun</strong> (<em>bool</em>) \u2013 Whether to create the Blob if it doesn\u2019t exist, or load a Blob object as a dryrun.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The resulting module.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#runhouse.Module\" title=\"runhouse.Module\">Module</a></p>\n</dd>\n</dl>\n<dl>\n<dt>Example - creating a module by defining an rh.Module subclass:</dt><dd><div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">runhouse</span> <span class=\"k\">as</span> <span class=\"nn\">rh</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">transformers</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Sample rh.Module class</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Model</span><span class=\"p\">(</span><span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model_id</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"s2\">&quot;cpu&quot;</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"c1\"># Note that the code here will be run in your local environment prior to being sent to</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"c1\"># to a cluster. For loading large models/datasets that are only meant to be used remotely,</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"c1\"># we recommend using lazy initialization (see tokenizer and model attributes below).</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">env</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_id</span> <span class=\"o\">=</span> <span class=\"n\">model_id</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">device</span> <span class=\"o\">=</span> <span class=\"n\">device</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"nd\">@property</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"k\">def</span> <span class=\"nf\">tokenizer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"c1\"># Lazily initialize the tokenizer remotely only when it is needed</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s1\">&#39;_tokenizer&#39;</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>           <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_tokenizer</span> <span class=\"o\">=</span> <span class=\"n\">transformers</span><span class=\"o\">.</span><span class=\"n\">AutoTokenizer</span><span class=\"o\">.</span><span class=\"n\">from_pretrained</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_id</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_tokenizer</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"nd\">@property</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"k\">def</span> <span class=\"nf\">model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s1\">&#39;_model&#39;</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>           <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model</span> <span class=\"o\">=</span> <span class=\"n\">transformers</span><span class=\"o\">.</span><span class=\"n\">AutoModel</span><span class=\"o\">.</span><span class=\"n\">from_pretrained</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_id</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>   <span class=\"k\">def</span> <span class=\"nf\">predict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tokenizer</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">return_tensors</span><span class=\"o\">=</span><span class=\"s2\">&quot;pt&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Creating rh.Module instance</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">(</span><span class=\"n\">model_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;bert-base-uncased&quot;</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"s2\">&quot;cuda&quot;</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_gpu&quot;</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_env&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello world!&quot;</span><span class=\"p\">)</span>   <span class=\"c1\"># Runs on system in env</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tok</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">tokenizer</span>    <span class=\"c1\"># Returns remote tokenizer</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">local</span><span class=\"o\">.</span><span class=\"n\">model_id</span>       <span class=\"c1\"># Returns local model_id, if any</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">model_id</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">model_id</span>       <span class=\"c1\"># Returns local model_id (not remote)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">()</span>                   <span class=\"c1\"># Returns full remote module, including model and tokenizer</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n</pre></div>\n</div>\n</dd>\n<dt>Example - creating a Module from an existing class, via the rh.module() factory method:</dt><dd><div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">other_model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">(</span><span class=\"n\">model_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;bert-base-uncased&quot;</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"s2\">&quot;cuda&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_gpu&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;my_env&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Another method: Create a module instance from an existing non-Module class using rh.module()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">RemoteModel</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">BERTModel</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_gpu&quot;</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_env&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remote_model</span> <span class=\"o\">=</span> <span class=\"n\">RemoteModel</span><span class=\"p\">(</span><span class=\"n\">model_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;bert-base-uncased&quot;</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"s2\">&quot;cuda&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remote_model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello world!&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># Runs on system in env</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># You can also call remote class methods</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">other_model</span> <span class=\"o\">=</span> <span class=\"n\">RemoteModel</span><span class=\"o\">.</span><span class=\"n\">get_model_size</span><span class=\"p\">(</span><span class=\"s2\">&quot;bert-base-uncased&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Loading a module</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_local_module</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;~/my_module&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_s3_module</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;@/my_module&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n</dl>\n</dd></dl>\n\n</section>\n<section id=\"module-class\">\n<h2>Module Class<a class=\"headerlink\" href=\"#module-class\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">runhouse.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Module</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pointers</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Tuple</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">signature</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">endpoint</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.resources.envs.env.Env\"><span class=\"pre\">Env</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">provenance</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><blockquote>\n<div><dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pointers</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Tuple</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">signature</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">endpoint</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.resources.envs.env.Env\"><span class=\"pre\">Env</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">provenance</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.__init__\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Runhouse Module object</p>\n</dd></dl>\n\n</div></blockquote>\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.endpoint\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">endpoint</span></span><a class=\"headerlink\" href=\"#runhouse.Module.endpoint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The endpoint of the module on the cluster. If the module is local, this will be None.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.fetch\">\n<span class=\"sig-name descname\"><span class=\"pre\">fetch</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">item</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stream_logs</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.fetch\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.fetch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Helper method to allow for access to remote state, both public and private. Fetching functions\nis not advised. <cite>system.get(module.name).resolved_state()</cite> is roughly equivalent to <cite>module.fetch()</cite>.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_property&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_private_property&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MyRemoteClass</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"p\">(</span><span class=\"n\">my_class</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MyRemoteClass</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">()</span> <span class=\"c1\"># Returns a my_class instance, populated with the remote state</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_blob</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">()</span> <span class=\"c1\"># Returns the data of the blob, due to overloaded ``resolved_state`` method</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MyModule</span><span class=\"p\">(</span><span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"c1\"># ...</span>\n<span class=\"gp\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MyModule</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">()</span> <span class=\"c1\"># Returns the full remote module, including private and public state</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.fetch_async\">\n<em class=\"property\"><span class=\"pre\">async</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">fetch_async</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">remote</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stream_logs</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.fetch_async\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.fetch_async\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Async version of fetch. Can\u2019t be a property like <cite>fetch</cite> because __getattr__ can\u2019t be awaited.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">await</span> <span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">fetch_async</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_property&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">await</span> <span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">fetch_async</span><span class=\"p\">(</span><span class=\"s2\">&quot;_my_private_property&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.get_or_to\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_or_to</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">List</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.resources.envs.env.Env\"><span class=\"pre\">Env</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.get_or_to\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.get_or_to\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Check if the module already exists on the cluster, and if so return the module object.\nIf not, put the module on the cluster and return the remote module.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">remote_df</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_or_to</span><span class=\"p\">(</span><span class=\"n\">my_cluster</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;remote_model&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.local\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">local</span></span><a class=\"headerlink\" href=\"#runhouse.Module.local\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Helper property to allow for access to local properties, both public and private.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">local</span><span class=\"o\">.</span><span class=\"n\">my_property</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">local</span><span class=\"o\">.</span><span class=\"n\">_my_private_property</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">local</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"mi\">14</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.method_signature\">\n<span class=\"sig-name descname\"><span class=\"pre\">method_signature</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">method</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rich</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.method_signature\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.method_signature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extracts the properties of a method that we want to preserve when sending the method over the wire.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.refresh\">\n<span class=\"sig-name descname\"><span class=\"pre\">refresh</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.refresh\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.refresh\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Update the resource in the object store.</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.remote\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">remote</span></span><a class=\"headerlink\" href=\"#runhouse.Module.remote\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Helper property to allow for access to remote properties, both public and private. Returning functions\nis not advised.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">my_property</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">_my_private_property</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"mi\">14</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.rename\">\n<span class=\"sig-name descname\"><span class=\"pre\">rename</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.rename\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.rename\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Rename the module.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.replicate\">\n<span class=\"sig-name descname\"><span class=\"pre\">replicate</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_replicas</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">names</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">envs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">parallel</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.replicate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.replicate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Replicate the module on the cluster in a new env and return the new modules.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.resolve\">\n<span class=\"sig-name descname\"><span class=\"pre\">resolve</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.resolve\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.resolve\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specify that the module should resolve to a particular state when passed into a remote method. This is\nuseful if you want to revert the module\u2019s state to some \u201cRunhouse-free\u201d state once it is passed into a\nRunhouse-unaware function. For example, if you call a Runhouse-unaware function with <code class=\"docutils literal notranslate\"><span class=\"pre\">.remote()</span></code>,\nyou will be returned a Blob which wraps your data. If you want to pass that Blob into another function\nthat operates on the original data (e.g. a function that takes a numpy array), you can call\n<code class=\"docutils literal notranslate\"><span class=\"pre\">my_second_fn(my_blob.resolve())</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">my_blob</span></code> will be replaced with the contents of its <code class=\"docutils literal notranslate\"><span class=\"pre\">.data</span></code> on the\ncluster before being passed into <code class=\"docutils literal notranslate\"><span class=\"pre\">my_second_fn</span></code>.</p>\n<p>Resolved state is defined by the <code class=\"docutils literal notranslate\"><span class=\"pre\">resolved_state</span></code> method. By default, modules created with the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">rh.module</span></code> factory constructor will be resolved to their original non-module-wrapped class (or best attempt).\nModules which are defined as a subclass of <code class=\"docutils literal notranslate\"><span class=\"pre\">Module</span></code> will be returned as-is, as they have no other\n\u201coriginal class.\u201d</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_module</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"p\">(</span><span class=\"n\">my_class</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_remote_fn</span><span class=\"p\">(</span><span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">())</span> <span class=\"c1\"># my_module will be replaced with the original class `my_class`</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_result_blob</span> <span class=\"o\">=</span> <span class=\"n\">my_remote_fn</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_other_remote_fn</span><span class=\"p\">(</span><span class=\"n\">my_result_blob</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">())</span> <span class=\"c1\"># my_result_blob will be replaced with its data</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.resolved_state\">\n<span class=\"sig-name descname\"><span class=\"pre\">resolved_state</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.resolved_state\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.resolved_state\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the resolved state of the module. By default, this is the original class of the module if it was\ncreated with the <code class=\"docutils literal notranslate\"><span class=\"pre\">module</span></code> factory constructor.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.save\">\n<span class=\"sig-name descname\"><span class=\"pre\">save</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">overwrite</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.save\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.save\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Register the resource and save to local working_dir config and RNS config store.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.set_async\">\n<em class=\"property\"><span class=\"pre\">async</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">set_async</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">key</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.set_async\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.set_async\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Async version of property setter.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">await</span> <span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">set_async</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_property&quot;</span><span class=\"p\">,</span> <span class=\"n\">my_value</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">await</span> <span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">set_async</span><span class=\"p\">(</span><span class=\"s2\">&quot;_my_private_property&quot;</span><span class=\"p\">,</span> <span class=\"n\">my_value</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.share\">\n<span class=\"sig-name descname\"><span class=\"pre\">share</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visibility</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.share\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.share\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Grant access to the resource for a list of users (or a single user). If a user has a Runhouse account they\nwill receive an email notifying them of their new access. If the user does not have a Runhouse account they will\nalso receive instructions on creating one, after which they will be able to have access to the Resource. If\n<code class=\"docutils literal notranslate\"><span class=\"pre\">visibility</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">public</span></code>, users will not be notified.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>You can only grant access to other users if you have write access to the resource.</p>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>users</strong> (<em>Union</em><em>[</em><em>str</em><em>, </em><em>list</em><em>]</em><em>, </em><em>optional</em>) \u2013 Single user or list of user emails and / or runhouse account usernames.\nIf none are provided and <code class=\"docutils literal notranslate\"><span class=\"pre\">visibility</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">public</span></code>, resource will be made publicly\navailable to all users.</p></li>\n<li><p><strong>access_level</strong> (<code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ResourceAccess</span></code>, optional) \u2013 Access level to provide for the resource.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">read</span></code>.</p></li>\n<li><p><strong>visibility</strong> (<code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ResourceVisibility</span></code>, optional) \u2013 Type of visibility to provide for the shared\nresource. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>.</p></li>\n<li><p><strong>notify_users</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Whether to send an email notification to users who have been given access.\nNote: This is relevant for resources which are not <code class=\"docutils literal notranslate\"><span class=\"pre\">shareable</span></code>. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p></li>\n<li><p><strong>headers</strong> (<em>dict</em><em>, </em><em>optional</em>) \u2013 Request headers to provide for the request to RNS. Contains the user\u2019s auth token.\nExample: <code class=\"docutils literal notranslate\"><span class=\"pre\">{&quot;Authorization&quot;:</span> <span class=\"pre\">f&quot;Bearer</span> <span class=\"pre\">{token}&quot;}</span></code></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt><cite>added_users</cite>:</dt><dd><p>Users who already have a Runhouse account and have been granted access to the resource.</p>\n</dd>\n<dt><cite>new_users</cite>:</dt><dd><p>Users who do not have Runhouse accounts and received notifications via their emails.</p>\n</dd>\n<dt><cite>valid_users</cite>:</dt><dd><p>Set of valid usernames and emails from <code class=\"docutils literal notranslate\"><span class=\"pre\">users</span></code> parameter.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Tuple(Dict, Dict, Set)</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Write access to the resource for these specific users.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Visibility will be set to private (users can search for and view resource in Den dashboard)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_resource</span><span class=\"o\">.</span><span class=\"n\">share</span><span class=\"p\">(</span><span class=\"n\">users</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;username1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;user2@gmail.com&quot;</span><span class=\"p\">],</span> <span class=\"n\">access_level</span><span class=\"o\">=</span><span class=\"s1\">&#39;write&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Make resource public, with read access to the resource for all users</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_resource</span><span class=\"o\">.</span><span class=\"n\">share</span><span class=\"p\">(</span><span class=\"n\">visibility</span><span class=\"o\">=</span><span class=\"s1\">&#39;public&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Module.to\">\n<span class=\"sig-name descname\"><span class=\"pre\">to</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">env</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">List</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../env/#runhouse.Env\" title=\"runhouse.resources.envs.env.Env\"><span class=\"pre\">Env</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/module/#Module.to\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Module.to\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Put a copy of the module on the destination system and env, and return the new module.</p>\n<p class=\"rubric\">Example</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">local_module</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"p\">(</span><span class=\"n\">my_class</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cluster_module</span> <span class=\"o\">=</span> <span class=\"n\">local_module</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_cluster&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            name: \"python3\",\n            path: \"./api/python\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["api/python/folder", "Folder", "N", "next"], ["api/python/package", "Package", "P", "previous"]], "sourcename": "api/python/module.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Module</a><ul>\n<li><a class=\"reference internal\" href=\"#module-factory-method\">Module Factory Method</a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.module\"><code class=\"docutils literal notranslate\"><span class=\"pre\">module()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-class\">Module Class</a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.Module\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.endpoint\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.endpoint</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.fetch\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.fetch()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.fetch_async\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.fetch_async()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.get_or_to\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.get_or_to()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.local\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.local</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.method_signature\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.method_signature()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.refresh\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.refresh()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.remote\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.remote</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.rename\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.rename()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.replicate\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.replicate()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.resolve\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.resolve()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.resolved_state\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.resolved_state()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.save\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.save()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.set_async\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.set_async()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.share\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.share()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Module.to\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Module.to()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "globaltoc": "<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Getting Started</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick_start/\">Quick Start Guide</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"architecture/\">Architecture Overview</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api_tutorials/\">API Tutorials</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"tutorials/api/compute/\">Compute: Clusters, Functions, Packages, &amp; Envs</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"tutorials/api/data/\">Data: Folders, Tables, &amp; Blobs</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"tutorials/api/secrets/\">Secrets Management</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"tutorials/api/resources/\">Resource Management</a></li>\n</ul>\n</li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Reference</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/python/\">Python API</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/resource/\">Resource</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/function/\">Function</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/cluster/\">Cluster</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/env/\">Env</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/package/\">Package</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/module/\">Module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/folder/\">Folder</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/table/\">Table</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/blob/\">Blob</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/file/\">File</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/secrets/\">Secrets</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/login/\">Login/Logout</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/cli/\">Command Line Interface</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Usage Examples</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/examples/inference/\">Inference: Stable Diffusion and FLAN-T5</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/examples/training/\">Training: Transformers</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/examples/distributed/\">Distributed: HF Accelerate</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://github.com/run-house/funhouse/tree/main/bert_pipeline\">Pipelining: BERT</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Additional Resources</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"debugging_logging/\">Debugging and Logging</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"troubleshooting/\">Manual Setup and Troubleshooting</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"security_and_authentication/\">Security and Authentication</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://github.com/run-house/runhouse\">Source Code</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://api.run.house/docs\">REST API Guide</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://www.run.house/dashboard\">Runhouse Den Dashboard</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://github.com/run-house/funhouse\">Funhouse</a></li>\n</ul>\n", "current_page_name": "api/python/module", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}