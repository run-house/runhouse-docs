{"parents": [], "prev": null, "next": null, "title": "Run", "meta": {}, "body": "<section id=\"run\">\n<h1>Run<a class=\"headerlink\" href=\"#run\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>A Run is a Runhouse primitive used for capturing logs, inputs, results within a particular function call,\nCLI or Python command, or context manager.\nRuns also serve as a convenient way to trace the usage and upstream / downstream dependencies between different\nRunhouse artifacts.</p>\n<section id=\"run-factory-method\">\n<h2>Run Factory Method<a class=\"headerlink\" href=\"#run-factory-method\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"runhouse.run\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">runhouse.</span></span><span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log_dest</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">'file'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_config</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">load</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><a class=\"reference internal\" href=\"#runhouse.Run\" title=\"runhouse.resources.provenance.Run\"><span class=\"pre\">Run</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span></span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/provenance/#run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs a Run object.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>name</strong> (<em>Optional</em><em>[</em><em>str</em><em>]</em>) \u2013 Name of the Run to load.</p></li>\n<li><p><strong>log_dest</strong> (<em>Optional</em><em>[</em><em>str</em><em>]</em>) \u2013 Whether to save the Run\u2019s logs to a file or stream them back. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">file</span></code>)</p></li>\n<li><p><strong>path</strong> (<em>Optional</em><em>[</em><em>str</em><em>]</em>) \u2013 Path to the Run\u2019s dedicated folder on the system where the Run lives.</p></li>\n<li><p><strong>system</strong> (<em>Optional</em><em>[</em><em>str</em><em> or </em><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.Cluster\"><em>Cluster</em></a><em>]</em>) \u2013 File system or cluster name where the Run lives.\nIf providing a file system this must be one of:\n[<code class=\"docutils literal notranslate\"><span class=\"pre\">file</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">github</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sftp</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">ssh</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">s3</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">gs</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">azure</span></code>].\nWe are working to add additional file system support.</p></li>\n<li><p><strong>data_config</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>]</em>) \u2013 The data config to pass to the underlying fsspec handler for the folder.</p></li>\n<li><p><strong>load</strong> (<em>bool</em>) \u2013 Whether to try reloading an existing Run from configs. (Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>)</p></li>\n<li><p><strong>dryrun</strong> (<em>bool</em>) \u2013 Whether to create the Blob if it doesn\u2019t exist, or load a Blob object as a dryrun.\n(Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>)</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Optional kwargs for the Run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The loaded Run object.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#runhouse.Run\" title=\"runhouse.Run\">Run</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</section>\n<section id=\"run-class\">\n<h2>Run Class<a class=\"headerlink\" href=\"#run-class\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">runhouse.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fn_name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cmds</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">list</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log_dest</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">'file'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_config</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">status</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">RunStatus</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">RunStatus.NOT_STARTED</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_time</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_time</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">creator</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">creation_stacktrace</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">upstream_artifacts</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">List</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">downstream_artifacts</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">List</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_type</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">RunType</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">RunType.CMD_RUN</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">error</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">error_traceback</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">overwrite</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/provenance/#Run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Run\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><blockquote>\n<div><dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run.__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fn_name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cmds</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">list</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">log_dest</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">'file'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.resources.hardware.cluster.Cluster\"><span class=\"pre\">Cluster</span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_config</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">status</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">RunStatus</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">RunStatus.NOT_STARTED</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_time</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">end_time</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">creator</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">creation_stacktrace</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">upstream_artifacts</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">List</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">downstream_artifacts</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">List</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_type</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">RunType</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">RunType.CMD_RUN</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">error</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">error_traceback</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">overwrite</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dryrun</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/provenance/#Run.__init__\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Run.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Runhouse Run object</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>To load an existing Run, please use the factory method <a class=\"reference internal\" href=\"#runhouse.run\" title=\"runhouse.run\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">run()</span></code></a>.</p>\n</div>\n</dd></dl>\n\n</div></blockquote>\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run.config_for_rns\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">config_for_rns</span></span><a class=\"headerlink\" href=\"#runhouse.Run.config_for_rns\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Metadata to store in RNS for the Run.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run.inputs\">\n<span class=\"sig-name descname\"><span class=\"pre\">inputs</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">bytes</span></span></span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/provenance/#Run.inputs\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Run.inputs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load the pickled function inputs saved on the system for the Run.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run.refresh\">\n<span class=\"sig-name descname\"><span class=\"pre\">refresh</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><a class=\"reference internal\" href=\"#runhouse.Run\" title=\"runhouse.resources.provenance.Run\"><span class=\"pre\">Run</span></a></span></span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/provenance/#Run.refresh\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Run.refresh\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reload the Run object from the system. This is useful for checking the status of a Run.\nFor example: <code class=\"docutils literal notranslate\"><span class=\"pre\">my_run.refresh().status</span></code></p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run.result\">\n<span class=\"sig-name descname\"><span class=\"pre\">result</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/provenance/#Run.result\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Run.result\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Load the function result saved on the system for the Run. If the Run has failed return the stderr,\notherwise return the stdout.</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run.run_config\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">run_config</span></span><a class=\"headerlink\" href=\"#runhouse.Run.run_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Config to save in the Run\u2019s dedicated folder on the system.\nNote: this is different from the config saved in RNS, which is the metadata for the Run.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run.save\">\n<span class=\"sig-name descname\"><span class=\"pre\">save</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">overwrite</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/provenance/#Run.save\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Run.save\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If the Run name is being overwritten (ex: initially created with auto-generated name),\nupdate the Run config stored on the system before saving to RNS.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run.stderr\">\n<span class=\"sig-name descname\"><span class=\"pre\">stderr</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">str</span></span></span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/provenance/#Run.stderr\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Run.stderr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Read the stderr saved on the system for the Run.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run.stdout\">\n<span class=\"sig-name descname\"><span class=\"pre\">stdout</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">str</span></span></span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/provenance/#Run.stdout\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Run.stdout\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Read the stdout saved on the system for the Run.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run.to\">\n<span class=\"sig-name descname\"><span class=\"pre\">to</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">system</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data_config</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/provenance/#Run.to\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Run.to\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Send a Run to another system.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>system</strong> (<em>Union</em><em>[</em><em>str</em><em> or </em><a class=\"reference internal\" href=\"../cluster/#runhouse.Cluster\" title=\"runhouse.Cluster\"><em>Cluster</em></a><em>]</em>) \u2013 Name of the system or Cluster object to copy the Run to.</p></li>\n<li><p><strong>path</strong> (<em>Optional</em><em>[</em><em>str</em><em>]</em>) \u2013 Path to the on the system to save the Run.\nDefaults to the local path for Runs (in the rh folder of the working directory).</p></li>\n<li><p><strong>data_config</strong> (<em>Optional</em><em>[</em><em>dict</em><em>]</em>) \u2013 Config to pass into fsspec handler for copying the Run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>A copy of the Run on the destination system and path.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#runhouse.Run\" title=\"runhouse.Run\">Run</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"runhouse.Run.write\">\n<span class=\"sig-name descname\"><span class=\"pre\">write</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Any</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/runhouse/resources/provenance/#Run.write\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#runhouse.Run.write\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Write data (ex: function inputs or result, stdout, stderr) to the Run\u2019s dedicated folder on the system.</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n<section id=\"use-cases\">\n<h2>Use Cases<a class=\"headerlink\" href=\"#use-cases\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Runs can be useful in a number of different ways:</p>\n<ul class=\"simple\">\n<li><p><strong>Caching</strong>: Using Runs, we can easily trace the usage and dependencies between various\nresources. For example, we may have a pipeline that produces a pre-preprocessed dataset, trains a model, and exports\nthe model for inference. It would be useful to know which functions (or microservices) were used to produce each\nstage of the pipeline, and which data artifacts were created along the way. Caching also works among a team, so\nwhen one person on a team creates a Run, others can benefit from the cached result (without needing to check\nwhether the result is present yet).</p></li>\n<li><p><strong>Auditability</strong>: With Runs we can easily inspect inputs, logs and outputs for a particular function call or\ncommand execution. This makes it much easier to debug or reproduce a particular workflow.</p></li>\n<li><p><strong>Sharing</strong>: Runs (like all other Runhouse objects) can easily be shared among team members. This is useful when we have\ndifferent services that are dependent on a single output (e.g. a model).</p></li>\n<li><p><strong>Reusability</strong>: Runs make it much easier to reproduce or re-run previous workflows. For example, if we need to run\nsome script on a recurring basis, we don\u2019t have to worry about re-running each step in its entirety if we have already\nhave a cached run for that step.</p></li>\n</ul>\n</section>\n<section id=\"run-components\">\n<h2>Run Components<a class=\"headerlink\" href=\"#run-components\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>A Run may contain some (or all) of these core components:</p>\n<ul class=\"simple\">\n<li><p><strong>Name</strong>: A unique identifier for the Run.</p></li>\n<li><p><strong>Folder</strong>: Where the Run\u2019s data lives on its associated system.</p></li>\n<li><p><strong>Function</strong>: A function to be executed on a cluster.</p></li>\n<li><p><strong>Commands</strong>: A record of Python or CLI commands executed on a cluster.</p></li>\n<li><p><strong>Upstream dependencies</strong>: Runhouse artifacts loaded by the Run.</p></li>\n<li><p><strong>Downstream dependencies</strong>: Runhouse artifacts saved by the Run.</p></li>\n</ul>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Artifacts represent any Runhouse primitive (e.g. <a class=\"reference internal\" href=\"../blob/#blob\"><span class=\"std std-ref\">Blob</span></a>, <a class=\"reference internal\" href=\"../../../tutorials/api/compute/#function\"><span class=\"std std-ref\">Function</span></a>, <a class=\"reference internal\" href=\"../table/#table\"><span class=\"std std-ref\">Table</span></a>, etc.) that is\nloaded or saved by the Run.</p>\n</div>\n</section>\n<section id=\"run-data\">\n<h2>Run Data<a class=\"headerlink\" href=\"#run-data\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>When a Run is completed it stores the following information in its dedicated folder on the system:</p>\n<ul class=\"simple\">\n<li><p><strong>Config</strong>: A JSON of the Run\u2019s core data. This includes fields such as: <code class=\"code docutils literal notranslate\"><span class=\"pre\">name</span></code>, <code class=\"code docutils literal notranslate\"><span class=\"pre\">status</span></code>,\n<code class=\"code docutils literal notranslate\"><span class=\"pre\">start_time</span></code>, <code class=\"code docutils literal notranslate\"><span class=\"pre\">end_time</span></code>, <code class=\"code docutils literal notranslate\"><span class=\"pre\">run_type</span></code>, <code class=\"code docutils literal notranslate\"><span class=\"pre\">fn_name</span></code>, <code class=\"code docutils literal notranslate\"><span class=\"pre\">cmds</span></code>, <code class=\"code docutils literal notranslate\"><span class=\"pre\">upstream_artifacts</span></code>,\nand <code class=\"code docutils literal notranslate\"><span class=\"pre\">downstream_artifacts</span></code>.\nNote: When saving the Run to Runhouse Den (RNS) (via the <code class=\"code docutils literal notranslate\"><span class=\"pre\">save()</span></code> method), the Run\u2019s metadata that will be\nstored.</p></li>\n<li><p><strong>Function inputs</strong>: The pickled inputs to the function that triggered the Run (where relevant).</p></li>\n<li><p><strong>Function result</strong>: The pickled result of the function that triggered the Run (where relevant).</p></li>\n<li><p><strong>Stdout</strong>: Stdout from the Run\u2019s execution.</p></li>\n<li><p><strong>Stderr</strong>: Stderr from the Run\u2019s execution.</p></li>\n</ul>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>By default, the Run\u2019s folder sits in the <code class=\"code docutils literal notranslate\"><span class=\"pre\">~/.rh/logs/&lt;run_name&gt;</span></code> directory if the system is a cluster,\nor in the <code class=\"code docutils literal notranslate\"><span class=\"pre\">rh</span></code> folder of the working directory if the Run is local. See <a class=\"reference internal\" href=\"#run-logs\"><span class=\"std std-ref\">Run Logs</span></a> for more details.</p>\n</div>\n</section>\n<section id=\"creating-a-run\">\n<h2>Creating a Run<a class=\"headerlink\" href=\"#creating-a-run\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>There are three ways to create a Run:</p>\n<section id=\"calling-a-function\">\n<h3>Calling a Function<a class=\"headerlink\" href=\"#calling-a-function\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>We can create a Run when executing a function by providing the <code class=\"code docutils literal notranslate\"><span class=\"pre\">run_name</span></code> argument, a string\nrepresenting the custom name to assign the Run.\nBy default <code class=\"code docutils literal notranslate\"><span class=\"pre\">run_name</span></code> is set to <code class=\"code docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">runhouse</span> <span class=\"k\">as</span> <span class=\"nn\">rh</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">summer</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n<span class=\"c1\"># Initialize the cluster object (and provision the cluster if it does not already exist)</span>\n<span class=\"n\">cpu</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;^rh-cpu&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a function object and send it to the cpu cluster</span>\n<span class=\"n\">my_func</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">summer</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_test_func&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">cpu</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Call the function with its input args, and provide it with a `run_name` argument</span>\n<span class=\"n\">fn_res</span> <span class=\"o\">=</span> <span class=\"n\">my_func</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">run_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_fn_run&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>When this function <code class=\"code docutils literal notranslate\"><span class=\"pre\">my_func</span></code> is called, Runhouse triggers the function execution on the cluster\nand returns the Run\u2019s result. The Run\u2019s config metadata, inputs, and stdout / stderr are also stored in the .rh folder\nof the cluster\u2019s file system.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>In addition to calling the function directly, you can also\nuse <code class=\"code docutils literal notranslate\"><span class=\"pre\">.run()</span></code> <a class=\"reference internal\" href=\"#asynchronous-run\"><span class=\"std std-ref\">async interface</span></a>.</p>\n</div>\n</section>\n<section id=\"running-commands\">\n<h3>Running Commands<a class=\"headerlink\" href=\"#running-commands\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Another way to create a Run is by executing Python or CLI command(s).\nWhen we run these commands, the stdout and stderr from the command will be saved in the Run\u2019s dedicated\nfolder on the cluster.</p>\n<p>To create a Run by executing a CLI command:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Run a CLI command on the cluster and provide the `run_name` param to trigger a run</span>\n<span class=\"n\">return_codes</span> <span class=\"o\">=</span> <span class=\"n\">cpu</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"s2\">&quot;python --version&quot;</span><span class=\"p\">],</span> <span class=\"n\">run_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_cli_run&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>To create a Run by executing Python commands:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span> <span class=\"n\">return_codes</span> <span class=\"o\">=</span> <span class=\"n\">cpu</span><span class=\"o\">.</span><span class=\"n\">run_python</span><span class=\"p\">(</span>\n    <span class=\"p\">[</span>\n        <span class=\"s2\">&quot;import pickle&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;import logging&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;local_blob = rh.blob(name=&#39;local_blob&#39;, data=pickle.dumps(list(range(50))), mkdir=True).write()&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;logging.info(f&#39;Blob path: </span><span class=\"si\">{local_blob.path}</span><span class=\"s2\">&#39;)&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;local_blob.rm()&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">],</span>\n    <span class=\"n\">run_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_cli_run&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"advanced-api-usage\">\n<h3>Advanced API Usage<a class=\"headerlink\" href=\"#advanced-api-usage\" title=\"Permalink to this heading\">\u00b6</a></h3>\n</section>\n</section>\n<section id=\"loading-runs\">\n<h2>Loading Runs<a class=\"headerlink\" href=\"#loading-runs\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>There are a few ways to load a Run:</p>\n<ul class=\"simple\">\n<li><p><strong>From a cluster</strong>: Load a Run that lives on a cluster by using <code class=\"code docutils literal notranslate\"><span class=\"pre\">cluster.get_run()</span></code>.\nThis method takes a <code class=\"code docutils literal notranslate\"><span class=\"pre\">run_name</span></code> argument with the name of the Run to load.</p></li>\n<li><p><strong>From a system</strong>: Load a Run from any system by using the the <code class=\"code docutils literal notranslate\"><span class=\"pre\">rh.run()</span></code> method. This method takes either\na <code class=\"code docutils literal notranslate\"><span class=\"pre\">path</span></code> argument specifying the path to the Run\u2019s folder, or a <code class=\"code docutils literal notranslate\"><span class=\"pre\">name</span></code> argument specifying the\nname of the Run to load.</p></li>\n</ul>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Each of these methods will return a <a class=\"reference internal\" href=\"#run\"><span class=\"std std-ref\">Run</span></a> object.</p>\n</div>\n<p><strong>Loading Results</strong></p>\n<p>To load the results of the Run, we can call the <code class=\"code docutils literal notranslate\"><span class=\"pre\">result()</span></code> method:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Load the run from its cluster</span>\n<span class=\"n\">fn_run</span> <span class=\"o\">=</span> <span class=\"n\">cpu</span><span class=\"o\">.</span><span class=\"n\">get_run</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_fn_run&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If the function for this run has finished executing, we can load the result:</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">fn_run</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<div class=\"admonition tip\">\n<p class=\"admonition-title\">Tip</p>\n<p>We can also call <code class=\"code docutils literal notranslate\"><span class=\"pre\">fn_run.stderr()</span></code> to view the Run\u2019s stderr output, and <code class=\"code docutils literal notranslate\"><span class=\"pre\">fn_run.stdout()</span></code>\nto view the Run\u2019s stdout output.</p>\n</div>\n</section>\n<section id=\"accessing-and-using-runs\">\n<h2>Accessing and Using Runs<a class=\"headerlink\" href=\"#accessing-and-using-runs\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>We can trace activity and capture logs within a block of code using a context manager. By default the Run\u2019s config\nwill be stored on the local filesystem in the <code class=\"code docutils literal notranslate\"><span class=\"pre\">rh/&lt;run_name&gt;</span></code> folder of the current working directory,\nor the <code class=\"code docutils literal notranslate\"><span class=\"pre\">.rh/logs/&lt;run_name&gt;</span></code> folder if running on a cluster.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">runhouse</span> <span class=\"k\">as</span> <span class=\"nn\">rh</span>\n\n<span class=\"k\">with</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;ctx_run&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">r</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Add all Runhouse objects loaded or saved in the context manager to</span>\n    <span class=\"c1\"># the Run&#39;s artifact registry (upstream + downstream artifacts)</span>\n\n    <span class=\"n\">my_func</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_existing_run&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">my_func</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_new_func&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">my_func</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">run_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_new_run&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">current_run</span> <span class=\"o\">=</span> <span class=\"n\">my_func</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">get_run</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_new_run&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">run_res</span> <span class=\"o\">=</span> <span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">current_run</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">())</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Run result: </span><span class=\"si\">{</span><span class=\"n\">run_res</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Saved Run to path: </span><span class=\"si\">{</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>We can specify the path to the Run\u2019s folder by providing the <code class=\"code docutils literal notranslate\"><span class=\"pre\">path</span></code> argument to the <code class=\"code docutils literal notranslate\"><span class=\"pre\">Run</span></code> object.\nIf we do not specify a path the folder will be created in the <code class=\"code docutils literal notranslate\"><span class=\"pre\">rh</span></code> folder of the current working directory.</p>\n</div>\n<p>We can then re-load this Run from its system (in this case the local file system):</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">runhouse</span> <span class=\"k\">as</span> <span class=\"nn\">rh</span>\n\n<span class=\"n\">ctx_run</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">&quot;~/rh/runs/my_ctx_run&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"caching\">\n<h2>Caching<a class=\"headerlink\" href=\"#caching\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Runhouse provides varying levels of control for running and caching the results of a Run.</p>\n<p>We can invoke a run both synchronously and asynchronously, and with or without caching:</p>\n<section id=\"synchronous-run\">\n<h3>Synchronous Run<a class=\"headerlink\" href=\"#synchronous-run\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>To create a Run which executes a function synchronously without any caching, we call the function and\nprovide the <code class=\"code docutils literal notranslate\"><span class=\"pre\">run_name</span></code> argument. The function will be executed on the cluster, and will\nreturn its result once completed.</p>\n<p>For a fully synchronous run which also checks for a cached result, we can call the <code class=\"code docutils literal notranslate\"><span class=\"pre\">get_or_call()</span></code> method\non the function. If a result already exists with this Run name, the result will be returned.\nOtherwise, the function will be executed synchronously on the cluster and the result will be returned once\nthe function execution is complete:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">runhouse</span> <span class=\"k\">as</span> <span class=\"nn\">rh</span>\n\n<span class=\"n\">my_func</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_func&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">my_func</span><span class=\"o\">.</span><span class=\"n\">get_or_call</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">run_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_fn_run&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"asynchronous-run\">\n<h3>Asynchronous Run<a class=\"headerlink\" href=\"#asynchronous-run\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>To run a function asynchronously without any caching, we can call the <code class=\"code docutils literal notranslate\"><span class=\"pre\">run()</span></code> method. The function will\nbegin executing on the cluster in the background, and in the meantime a <code class=\"code docutils literal notranslate\"><span class=\"pre\">Run</span></code> object will be returned:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">runhouse</span> <span class=\"k\">as</span> <span class=\"nn\">rh</span>\n\n<span class=\"n\">my_func</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_func&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">run_obj</span> <span class=\"o\">=</span> <span class=\"n\">my_func</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">run_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_async_run&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>For a fully asynchronous run which also checks for a cached result, we can call the <code class=\"code docutils literal notranslate\"><span class=\"pre\">get_or_run()</span></code> method\non the function. A <code class=\"code docutils literal notranslate\"><span class=\"pre\">Run</span></code> object will be returned whether the result is cached or not:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">runhouse</span> <span class=\"k\">as</span> <span class=\"nn\">rh</span>\n\n<span class=\"n\">my_func</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_func&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">run_obj</span> <span class=\"o\">=</span> <span class=\"n\">my_func</span><span class=\"o\">.</span><span class=\"n\">get_or_run</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">run_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_async_run&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</section>\n<section id=\"moving-runs-between-systems\">\n<h2>Moving Runs Between Systems<a class=\"headerlink\" href=\"#moving-runs-between-systems\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>To copy the Run\u2019s folder contents from the cluster to the local environment:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_run</span> <span class=\"o\">=</span> <span class=\"n\">cpu</span><span class=\"o\">.</span><span class=\"n\">get_run</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_run&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">local_run</span> <span class=\"o\">=</span> <span class=\"n\">my_run</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"s2\">&quot;here&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>By default, this will be copied in to the <code class=\"code docutils literal notranslate\"><span class=\"pre\">rh</span></code> directory in your current projects working directory, but\nyou can overwrite this by passing in a <code class=\"code docutils literal notranslate\"><span class=\"pre\">path</span></code> parameter.</p>\n<p>To copy the Run\u2019s folder contents to a remote storage bucket:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_run</span> <span class=\"o\">=</span> <span class=\"n\">cpu</span><span class=\"o\">.</span><span class=\"n\">get_run</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_run&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">my_run_on_s3</span> <span class=\"o\">=</span> <span class=\"n\">my_run</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"s2\">&quot;s3&quot;</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">&quot;/s3-bucket/s3-folder&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"run-logs\">\n<h2>Run Logs<a class=\"headerlink\" href=\"#run-logs\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>You can view a Run\u2019s logs in python:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cpu</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_run&quot;</span><span class=\"p\">,</span> <span class=\"n\">stream_logs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Or via the command line:</p>\n<div class=\"highlight-cli notranslate\"><div class=\"highlight\"><pre><span></span>runhouse logs cpu my_run\n</pre></div>\n</div>\n</section>\n<section id=\"cancelling-a-run\">\n<h2>Cancelling a Run<a class=\"headerlink\" href=\"#cancelling-a-run\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>For cancelling a Run:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cpu</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_run&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Or via the command line:</p>\n<div class=\"highlight-cli notranslate\"><div class=\"highlight\"><pre><span></span>runhouse cancel cpu my_run\n</pre></div>\n</div>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            name: \"python3\",\n            path: \"./api/python\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "api/python/run.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Run</a><ul>\n<li><a class=\"reference internal\" href=\"#run-factory-method\">Run Factory Method</a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">run()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#run-class\">Run Class</a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.Run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#runhouse.Run.__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run.__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Run.config_for_rns\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run.config_for_rns</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Run.inputs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run.inputs()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Run.refresh\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run.refresh()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Run.result\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run.result()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Run.run_config\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run.run_config</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Run.save\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run.save()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Run.stderr\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run.stderr()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Run.stdout\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run.stdout()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Run.to\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run.to()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runhouse.Run.write\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Run.write()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#use-cases\">Use Cases</a></li>\n<li><a class=\"reference internal\" href=\"#run-components\">Run Components</a></li>\n<li><a class=\"reference internal\" href=\"#run-data\">Run Data</a></li>\n<li><a class=\"reference internal\" href=\"#creating-a-run\">Creating a Run</a><ul>\n<li><a class=\"reference internal\" href=\"#calling-a-function\">Calling a Function</a></li>\n<li><a class=\"reference internal\" href=\"#running-commands\">Running Commands</a></li>\n<li><a class=\"reference internal\" href=\"#advanced-api-usage\">Advanced API Usage</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#loading-runs\">Loading Runs</a></li>\n<li><a class=\"reference internal\" href=\"#accessing-and-using-runs\">Accessing and Using Runs</a></li>\n<li><a class=\"reference internal\" href=\"#caching\">Caching</a><ul>\n<li><a class=\"reference internal\" href=\"#synchronous-run\">Synchronous Run</a></li>\n<li><a class=\"reference internal\" href=\"#asynchronous-run\">Asynchronous Run</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#moving-runs-between-systems\">Moving Runs Between Systems</a></li>\n<li><a class=\"reference internal\" href=\"#run-logs\">Run Logs</a></li>\n<li><a class=\"reference internal\" href=\"#cancelling-a-run\">Cancelling a Run</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "globaltoc": "<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Getting Started</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api/quick_start/\">Getting Started</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"architecture/\">Architecture Overview</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api_tutorials/\">API Tutorials</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"tutorials/api/compute/\">Compute: Clusters, Functions, Packages, &amp; Envs</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"tutorials/api/data/\">Data: Folders, Tables, &amp; Blobs</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"tutorials/api/secrets/\">Secrets Management</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"tutorials/api/resources/\">Resource Management</a></li>\n</ul>\n</li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Reference</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/python/\">Python API</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/resource/\">Resource</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/function/\">Function</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/cluster/\">Cluster</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/env/\">Env</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/package/\">Package</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/module/\">Module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/mapper/\">Mapper</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/folder/\">Folder</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/table/\">Table</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/blob/\">Blob</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/file/\">File</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/secrets/\">Secrets</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/login/\">Login/Logout</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/cli/\">Command Line Interface</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Usage Examples</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/examples/inference/\">Inference: Stable Diffusion and FLAN-T5</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/examples/training/\">Training: Transformers</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/examples/distributed/\">Distributed: HF Accelerate</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://github.com/run-house/funhouse/tree/main/bert_pipeline\">Pipelining: BERT</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Additional Resources</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"debugging_logging/\">Debugging and Logging</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"troubleshooting/\">Manual Setup and Troubleshooting</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"security_and_authentication/\">Security and Authentication</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://github.com/run-house/runhouse\">Source Code</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://api.run.house/docs\">REST API Guide</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://www.run.house/dashboard\">Runhouse Den Dashboard</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://github.com/run-house/funhouse\">Funhouse</a></li>\n</ul>\n", "current_page_name": "api/python/run", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}