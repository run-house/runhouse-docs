{"parents": [{"link": "../../../", "title": "Module code"}], "title": "runhouse.rns.blob", "body": "<h1>Source code for runhouse.rns.blob</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rh_config</span> <span class=\"kn\">import</span> <span class=\"n\">rns_client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.api_utils.utils</span> <span class=\"kn\">import</span> <span class=\"n\">generate_uuid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.folders</span> <span class=\"kn\">import</span> <span class=\"n\">Folder</span><span class=\"p\">,</span> <span class=\"n\">folder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.resource</span> <span class=\"kn\">import</span> <span class=\"n\">Resource</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.utils.hardware</span> <span class=\"kn\">import</span> <span class=\"n\">_current_cluster</span><span class=\"p\">,</span> <span class=\"n\">_get_cluster_from</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"Blob\"><a class=\"viewcode-back\" href=\"../../../../api/python/blob/#runhouse.Blob\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Blob</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"n\">RESOURCE_TYPE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;blob&quot;</span>\n    <span class=\"n\">DEFAULT_FOLDER_PATH</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;/runhouse-blob&quot;</span>\n    <span class=\"n\">DEFAULT_CACHE_FOLDER</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;.cache/runhouse/blobs&quot;</span>\n\n<div class=\"viewcode-block\" id=\"Blob.__init__\"><a class=\"viewcode-back\" href=\"../../../../api/python/blob/#runhouse.Blob.__init__\">[docs]</a>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Folder</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_FS</span><span class=\"p\">,</span>\n        <span class=\"n\">data_config</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Runhouse Blob object</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">                To build a Blob, please use the factory method :func:`blob`.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filename</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">path</span> <span class=\"k\">else</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n        <span class=\"c1\"># Use factory method so correct subclass for system is returned</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"p\">(</span>\n            <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">path</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"n\">path</span><span class=\"p\">,</span>\n            <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">system</span><span class=\"p\">,</span>\n            <span class=\"n\">data_config</span><span class=\"o\">=</span><span class=\"n\">data_config</span><span class=\"p\">,</span>\n            <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cached_data</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">config_for_rns</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">config_for_rns</span>\n        <span class=\"n\">blob_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;path&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">,</span>  <span class=\"c1\"># pair with data source to create the physical URL</span>\n            <span class=\"s2\">&quot;resource_type&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">RESOURCE_TYPE</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_resource_string_for_subconfig</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">),</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">blob_config</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Blob</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get the blob data.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cached_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cached_data</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">data</span>\n\n    <span class=\"nd\">@data</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_data</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Update the data blob to new data.&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cached_data</span> <span class=\"o\">=</span> <span class=\"n\">new_data</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">system</span>\n\n    <span class=\"nd\">@system</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_system</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">new_system</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filename</span>\n\n    <span class=\"nd\">@path</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_path</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">new_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filename</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">new_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">data_config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">data_config</span>\n\n    <span class=\"nd\">@data_config</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">data_config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_data_config</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">data_config</span> <span class=\"o\">=</span> <span class=\"n\">new_data_config</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">fsspec_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">fsspec_url</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filename</span>\n\n<div class=\"viewcode-block\" id=\"Blob.open\"><a class=\"viewcode-back\" href=\"../../../../api/python/blob/#runhouse.Blob.open\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;rb&quot;</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get a file-like (OpenFile container object) of the blob data.</span>\n<span class=\"sd\">        User must close the file, or use this method inside of a with statement.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; with my_blob.open(mode=&quot;wb&quot;) as f:</span>\n<span class=\"sd\">            &gt;&gt;&gt;     f.write(data)</span>\n<span class=\"sd\">            &gt;&gt;&gt;</span>\n<span class=\"sd\">            &gt;&gt;&gt; obj = my_blob.open()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filename</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"n\">mode</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Blob.to\"><a class=\"viewcode-back\" href=\"../../../../api/python/blob/#runhouse.Blob.to\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">to</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">data_config</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return a copy of the blob on the destination system and path.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; local_blob = rh.blob(data)</span>\n<span class=\"sd\">            &gt;&gt;&gt; s3_blob = blob.to(&quot;s3&quot;)</span>\n<span class=\"sd\">            &gt;&gt;&gt; cluster_blob = blob.to(my_cluster)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">new_blob</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">new_blob</span><span class=\"o\">.</span><span class=\"n\">_folder</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span>\n            <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">data_config</span><span class=\"o\">=</span><span class=\"n\">data_config</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_blob</span></div>\n\n<div class=\"viewcode-block\" id=\"Blob.fetch\"><a class=\"viewcode-back\" href=\"../../../../api/python/blob/#runhouse.Blob.fetch\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">fetch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return the data for the user to deserialize.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; serialized_data = blob.fetch()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cached_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filename</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cached_data</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_save_sub_resources</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">Resource</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n<div class=\"viewcode-block\" id=\"Blob.write\"><a class=\"viewcode-back\" href=\"../../../../api/python/blob/#runhouse.Blob.write\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Save the underlying blob to its specified fsspec URL.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; rh.blob(serialized_data, path=&quot;path/to/save&quot;).write()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"c1\"># TODO figure out default behavior for not overwriting but still saving</span>\n        <span class=\"c1\"># if not overwrite:</span>\n        <span class=\"c1\">#     TODO check if data_url is already in use</span>\n        <span class=\"c1\">#     time = datetime.today().strftime(&#39;%Y-%m-%d_%H:%M:%S&#39;)</span>\n        <span class=\"c1\">#     self.data_url = self.data_url + time or time</span>\n\n        <span class=\"c1\"># TODO check if self._cached_data is None, and if so, don&#39;t just download it to then save it again?</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">()</span>\n        <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;wb&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">):</span>\n                <span class=\"c1\"># Avoid TypeError: a bytes-like object is required</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;Cannot save blob with data of type </span><span class=\"si\">{</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">, data must be serialized&quot;</span>\n                <span class=\"p\">)</span>\n\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"Blob.rm\"><a class=\"viewcode-back\" href=\"../../../../api/python/blob/#runhouse.Blob.rm\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">rm</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Delete the blob and the folder it lives in from the file system.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; blob = rh.blob(serialized_data, path=&quot;saved/path&quot;)</span>\n<span class=\"sd\">            &gt;&gt;&gt; blob.rm()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">rm</span><span class=\"p\">(</span><span class=\"n\">contents</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filename</span><span class=\"p\">],</span> <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Blob.exists_in_system\"><a class=\"viewcode-back\" href=\"../../../../api/python/blob/#runhouse.Blob.exists_in_system\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">exists_in_system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Check whether the blob exists in the file system</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; blob = rh.blob(serialized_data, path=&quot;saved/path&quot;)</span>\n<span class=\"sd\">            &gt;&gt;&gt; blob.exists_in_system()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_folder</span><span class=\"o\">.</span><span class=\"n\">fsspec_fs</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fsspec_url</span><span class=\"p\">)</span></div>\n\n    <span class=\"c1\"># TODO [DG] get rid of this in favor of just &quot;sync_down(path, system)&quot; ?</span>\n<div class=\"viewcode-block\" id=\"Blob.sync_from_cluster\"><a class=\"viewcode-back\" href=\"../../../../api/python/blob/#runhouse.Blob.sync_from_cluster\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">sync_from_cluster</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Efficiently rsync down a blob from a cluster, into the path of the current Blob object.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; remote_blob = rh.blob(serialized_data, system=my_cluster)</span>\n<span class=\"sd\">            &gt;&gt;&gt; remote_blob.sync_from_cluster()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Cluster must be started before copying data to it.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">_rsync</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">up</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"blob\"><a class=\"viewcode-back\" href=\"../../../../api/python/blob/#runhouse.blob\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">blob</span><span class=\"p\">(</span>\n    <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">data_config</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Returns a Blob object, which can be used to interact with the resource at the given path</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        data: Blob data. This should be provided as a serialized object.</span>\n<span class=\"sd\">        name (Optional[str]): Name to give the blob object, to be reused later on.</span>\n<span class=\"sd\">        path (Optional[str]): Path (or path) of the blob object.</span>\n<span class=\"sd\">        system (Optional[str or Cluster]): File system or cluster name. If providing a file system this must be one of:</span>\n<span class=\"sd\">            [``file``, ``github``, ``sftp``, ``ssh``, ``s3``, ``gs``, ``azure``].</span>\n<span class=\"sd\">            We are working to add additional file system support.</span>\n<span class=\"sd\">        data_config (Optional[Dict]): The data config to pass to the underlying fsspec handler.</span>\n<span class=\"sd\">        dryrun (bool): Whether to create the Blob if it doesn&#39;t exist, or load a Blob object as a dryrun.</span>\n<span class=\"sd\">            (Default: ``False``)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        Blob: The resulting blob.</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; import runhouse as rh</span>\n<span class=\"sd\">        &gt;&gt;&gt; import json</span>\n<span class=\"sd\">        &gt;&gt;&gt; data = json.dumps(list(range(50))</span>\n<span class=\"sd\">        &gt;&gt;&gt;</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Remote blob with name and no path (saved to bucket called runhouse/blobs/my-blob)</span>\n<span class=\"sd\">        &gt;&gt;&gt; rh.blob(name=&quot;@/my-blob&quot;, data=data, system=&#39;s3&#39;).write()</span>\n<span class=\"sd\">        &gt;&gt;&gt;</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Remote blob with name and path</span>\n<span class=\"sd\">        &gt;&gt;&gt; rh.blob(name=&#39;@/my-blob&#39;, path=&#39;/runhouse-tests/my_blob.pickle&#39;, system=&#39;s3&#39;).save()</span>\n<span class=\"sd\">        &gt;&gt;&gt;</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Local blob with name and path, save to local filesystem</span>\n<span class=\"sd\">        &gt;&gt;&gt; rh.blob(data=data, path=str(Path.cwd() / &quot;my_blob.pickle&quot;)).write()</span>\n<span class=\"sd\">        &gt;&gt;&gt;</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Local blob with name and no path (saved to ~/.cache/blobs/my-blob)</span>\n<span class=\"sd\">        &gt;&gt;&gt; rh.blob(name=&quot;~/my-blob&quot;, data=data).write().save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # Loading a blob</span>\n<span class=\"sd\">        &gt;&gt;&gt; my_local_blob = rh.blob(name=&quot;~/my_blob&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; my_s3_blob = rh.blob(name=&quot;@/my_blob&quot;)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">([</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">data_config</span><span class=\"p\">]):</span>\n        <span class=\"c1\"># Try reloading existing blob</span>\n        <span class=\"k\">return</span> <span class=\"n\">Blob</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n    <span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">_get_cluster_from</span><span class=\"p\">(</span>\n        <span class=\"n\">system</span> <span class=\"ow\">or</span> <span class=\"n\">_current_cluster</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;config&quot;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">Folder</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_FS</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">path</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">blob_name_in_path</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">generate_uuid</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">resolve_rns_data_resource_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">system</span> <span class=\"o\">==</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_FS</span> <span class=\"ow\">or</span> <span class=\"p\">(</span>\n            <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">Resource</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">on_this_cluster</span><span class=\"p\">()</span>\n        <span class=\"p\">):</span>\n            <span class=\"c1\"># create random path to store in .cache folder of local filesystem</span>\n            <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span>\n                <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;~/</span><span class=\"si\">{</span><span class=\"n\">Blob</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_CACHE_FOLDER</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"n\">blob_name_in_path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># save to the default bucket</span>\n            <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">Blob</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_FOLDER_PATH</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"n\">blob_name_in_path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n    <span class=\"n\">new_blob</span> <span class=\"o\">=</span> <span class=\"n\">Blob</span><span class=\"p\">(</span>\n        <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">data_config</span><span class=\"o\">=</span><span class=\"n\">data_config</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">new_blob</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">data</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">new_blob</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/rns/blob", "sidebars": ["sidebar-logo.html", "search-field.html", "sbt-sidebar-nav.html", "sbt-sidebar-footer.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "author": "the Runhouse team \ud83c\udfc3\u200d\u2640\ufe0f\ud83c\udfe0", "theme_use_edit_page_button": false, "theme_search_bar_text": "Search the docs ...", "theme_show_toc_level": 1}