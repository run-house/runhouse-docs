{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "runhouse.rns.envs.env", "body": "<h1>Source code for runhouse.rns.envs.env</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.folders</span> <span class=\"kn\">import</span> <span class=\"n\">Folder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.hardware</span> <span class=\"kn\">import</span> <span class=\"n\">Cluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.packages</span> <span class=\"kn\">import</span> <span class=\"n\">Package</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.resource</span> <span class=\"kn\">import</span> <span class=\"n\">Resource</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.utils.hardware</span> <span class=\"kn\">import</span> <span class=\"n\">_get_cluster_from</span>\n\n\n<div class=\"viewcode-block\" id=\"Env\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.Env\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Env</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"n\">RESOURCE_TYPE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;env&quot;</span>\n\n<div class=\"viewcode-block\" id=\"Env.__init__\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.Env.__init__\">[docs]</a>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">reqs</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Package</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[],</span>\n        <span class=\"n\">setup_cmds</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">env_vars</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{},</span>\n        <span class=\"n\">working_dir</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Path</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>  <span class=\"c1\"># We have this here to ignore extra arguments when calling from_config</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Runhouse Env object.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">            To create an Env, please use the factory method :func:`env`.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reqs</span> <span class=\"o\">=</span> <span class=\"n\">reqs</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup_cmds</span> <span class=\"o\">=</span> <span class=\"n\">setup_cmds</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span> <span class=\"o\">=</span> <span class=\"n\">env_vars</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_dir</span> <span class=\"o\">=</span> <span class=\"n\">working_dir</span></div>\n\n<div class=\"viewcode-block\" id=\"Env.from_config\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.Env.from_config\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create an Env object from a config dict&quot;&quot;&quot;</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">req</span>\n            <span class=\"k\">for</span> <span class=\"n\">req</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;working_dir&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;working_dir&quot;</span><span class=\"p\">],</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;working_dir&quot;</span><span class=\"p\">],</span> <span class=\"nb\">dict</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;working_dir&quot;</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">resource_subtype</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;resource_subtype&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">resource_subtype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;CondaEnv&quot;</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">runhouse</span> <span class=\"kn\">import</span> <span class=\"n\">CondaEnv</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">CondaEnv</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">Env</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">config_for_rns</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">config_for_rns</span>\n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_resource_string_for_subconfig</span><span class=\"p\">(</span><span class=\"n\">package</span><span class=\"p\">)</span>\n                    <span class=\"k\">for</span> <span class=\"n\">package</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reqs</span>\n                <span class=\"p\">],</span>\n                <span class=\"s2\">&quot;setup_cmds&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup_cmds</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;env_vars&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;working_dir&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_resource_string_for_subconfig</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_dir</span><span class=\"p\">),</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">reqs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reqs</span> <span class=\"ow\">or</span> <span class=\"p\">[])</span> <span class=\"o\">+</span> <span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_dir</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_dir</span> <span class=\"k\">else</span> <span class=\"p\">[])</span>\n\n    <span class=\"nd\">@reqs</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">reqs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">reqs</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reqs</span> <span class=\"o\">=</span> <span class=\"n\">reqs</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_reqs_to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">],</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">mount</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Send self.reqs to the system (cluster or file system)&quot;&quot;&quot;</span>\n        <span class=\"n\">new_reqs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">req</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reqs</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                <span class=\"n\">new_req</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">new_req</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">):</span>\n                    <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">new_req</span>\n\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">Package</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">):</span>\n                <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                    <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">mount</span><span class=\"o\">=</span><span class=\"n\">mount</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n            <span class=\"n\">new_reqs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_dir</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">new_reqs</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">new_reqs</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_reqs</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_setup_env</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Cluster</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Install packages and run setup commands on the cluster.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reqs</span><span class=\"p\">:</span>\n            <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">install_packages</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reqs</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup_cmds</span><span class=\"p\">:</span>\n            <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup_cmds</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Env.to\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.Env.to\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">],</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">mount</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Send environment to the system (Cluster or file system).</span>\n<span class=\"sd\">        This includes installing packages and running setup commands if system is a cluster.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; env = rh.env(reqs=[&quot;numpy&quot;, &quot;pip&quot;])</span>\n<span class=\"sd\">            &gt;&gt;&gt; cluster_env = env.to(my_cluster)</span>\n<span class=\"sd\">            &gt;&gt;&gt; s3_env = env.to(&quot;s3&quot;, path=&quot;s3_bucket/my_env&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">_get_cluster_from</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n        <span class=\"n\">new_env</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">reqs</span><span class=\"p\">,</span> <span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">working_dir</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reqs_to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">mount</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">):</span>\n            <span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">_setup_env</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">new_env</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_activate_cmd</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_run_cmd</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/rns/envs/env", "sidebars": ["sidebar-logo.html", "search-field.html", "sbt-sidebar-nav.html", "sbt-sidebar-footer.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "author": "the Runhouse team \ud83c\udfc3\u200d\u2640\ufe0f\ud83c\udfe0", "theme_use_edit_page_button": false, "theme_search_bar_text": "Search the docs ...", "theme_show_toc_level": 1}