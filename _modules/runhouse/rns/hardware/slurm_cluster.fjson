{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "runhouse.rns.hardware.slurm_cluster", "body": "<h1>Source code for runhouse.rns.hardware.slurm_cluster</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sky.utils</span> <span class=\"kn\">import</span> <span class=\"n\">command_runner</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.hardware.cluster</span> <span class=\"kn\">import</span> <span class=\"n\">Cluster</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"SlurmCluster\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SlurmCluster\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">SlurmCluster</span><span class=\"p\">(</span><span class=\"n\">Cluster</span><span class=\"p\">):</span>\n    <span class=\"n\">RESOURCE_TYPE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;cluster&quot;</span>\n    <span class=\"n\">PARTITION_SERVER_JOB</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;partition_server&quot;</span>\n\n<div class=\"viewcode-block\" id=\"SlurmCluster.__init__\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SlurmCluster.__init__\">[docs]</a>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">ip</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">ssh_creds</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">partition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">restart_server</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>  <span class=\"c1\"># We have this here to ignore extra arguments when calling from from_config</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">            To build a slurm cluster, please use the factory method :func:`slurm_cluster`.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">partition</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;No partition provided. Cluster will be assumed to be single-node.&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">partition</span> <span class=\"o\">=</span> <span class=\"n\">partition</span>\n\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n            <span class=\"n\">ips</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ip</span><span class=\"p\">],</span>\n            <span class=\"n\">ssh_creds</span><span class=\"o\">=</span><span class=\"n\">ssh_creds</span><span class=\"p\">,</span>\n            <span class=\"n\">restart_server</span><span class=\"o\">=</span><span class=\"n\">restart_server</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_launch_partition_server</span><span class=\"p\">(</span><span class=\"n\">restart_server</span><span class=\"o\">=</span><span class=\"n\">restart_server</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">cluster_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">SlurmCluster</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">cluster_config</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">config_for_rns</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Metadata to store in RNS for the Slurm Cluster.&quot;&quot;&quot;</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">config_for_rns</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">save_attrs_to_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;partition&quot;</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n<div class=\"viewcode-block\" id=\"SlurmCluster.jump_run\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SlurmCluster.jump_run\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">jump_run</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">job_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">fn</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">commands</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"s2\">&quot;Env&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">mail_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">mail_user</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Submit a function or command(s) to run on the slurm cluster. Runhouse will send an RPC to the jump server</span>\n<span class=\"sd\">        and push the job into a queue on the cluster for execution.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            job_name (str, optional): Name to assign to the job.</span>\n<span class=\"sd\">                If none provided will use the name of the cluster.</span>\n<span class=\"sd\">            fn (Callable, optional): A function to run on the cluster. If not provided, ``commands`` must be provided.</span>\n<span class=\"sd\">            commands (List[str], optional): A list of commands to run on the cluster.</span>\n<span class=\"sd\">                If not provided, ``fn`` must be provided.</span>\n<span class=\"sd\">            env (Union[Env, str], optional): Environment to install package on.</span>\n<span class=\"sd\">                If left empty, defaults to base environment.</span>\n<span class=\"sd\">            mail_type (str, optional): The type of email to send.</span>\n<span class=\"sd\">                Options include: ``NONE``, ``BEGIN``, ``END``, ``FAIL``, ``REQUEUE``, ``ALL``.</span>\n<span class=\"sd\">            mail_user (str, optional): The email address to send the email to. If not provided, no email will be sent.</span>\n<span class=\"sd\">            *args: Arguments to pass to the function.</span>\n<span class=\"sd\">            **kwargs: Keyword arguments to pass to the function.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">runhouse</span> <span class=\"kn\">import</span> <span class=\"n\">function</span>\n\n        <span class=\"n\">fn_obj</span> <span class=\"o\">=</span> <span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">fn</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">fn</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">submit_job</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">job_name</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">fn_obj</span><span class=\"o\">=</span><span class=\"n\">fn_obj</span><span class=\"p\">,</span>\n            <span class=\"n\">partition</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">partition</span><span class=\"p\">,</span>\n            <span class=\"n\">commands</span><span class=\"o\">=</span><span class=\"n\">commands</span><span class=\"p\">,</span>\n            <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">env</span><span class=\"p\">,</span>\n            <span class=\"n\">mail_type</span><span class=\"o\">=</span><span class=\"n\">mail_type</span><span class=\"p\">,</span>\n            <span class=\"n\">mail_user</span><span class=\"o\">=</span><span class=\"n\">mail_user</span><span class=\"p\">,</span>\n            <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">,</span>\n            <span class=\"n\">kwargs</span><span class=\"o\">=</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SlurmCluster.srun\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SlurmCluster.srun\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">srun</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">commands</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span>\n        <span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"s2\">&quot;Env&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">stream_logs</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Run a command (e.g. srun / sbatch) on the slurm cluster, without respecting queueing.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">commands</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">stream_logs</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SlurmCluster.sync_data_to_cluster\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SlurmCluster.sync_data_to_cluster\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">sync_data_to_cluster</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"sd\">&quot;&quot;&quot;Sync data from local machine to the jumpbox or login node.</span>\n<span class=\"sd\">        Note: We assume data stored on the jump server will be automatically synced with the requested resources&#39;</span>\n<span class=\"sd\">        node where the job will be run.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">command_runner</span><span class=\"o\">.</span><span class=\"n\">SSHCommandRunner</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ssh_creds</span><span class=\"p\">())</span>\n\n        <span class=\"c1\"># Up: indicates that we are syncing from local to the cluster</span>\n        <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">rsync</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">up</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_launch_partition_server</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">restart_server</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">job_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">job_name</span> <span class=\"o\">=</span> <span class=\"n\">job_name</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PARTITION_SERVER_JOB</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">restart_server</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_partition_server_is_running</span><span class=\"p\">(</span><span class=\"n\">job_name</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">path_to_partition_server</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;runhouse.servers.http.slurm.partition_server&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">partition</span><span class=\"p\">:</span>\n            <span class=\"n\">queue_return_codes</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"sa\">f</span><span class=\"s2\">&quot;squeue -n </span><span class=\"si\">{</span><span class=\"n\">job_name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">])</span>\n            <span class=\"k\">if</span> <span class=\"n\">job_name</span> <span class=\"ow\">in</span> <span class=\"n\">queue_return_codes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                <span class=\"c1\"># TODO [JL] kill the partition server job if it&#39;s running</span>\n                <span class=\"k\">pass</span>\n\n            <span class=\"n\">partition_server_cmd</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;srun -J </span><span class=\"si\">{</span><span class=\"n\">job_name</span><span class=\"si\">}</span><span class=\"s2\"> -o %j.out -e %j.err &quot;</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;python3 -m </span><span class=\"si\">{</span><span class=\"n\">path_to_partition_server</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\">#  If not using slurm to launch the partition server (e.g. on a single node cluster), then</span>\n            <span class=\"c1\">#  run the partition server as a python process</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;No partition specified. Running partition server as a python process on </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">kill_cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;pkill -f </span><span class=\"si\">{</span><span class=\"n\">path_to_partition_server</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"n\">kill_cmd</span><span class=\"p\">])</span>\n\n            <span class=\"n\">python_cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;python3 -m </span><span class=\"si\">{</span><span class=\"n\">path_to_partition_server</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"n\">partition_server_cmd</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;screen -dm bash -c &#39;</span><span class=\"si\">{</span><span class=\"n\">python_cmd</span><span class=\"si\">}</span><span class=\"s2\"> |&amp; tee &quot;</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;-a ~/.rh/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PARTITION_SERVER_JOB</span><span class=\"si\">}</span><span class=\"s2\">.log 2&gt;&amp;1&#39;&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">partition_status_codes</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"n\">partition_server_cmd</span><span class=\"p\">])</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">partition_status_codes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Failed to launch partition server for </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_partition_server_is_running</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">job_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">partition</span><span class=\"p\">:</span>\n            <span class=\"n\">status_codes</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"sa\">f</span><span class=\"s2\">&quot;squeue --name </span><span class=\"si\">{</span><span class=\"n\">job_name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">])</span>\n            <span class=\"k\">if</span> <span class=\"n\">job_name</span> <span class=\"ow\">in</span> <span class=\"n\">status_codes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">status_codes</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;ps aux | grep &#39;[r]unhouse.servers.http.slurm.partition_server&#39;&quot;</span><span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;partition_server&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">status_codes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/rns/hardware/slurm_cluster", "sidebars": ["sidebar-logo.html", "search-field.html", "sbt-sidebar-nav.html", "sbt-sidebar-footer.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "author": "the Runhouse team \ud83c\udfc3\u200d\u2640\ufe0f\ud83c\udfe0", "theme_use_edit_page_button": false, "theme_search_bar_text": "Search the docs ...", "theme_show_toc_level": 1}