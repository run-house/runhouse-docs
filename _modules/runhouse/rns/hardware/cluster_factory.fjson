{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "runhouse.rns.hardware.cluster_factory", "body": "<h1>Source code for runhouse.rns.hardware.cluster_factory</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">..utils.hardware</span> <span class=\"kn\">import</span> <span class=\"n\">RESERVED_SYSTEM_NAMES</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.cluster</span> <span class=\"kn\">import</span> <span class=\"n\">Cluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.on_demand_cluster</span> <span class=\"kn\">import</span> <span class=\"n\">OnDemandCluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.sagemaker_cluster</span> <span class=\"kn\">import</span> <span class=\"n\">SageMakerCluster</span>\n\n\n<span class=\"c1\"># Cluster factory method</span>\n<div class=\"viewcode-block\" id=\"cluster\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.cluster\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">cluster</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">ssh_creds</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Cluster</span><span class=\"p\">,</span> <span class=\"n\">OnDemandCluster</span><span class=\"p\">,</span> <span class=\"n\">SageMakerCluster</span><span class=\"p\">]:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Builds an instance of :class:`Cluster`.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        name (str): Name for the cluster, to re-use later on.</span>\n<span class=\"sd\">        host (str or List[str], optional): Hostname, IP address, or list of IP addresses for the BYO cluster.</span>\n<span class=\"sd\">        ssh_creds (dict, optional): Dictionary mapping SSH credentials.</span>\n<span class=\"sd\">            Example: ``ssh_creds={&#39;ssh_user&#39;: &#39;...&#39;, &#39;ssh_private_key&#39;:&#39;&lt;path_to_key&gt;&#39;}``</span>\n<span class=\"sd\">        dryrun (bool): Whether to create the Cluster if it doesn&#39;t exist, or load a Cluster object as a dryrun.</span>\n<span class=\"sd\">            (Default: ``False``)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        Union[Cluster, OnDemandCluster, SageMakerCluster]: The resulting cluster.</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # using private key</span>\n<span class=\"sd\">        &gt;&gt;&gt; gpu = rh.cluster(host=&#39;&lt;hostname&gt;&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  ssh_creds={&#39;ssh_user&#39;: &#39;...&#39;, &#39;ssh_private_key&#39;:&#39;&lt;path_to_key&gt;&#39;},</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  name=&#39;rh-a10x&#39;).save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # using password</span>\n<span class=\"sd\">        &gt;&gt;&gt; gpu = rh.cluster(host=&#39;&lt;hostname&gt;&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  ssh_creds={&#39;ssh_user&#39;: &#39;...&#39;, &#39;password&#39;:&#39;*****&#39;},</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  name=&#39;rh-a10x&#39;).save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # Load cluster from above</span>\n<span class=\"sd\">        &gt;&gt;&gt; reloaded_cluster = rh.cluster(name=&quot;rh-a10x&quot;)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"s2\">&quot;ips&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n        <span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;ips&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;``ips`` argument has been deprecated. Please use ``host`` to refer to the cluster IPs or host instead.&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"n\">host</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">ssh_creds</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n        <span class=\"c1\"># If only the name is provided and dryrun is set to True</span>\n        <span class=\"k\">return</span> <span class=\"n\">Cluster</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">RESERVED_SYSTEM_NAMES</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Cluster name </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> is a reserved name. Please use a different name which is not one of &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">RESERVED_SYSTEM_NAMES</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"s2\">&quot;instance_type&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;The `cluster` factory is intended to be used for static clusters. &quot;</span>\n            <span class=\"s2\">&quot;If you would like to create an on-demand cluster, please use `rh.ondemand_cluster()` instead.&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">ondemand_cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span>\n        <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;role&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;estimator&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;instance_type&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;autostop_mins&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;connection_wait_time&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;instance_count&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;The `cluster` factory is intended to be used for static clusters. &quot;</span>\n            <span class=\"s2\">&quot;If you would like to create a sagemaker cluster, please use `rh.sagemaker_cluster()` instead.&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">sagemaker_cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">Cluster</span><span class=\"p\">(</span><span class=\"n\">ips</span><span class=\"o\">=</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">ssh_creds</span><span class=\"o\">=</span><span class=\"n\">ssh_creds</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span></div>\n\n\n<span class=\"c1\"># OnDemandCluster factory method</span>\n<span class=\"k\">def</span> <span class=\"nf\">ondemand_cluster</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">instance_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">num_instances</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">provider</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">autostop_mins</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">use_spot</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">image_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">region</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">OnDemandCluster</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Builds an instance of :class:`OnDemandCluster`.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        name (str): Name for the cluster, to re-use later on.</span>\n<span class=\"sd\">        instance_type (int, optional): Type of cloud instance to use for the cluster. This could</span>\n<span class=\"sd\">            be a Runhouse built-in type, or your choice of instance type.</span>\n<span class=\"sd\">        num_instances (int, optional): Number of instances to use for the cluster.</span>\n<span class=\"sd\">        provider (str, optional): Cloud provider to use for the cluster.</span>\n<span class=\"sd\">        autostop_mins (int, optional): Number of minutes to keep the cluster up after inactivity,</span>\n<span class=\"sd\">            or ``-1`` to keep cluster up indefinitely.</span>\n<span class=\"sd\">        use_spot (bool, optional): Whether or not to use spot instance.</span>\n<span class=\"sd\">        image_id (str, optional): Custom image ID for the cluster.</span>\n<span class=\"sd\">        region (str, optional): The region to use for the cluster.</span>\n<span class=\"sd\">        dryrun (bool): Whether to create the Cluster if it doesn&#39;t exist, or load a Cluster object as a dryrun.</span>\n<span class=\"sd\">            (Default: ``False``)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        OnDemandCluster: The resulting cluster.</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; import runhouse as rh</span>\n<span class=\"sd\">        &gt;&gt;&gt; # On-Demand SkyPilot Cluster (OnDemandCluster)</span>\n<span class=\"sd\">        &gt;&gt;&gt; gpu = rh.ondemand_cluster(name=&#39;rh-4-a100s&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  instance_type=&#39;A100:4&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  provider=&#39;gcp&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  autostop_mins=-1,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  use_spot=True,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  image_id=&#39;my_ami_string&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  region=&#39;us-east-1&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  ).save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # Load cluster from above</span>\n<span class=\"sd\">        &gt;&gt;&gt; reloaded_cluster = rh.ondemand_cluster(name=&quot;rh-4-a100s&quot;)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">([</span><span class=\"n\">instance_type</span><span class=\"p\">,</span> <span class=\"n\">num_instances</span><span class=\"p\">,</span> <span class=\"n\">provider</span><span class=\"p\">,</span> <span class=\"n\">image_id</span><span class=\"p\">,</span> <span class=\"n\">region</span><span class=\"p\">]):</span>\n        <span class=\"c1\"># If only the name is provided and dryrun is set to True</span>\n        <span class=\"k\">return</span> <span class=\"n\">Cluster</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">RESERVED_SYSTEM_NAMES</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Cluster name </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> is a reserved name. Please use a different name which is not one of &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">RESERVED_SYSTEM_NAMES</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">OnDemandCluster</span><span class=\"p\">(</span>\n        <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"n\">instance_type</span><span class=\"p\">,</span>\n        <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"n\">provider</span><span class=\"p\">,</span>\n        <span class=\"n\">num_instances</span><span class=\"o\">=</span><span class=\"n\">num_instances</span><span class=\"p\">,</span>\n        <span class=\"n\">autostop_mins</span><span class=\"o\">=</span><span class=\"n\">autostop_mins</span><span class=\"p\">,</span>\n        <span class=\"n\">use_spot</span><span class=\"o\">=</span><span class=\"n\">use_spot</span><span class=\"p\">,</span>\n        <span class=\"n\">image_id</span><span class=\"o\">=</span><span class=\"n\">image_id</span><span class=\"p\">,</span>\n        <span class=\"n\">region</span><span class=\"o\">=</span><span class=\"n\">region</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"sagemaker_cluster\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.sagemaker_cluster\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">sagemaker_cluster</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">role</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">profile</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">ssh_key_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">instance_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">instance_count</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">image_uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">autostop_mins</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">connection_wait_time</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">estimator</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"s2\">&quot;sagemaker.estimator.EstimatorBase&quot;</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">job_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">SageMakerCluster</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Builds an instance of :class:`SageMakerCluster`.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        name (str): Name for the cluster, to re-use later on.</span>\n<span class=\"sd\">        role (str, optional): An AWS IAM role (either name or full ARN).</span>\n<span class=\"sd\">            Can be passed in explicitly as an argument or provided via an estimator. If not specified will try</span>\n<span class=\"sd\">            using the ``profile`` attribute or environment variable ``AWS_PROFILE`` to extract the relevant role ARN.</span>\n<span class=\"sd\">            More info on configuring an IAM role for SageMaker</span>\n<span class=\"sd\">            `here &lt;https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html&gt;`_.</span>\n<span class=\"sd\">        profile (str, optional): AWS profile to use for the cluster. If provided instead of a ``role``, will lookup</span>\n<span class=\"sd\">            the role ARN associated with the profile in the local AWS credentials.</span>\n<span class=\"sd\">            If not provided, will use the ``default`` profile.</span>\n<span class=\"sd\">        ssh_key_path (str, optional): Path (relative or absolute) to private SSH key to use for connecting to</span>\n<span class=\"sd\">            the cluster. If not provided, will look for the key in path ``~/.ssh/sagemaker-ssh-gw``.</span>\n<span class=\"sd\">            If not found will generate new keys and upload the public key to the default s3 bucket for the Role ARN.</span>\n<span class=\"sd\">        instance_id (str, optional): ID of the AWS instance to use for the cluster. SageMaker does not expose</span>\n<span class=\"sd\">            IP addresses of its instance, so we use an instance ID as a unique identifier for the cluster.</span>\n<span class=\"sd\">        instance_type (str, optional): Type of AWS instance to use for the cluster. More info on supported</span>\n<span class=\"sd\">            instance options `here &lt;https://aws.amazon.com/sagemaker/pricing/instance-types&gt;`_.</span>\n<span class=\"sd\">            (Default: ``ml.m5.large``.)</span>\n<span class=\"sd\">        instance_count (int, optional): Number of instances to use for the cluster.</span>\n<span class=\"sd\">            (Default: ``1``.)</span>\n<span class=\"sd\">        image_uri (str, optional): Image to use for the cluster instead of using the default SageMaker image which</span>\n<span class=\"sd\">            will be based on the framework_version and py_version. Can be an ECR url or dockerhub image and tag.</span>\n<span class=\"sd\">        estimator (Union[str, sagemaker.estimator.EstimatorBase], optional): Estimator to use for a dedicated</span>\n<span class=\"sd\">            training job. Leave as ``None`` if launching the compute without running a dedicated job.</span>\n<span class=\"sd\">            More info on creating an estimator `here</span>\n<span class=\"sd\">            &lt;https://sagemaker.readthedocs.io/en/stable/frameworks/pytorch/using_pytorch.html#create-an-estimator&gt;`_.</span>\n<span class=\"sd\">        autostop_mins (int, optional): Number of minutes to keep the cluster up after inactivity,</span>\n<span class=\"sd\">            or ``-1`` to keep cluster up indefinitely. *Note: this will keep the cluster up even if a dedicated</span>\n<span class=\"sd\">            training job has finished running or failed*.</span>\n<span class=\"sd\">        connection_wait_time (int, optional): Amount of time to wait inside the SageMaker cluster before</span>\n<span class=\"sd\">            continuing with normal execution. Useful if you want to connect before a dedicated job starts</span>\n<span class=\"sd\">            (e.g. training). If you don&#39;t want to wait, set it to ``0``.</span>\n<span class=\"sd\">            If no estimator is provided, will default to ``0``.</span>\n<span class=\"sd\">        job_name (str, optional): Name to provide for a training job. If not provided will generate a default name</span>\n<span class=\"sd\">            based on the image name and current timestamp (e.g. ``pytorch-training-2023-08-28-20-57-55-113``).</span>\n<span class=\"sd\">        dryrun (bool): Whether to create the SageMakerCluster if it doesn&#39;t exist, or load a SageMakerCluster object</span>\n<span class=\"sd\">            as a dryrun.</span>\n<span class=\"sd\">            (Default: ``False``)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        SageMakerCluster: The resulting cluster.</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; import runhouse as rh</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Launch a new SageMaker instance and keep it up indefinitely.</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Note: This will use Role ARN associated with the &quot;sagemaker&quot; profile defined in the local aws credentials</span>\n<span class=\"sd\">        &gt;&gt;&gt; c = rh.sagemaker_cluster(name=&#39;sm-cluster&#39;, profile=&quot;sagemaker&quot;).save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # Running a training job with a provided Estimator</span>\n<span class=\"sd\">        &gt;&gt;&gt; c = rh.sagemaker_cluster(name=&#39;sagemaker-cluster&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                          estimator=PyTorch(entry_point=&#39;train.py&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                            role=&#39;arn:aws:iam::123456789012:role/MySageMakerRole&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                            source_dir=&#39;/Users/myuser/dev/sagemaker&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                            framework_version=&#39;1.8.1&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                            py_version=&#39;py36&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                            instance_type=&#39;ml.p3.2xlarge&#39;),</span>\n<span class=\"sd\">        &gt;&gt;&gt;                          ).save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # Load cluster from above</span>\n<span class=\"sd\">        &gt;&gt;&gt; reloaded_cluster = rh.sagemaker_cluster(name=&quot;sagemaker-cluster&quot;)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">ssh_key_path</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"n\">SageMakerCluster</span><span class=\"o\">.</span><span class=\"n\">_relative_ssh_path</span><span class=\"p\">(</span><span class=\"n\">ssh_key_path</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">ssh_key_path</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n        <span class=\"n\">alt_options</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n            <span class=\"n\">role</span><span class=\"o\">=</span><span class=\"n\">role</span><span class=\"p\">,</span>\n            <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"n\">profile</span><span class=\"p\">,</span>\n            <span class=\"n\">ssh_key_path</span><span class=\"o\">=</span><span class=\"n\">ssh_key_path</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_id</span><span class=\"o\">=</span><span class=\"n\">instance_id</span><span class=\"p\">,</span>\n            <span class=\"n\">image_uri</span><span class=\"o\">=</span><span class=\"n\">image_uri</span><span class=\"p\">,</span>\n            <span class=\"n\">estimator</span><span class=\"o\">=</span><span class=\"n\">estimator</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"n\">instance_type</span><span class=\"p\">,</span>\n            <span class=\"n\">job_name</span><span class=\"o\">=</span><span class=\"n\">job_name</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_count</span><span class=\"o\">=</span><span class=\"n\">instance_count</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># Filter out None/default values</span>\n        <span class=\"n\">alt_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">alt_options</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">}</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">SageMakerCluster</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">,</span> <span class=\"n\">alt_options</span><span class=\"o\">=</span><span class=\"n\">alt_options</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">c</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">c</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">RESERVED_SYSTEM_NAMES</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Cluster name </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> is a reserved name. Please use a different name which is not one of &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">RESERVED_SYSTEM_NAMES</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">SageMakerCluster</span><span class=\"p\">(</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">role</span><span class=\"o\">=</span><span class=\"n\">role</span><span class=\"p\">,</span>\n        <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"n\">profile</span><span class=\"p\">,</span>\n        <span class=\"n\">ssh_key_path</span><span class=\"o\">=</span><span class=\"n\">ssh_key_path</span><span class=\"p\">,</span>\n        <span class=\"n\">estimator</span><span class=\"o\">=</span><span class=\"n\">estimator</span><span class=\"p\">,</span>\n        <span class=\"n\">job_name</span><span class=\"o\">=</span><span class=\"n\">job_name</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_id</span><span class=\"o\">=</span><span class=\"n\">instance_id</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"n\">instance_type</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_count</span><span class=\"o\">=</span><span class=\"n\">instance_count</span><span class=\"p\">,</span>\n        <span class=\"n\">image_uri</span><span class=\"o\">=</span><span class=\"n\">image_uri</span><span class=\"p\">,</span>\n        <span class=\"n\">autostop_mins</span><span class=\"o\">=</span><span class=\"n\">autostop_mins</span><span class=\"p\">,</span>\n        <span class=\"n\">connection_wait_time</span><span class=\"o\">=</span><span class=\"n\">connection_wait_time</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/rns/hardware/cluster_factory", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.13"}