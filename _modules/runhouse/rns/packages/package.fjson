{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "runhouse.rns.packages.package", "body": "<h1>Source code for runhouse.rns.packages.package</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse</span> <span class=\"kn\">import</span> <span class=\"n\">rh_config</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.folders.folder</span> <span class=\"kn\">import</span> <span class=\"n\">Folder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.resource</span> <span class=\"kn\">import</span> <span class=\"n\">Resource</span>\n\n<span class=\"n\">INSTALL_METHODS</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;local&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">}</span>\n\n\n<div class=\"viewcode-block\" id=\"Package\"><a class=\"viewcode-back\" href=\"../../../../../rh_primitives/package/#runhouse.Package\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Package</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"n\">RESOURCE_TYPE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;package&quot;</span>\n\n<div class=\"viewcode-block\" id=\"Package.__init__\"><a class=\"viewcode-back\" href=\"../../../../../rh_primitives/package/#runhouse.Package.__init__\">[docs]</a>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">install_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">install_target</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">install_args</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>  <span class=\"c1\"># We have this here to ignore extra arguments when calling from from_config</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Runhouse Package resource.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">=</span> <span class=\"n\">install_method</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span> <span class=\"o\">=</span> <span class=\"n\">install_target</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_args</span> <span class=\"o\">=</span> <span class=\"n\">install_args</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">config_for_rns</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># If the package is just a simple Package.from_string string, no</span>\n        <span class=\"c1\"># need to store it in rns, just give back the string.</span>\n        <span class=\"c1\"># if self.install_method in [&#39;pip&#39;, &#39;conda&#39;, &#39;git&#39;]:</span>\n        <span class=\"c1\">#     return f&#39;{self.install_method}:{self.name}&#39;</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">config_for_rns</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_method&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_target&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_resource_string_for_subconfig</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_args&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_args</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Package: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">):</span>\n            <span class=\"c1\"># if self.install_target.name:</span>\n            <span class=\"c1\">#     return f&#39;Package: {self.install_target.name}&#39;</span>\n            <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Package: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Package: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<div class=\"viewcode-block\" id=\"Package.install\"><a class=\"viewcode-back\" href=\"../../../../../rh_primitives/package/#runhouse.Package.install\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">install</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Install package.&quot;&quot;&quot;</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Installing package </span><span class=\"si\">{</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\"> with method </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"n\">install_args</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot; </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_args</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_args</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">):</span>\n            <span class=\"n\">local_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">local_path</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">local_path</span><span class=\"p\">:</span>\n                <span class=\"n\">local_path</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;~/&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n            <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">is_local</span><span class=\"p\">():</span>\n                <span class=\"c1\"># TODO [DG] replace this with empty mount() call to be put in tmp folder by Folder</span>\n                <span class=\"n\">local_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">mount</span><span class=\"p\">(</span>\n                    <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;~/</span><span class=\"si\">{</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">stem</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                <span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">:</span>\n                <span class=\"c1\"># TODO [DG] Revisit: Would be nice if we could use -e by default, but importlib on the grpc server</span>\n                <span class=\"c1\">#  isn&#39;t finding the package right after its installed.</span>\n                <span class=\"c1\"># if (Path(local_path) / &#39;setup.py&#39;).exists():</span>\n                <span class=\"c1\">#     install_cmd = f&#39;-e {local_path}&#39; + install_args</span>\n                <span class=\"c1\"># else:</span>\n                <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">local_path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"o\">+</span> <span class=\"n\">install_args</span>\n            <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">local_path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"o\">+</span> <span class=\"n\">install_args</span>\n            <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">local_path</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;requirements.txt&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n                    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                        <span class=\"sa\">f</span><span class=\"s2\">&quot;Attempting to install requirements from </span><span class=\"si\">{</span><span class=\"n\">local_path</span><span class=\"si\">}</span><span class=\"s2\">/requirements.txt&quot;</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pip_install</span><span class=\"p\">(</span>\n                        <span class=\"sa\">f</span><span class=\"s2\">&quot;-r </span><span class=\"si\">{</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">local_path</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">/requirements.txt&quot;</span> <span class=\"o\">+</span> <span class=\"n\">install_args</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">local_path</span><span class=\"si\">}</span><span class=\"s2\">/requirements.txt not found, skipping&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span> <span class=\"o\">+</span> <span class=\"n\">install_args</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pip_install</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">conda_install</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;local&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">):</span>\n                <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">local_path</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n                <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;install_target must be a Folder or a path to a directory for &quot;</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;install_method </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                <span class=\"p\">)</span>\n        <span class=\"c1\"># elif self.install_method == &#39;unpickle&#39;:</span>\n        <span class=\"c1\">#     # unpickle the functions and make them importable</span>\n        <span class=\"c1\">#     with self.get(&#39;functions.pickle&#39;) as f:</span>\n        <span class=\"c1\">#         sys.modules[self.name] = pickle.load(f)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Unknown install_method </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span><span class=\"si\">}</span><span class=\"s2\">. Try using cluster.run() or &quot;</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;function.run_setup() to install instead.&quot;</span>\n            <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Package.pip_install\"><a class=\"viewcode-back\" href=\"../../../../../rh_primitives/package/#runhouse.Package.pip_install\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pip_install</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Run pip install.&quot;&quot;&quot;</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Running: pip install </span><span class=\"si\">{</span><span class=\"n\">install_cmd</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_call</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">executable</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-m&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;install&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">install_cmd</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Package.conda_install\"><a class=\"viewcode-back\" href=\"../../../../../rh_primitives/package/#runhouse.Package.conda_install\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conda_install</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Run conda install.&quot;&quot;&quot;</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Running: conda install </span><span class=\"si\">{</span><span class=\"n\">install_cmd</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"c1\"># check if conda is installed, and if not, install it</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_call</span><span class=\"p\">([</span><span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--version&quot;</span><span class=\"p\">])</span>\n            <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;install&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-y&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">install_cmd</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">))</span>\n        <span class=\"k\">except</span> <span class=\"ne\">FileNotFoundError</span><span class=\"p\">:</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Conda not found, installing...&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_call</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh &quot;</span>\n                <span class=\"s2\">&quot;-O ~/miniconda.sh&quot;</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_call</span><span class=\"p\">([</span><span class=\"s2\">&quot;bash&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;~/miniconda.sh&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-b&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-p&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;~/miniconda&quot;</span><span class=\"p\">])</span>\n            <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_call</span><span class=\"p\">(</span><span class=\"s2\">&quot;source $HOME/miniconda3/bin/activate&quot;</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">))</span>\n            <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_call</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;install&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-y&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">install_cmd</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;Conda install failed, check that the package exists and is &quot;</span>\n                    <span class=\"s2\">&quot;available for your platform.&quot;</span>\n                <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Package.to_cluster\"><a class=\"viewcode-back\" href=\"../../../../../rh_primitives/package/#runhouse.Package.to_cluster\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">to_cluster</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dest_cluster</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Cluster&quot;</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">mount</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Returns a copy of the package on the destination cluster.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;`install_target` must be a Folder in order to copy the package to a cluster&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">new_folder</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">to_cluster</span><span class=\"p\">(</span>\n            <span class=\"n\">dest_cluster</span><span class=\"p\">,</span>\n            <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span>\n            <span class=\"n\">mount</span><span class=\"o\">=</span><span class=\"n\">mount</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">new_folder</span><span class=\"o\">.</span><span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;file&quot;</span>\n        <span class=\"n\">new_package</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">new_package</span><span class=\"o\">.</span><span class=\"n\">install_target</span> <span class=\"o\">=</span> <span class=\"n\">new_folder</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_package</span></div>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;resource_subtype&quot;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;GitPackage&quot;</span><span class=\"p\">:</span>\n\n            <span class=\"kn\">from</span> <span class=\"nn\">runhouse</span> <span class=\"kn\">import</span> <span class=\"n\">GitPackage</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">GitPackage</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_string</span><span class=\"p\">(</span><span class=\"n\">specifier</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Use regex to check if specifier matches &#39;&lt;method&gt;:https://github.com/&lt;path&gt;&#39; or &#39;https://github.com/&lt;path&gt;&#39;</span>\n        <span class=\"n\">match</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span>\n            <span class=\"sa\">r</span><span class=\"s2\">&quot;^(?:(?P&lt;method&gt;[^:]+):)?(?P&lt;path&gt;https://github.com/.+)&quot;</span><span class=\"p\">,</span> <span class=\"n\">specifier</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">match</span><span class=\"p\">:</span>\n            <span class=\"n\">install_method</span> <span class=\"o\">=</span> <span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"s2\">&quot;method&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"s2\">&quot;path&quot;</span><span class=\"p\">)</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.packages.git_package</span> <span class=\"kn\">import</span> <span class=\"n\">git_package</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">git_package</span><span class=\"p\">(</span>\n                <span class=\"n\">git_url</span><span class=\"o\">=</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"n\">install_method</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">target_and_args</span> <span class=\"o\">=</span> <span class=\"n\">specifier</span>\n        <span class=\"k\">if</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;:&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"n\">INSTALL_METHODS</span><span class=\"p\">:</span>\n            <span class=\"n\">target_and_args</span> <span class=\"o\">=</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;:&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">rel_target</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"n\">target_and_args</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot; &quot;</span> <span class=\"ow\">in</span> <span class=\"n\">target_and_args</span>\n            <span class=\"k\">else</span> <span class=\"p\">(</span><span class=\"n\">target_and_args</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># We need to do this because relative paths are relative to the current working directory!</span>\n        <span class=\"n\">abs_target</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">rel_target</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">rel_target</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">is_absolute</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">rh_config</span><span class=\"o\">.</span><span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">locate_working_dir</span><span class=\"p\">())</span> <span class=\"o\">/</span> <span class=\"n\">rel_target</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">abs_target</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n            <span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">Folder</span><span class=\"p\">(</span>\n                <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">rel_target</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n            <span class=\"p\">)</span>  <span class=\"c1\"># No need to create the folder here</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">rel_target</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;local:&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;local&quot;</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;reqs:&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span>\n                <span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span>\n                <span class=\"n\">install_args</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">,</span>\n                <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;pip:&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span>\n                <span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span>\n                <span class=\"n\">install_args</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">,</span>\n                <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;conda:&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span>\n                <span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span>\n                <span class=\"n\">install_args</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">,</span>\n                <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;rh:&quot;</span><span class=\"p\">):</span>\n            <span class=\"c1\"># Calling the factory method below</span>\n            <span class=\"k\">return</span> <span class=\"n\">package</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">specifier</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:],</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">specifier</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n                <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span>\n                    <span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span>\n                    <span class=\"n\">install_args</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">,</span>\n                    <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span>\n                    <span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span>\n                    <span class=\"n\">install_args</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">,</span>\n                    <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"package\"><a class=\"viewcode-back\" href=\"../../../../../rh_primitives/package/#runhouse.package\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">package</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">install_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">install_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">Folder</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_FS</span><span class=\"p\">,</span>\n    <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">local_mount</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">data_config</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">load</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Package</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Builds an instance of :class:`Package`.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        name (str): Name to assign the pacakge.</span>\n<span class=\"sd\">        install_method (str): Method for installing the package. Options: [``pip``, ``conda``, ``reqs``, ``local``]</span>\n<span class=\"sd\">        install_str (str): Additional arguments to install.  # TODO: not too sure about this</span>\n<span class=\"sd\">        url (str): URL of the package to install.</span>\n<span class=\"sd\">        system (str): File system. Currently this must be one of:</span>\n<span class=\"sd\">            [``file``, ``github``, ``sftp``, ``ssh``,``s3``, ``gs``, ``azure``].</span>\n<span class=\"sd\">            We are working to add additional file system support.</span>\n<span class=\"sd\">        dryrun (bool): Whether to create the Package if it doesn&#39;t exist, or load the Package object as a dryrun.</span>\n<span class=\"sd\">            (Default: ``False``)</span>\n<span class=\"sd\">        local_mount (bool): Whether to locally mount the installed package. (Default: ``False``)</span>\n<span class=\"sd\">        data_config (Optional[Dict]): The data config to pass to the underlying fsspec handler.</span>\n<span class=\"sd\">        load (bool): Whether to load an existing config for the Package. (Default: ``True``)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        Package: The resulting package.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">rh_config</span><span class=\"o\">.</span><span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">load</span> <span class=\"k\">else</span> <span class=\"p\">{}</span>\n    <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;rns_address&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_method&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">install_method</span> <span class=\"ow\">or</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;install_method&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">url</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_target&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Folder</span><span class=\"p\">(</span>\n            <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">local_mount</span><span class=\"o\">=</span><span class=\"n\">local_mount</span><span class=\"p\">,</span> <span class=\"n\">data_config</span><span class=\"o\">=</span><span class=\"n\">data_config</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_args&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">install_str</span>\n    <span class=\"k\">elif</span> <span class=\"n\">install_str</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_target&quot;</span><span class=\"p\">],</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_args&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">install_str</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"s2\">&quot;install_target&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">config</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_target&quot;</span><span class=\"p\">],</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_target&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Folder</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_target&quot;</span><span class=\"p\">])</span>\n\n    <span class=\"n\">new_package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">new_package</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/rns/packages/package", "sidebars": ["sidebar-logo.html", "search-field.html", "sbt-sidebar-nav.html", "sbt-sidebar-footer.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "author": "the Runhouse team \ud83c\udfc3\u200d\u2640\ufe0f\ud83c\udfe0", "theme_use_edit_page_button": false, "theme_search_bar_text": "Search the docs ...", "theme_show_toc_level": 1}