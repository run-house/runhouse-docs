{"parents": [{"link": "../../", "title": "Module code"}], "title": "runhouse.main", "body": "<h1>Source code for runhouse.main</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">shlex</span>\n<span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n<span class=\"kn\">import</span> <span class=\"nn\">webbrowser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Optional</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">typer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rich.console</span> <span class=\"kn\">import</span> <span class=\"n\">Console</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">runhouse.rns.login</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse</span> <span class=\"kn\">import</span> <span class=\"n\">__version__</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">configs</span>\n\n<span class=\"c1\"># create an explicit Typer application</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Typer</span><span class=\"p\">(</span><span class=\"n\">add_completion</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;verbose&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># For printing with typer</span>\n<span class=\"n\">console</span> <span class=\"o\">=</span> <span class=\"n\">Console</span><span class=\"p\">()</span>\n\n\n<div class=\"viewcode-block\" id=\"login\"><a class=\"viewcode-back\" href=\"../../../api/cli/#runhouse.main.login\">[docs]</a><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">login</span><span class=\"p\">(</span>\n    <span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Argument</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Your Runhouse API token&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">yes</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span>\n        <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--yes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-y&quot;</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Sets any confirmations to &#39;yes&#39; automatically.&quot;</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Login to Runhouse. Validates token provided, with options to upload or download stored secrets or config between</span>\n<span class=\"sd\">    local environment and Runhouse / Vault.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">valid_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"n\">runhouse</span><span class=\"o\">.</span><span class=\"n\">rns</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span>\n            <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"n\">token</span><span class=\"p\">,</span>\n            <span class=\"n\">download_config</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">upload_config</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">download_secrets</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">upload_secrets</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">yes</span>\n        <span class=\"k\">else</span> <span class=\"n\">runhouse</span><span class=\"o\">.</span><span class=\"n\">rns</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"n\">token</span><span class=\"p\">,</span> <span class=\"n\">interactive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">ret_token</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">valid_token</span><span class=\"p\">:</span>\n        <span class=\"n\">webbrowser</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">configs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;dashboard_url&#39;</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">/dashboard?token=</span><span class=\"si\">{</span><span class=\"n\">valid_token</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">()</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"logout\"><a class=\"viewcode-back\" href=\"../../../api/cli/#runhouse.main.logout\">[docs]</a><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">logout</span><span class=\"p\">():</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Logout of Runhouse. Provides options to delete locally configured secrets and local Runhouse configs&quot;&quot;&quot;</span>\n    <span class=\"n\">runhouse</span><span class=\"o\">.</span><span class=\"n\">rns</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"o\">.</span><span class=\"n\">logout</span><span class=\"p\">(</span><span class=\"n\">interactive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">raise</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"notebook\"><a class=\"viewcode-back\" href=\"../../../api/cli/#runhouse.main.notebook\">[docs]</a><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">notebook</span><span class=\"p\">(</span>\n    <span class=\"n\">cluster_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">up</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Start the cluster&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Open a Jupyter notebook on a cluster.&quot;&quot;&quot;</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">cluster_name</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">up</span><span class=\"p\">:</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">up_if_not</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">is_up</span><span class=\"p\">():</span>\n        <span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Cluster </span><span class=\"si\">{</span><span class=\"n\">cluster_name</span><span class=\"si\">}</span><span class=\"s2\"> is not up. Please run `runhouse notebook </span><span class=\"si\">{</span><span class=\"n\">cluster_name</span><span class=\"si\">}</span><span class=\"s2\"> --up`.&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">notebook</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ssh\"><a class=\"viewcode-back\" href=\"../../../api/cli/#runhouse.main.ssh\">[docs]</a><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">ssh</span><span class=\"p\">(</span><span class=\"n\">cluster_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">up</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Start the cluster&quot;</span><span class=\"p\">)):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;SSH into a cluster created elsewhere (so `ssh cluster` doesn&#39;t work out of the box) or not yet up.&quot;&quot;&quot;</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">cluster_name</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">up</span><span class=\"p\">:</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">up_if_not</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">is_up</span><span class=\"p\">():</span>\n        <span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Cluster </span><span class=\"si\">{</span><span class=\"n\">cluster_name</span><span class=\"si\">}</span><span class=\"s2\"> is not up. Please run `runhouse ssh </span><span class=\"si\">{</span><span class=\"n\">cluster_name</span><span class=\"si\">}</span><span class=\"s2\"> --up`.&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">ssh</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"cancel\"><a class=\"viewcode-back\" href=\"../../../api/cli/#runhouse.main.cancel\">[docs]</a><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">cancel</span><span class=\"p\">(</span>\n    <span class=\"n\">cluster_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">run_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Force cancel&quot;</span><span class=\"p\">),</span>\n    <span class=\"nb\">all</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Cancel all jobs&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Cancel a run on a cluster.&quot;&quot;&quot;</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">cluster_name</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"nb\">all</span><span class=\"p\">:</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cancel_all</span><span class=\"p\">(</span><span class=\"n\">force</span><span class=\"o\">=</span><span class=\"n\">force</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">(</span><span class=\"n\">run_key</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"n\">force</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"logs\"><a class=\"viewcode-back\" href=\"../../../api/cli/#runhouse.main.logs\">[docs]</a><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">logs</span><span class=\"p\">(</span>\n    <span class=\"n\">cluster_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">run_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">print_results</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Print results&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Get logs from a run on a cluster.&quot;&quot;&quot;</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">cluster_name</span><span class=\"p\">)</span>\n    <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">run_key</span><span class=\"p\">,</span> <span class=\"n\">stream_logs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">print_results</span><span class=\"p\">:</span>\n        <span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">load_cluster</span><span class=\"p\">(</span><span class=\"n\">cluster_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Load a cluster from RNS into the local environment, e.g. to be able to ssh.&quot;&quot;&quot;</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">cluster_name</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">:</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">_update_from_sky_status</span><span class=\"p\">(</span><span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_start_server</span><span class=\"p\">(</span><span class=\"n\">restart</span><span class=\"p\">,</span> <span class=\"n\">restart_ray</span><span class=\"p\">,</span> <span class=\"n\">screen</span><span class=\"p\">,</span> <span class=\"n\">create_logfile</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.hardware.cluster</span> <span class=\"kn\">import</span> <span class=\"n\">Cluster</span>\n\n    <span class=\"n\">cmds</span> <span class=\"o\">=</span> <span class=\"n\">Cluster</span><span class=\"o\">.</span><span class=\"n\">_start_server_cmds</span><span class=\"p\">(</span>\n        <span class=\"n\">restart</span><span class=\"o\">=</span><span class=\"n\">restart</span><span class=\"p\">,</span>\n        <span class=\"n\">restart_ray</span><span class=\"o\">=</span><span class=\"n\">restart_ray</span><span class=\"p\">,</span>\n        <span class=\"n\">screen</span><span class=\"o\">=</span><span class=\"n\">screen</span><span class=\"p\">,</span>\n        <span class=\"n\">create_logfile</span><span class=\"o\">=</span><span class=\"n\">create_logfile</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"c1\"># We do these one by one so it&#39;s more obvious where the error is if there is one</span>\n        <span class=\"k\">for</span> <span class=\"n\">cmd</span> <span class=\"ow\">in</span> <span class=\"n\">cmds</span><span class=\"p\">:</span>\n            <span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Executing `</span><span class=\"si\">{</span><span class=\"n\">cmd</span><span class=\"si\">}</span><span class=\"s2\">`&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">shlex</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">),</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"c1\"># We don&#39;t want to raise an error if the server kill fails, as it may simply not be running</span>\n            <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">returncode</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;pkill&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">cmd</span><span class=\"p\">:</span>\n                <span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Error while executing `</span><span class=\"si\">{</span><span class=\"n\">cmd</span><span class=\"si\">}</span><span class=\"s2\">`&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">raise</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">FileNotFoundError</span><span class=\"p\">:</span>\n        <span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;python3 command was not found. Make sure you have python3 installed.&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">start</span><span class=\"p\">(</span>\n    <span class=\"n\">restart_ray</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Restart the Ray runtime&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Start the server in a screen&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Start the HTTP server on the cluster.&quot;&quot;&quot;</span>\n    <span class=\"n\">_start_server</span><span class=\"p\">(</span>\n        <span class=\"n\">restart</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">restart_ray</span><span class=\"o\">=</span><span class=\"n\">restart_ray</span><span class=\"p\">,</span> <span class=\"n\">screen</span><span class=\"o\">=</span><span class=\"n\">screen</span><span class=\"p\">,</span> <span class=\"n\">create_logfile</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">restart</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;A *saved* remote cluster object to restart.&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">restart_ray</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Restart the Ray runtime&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">screen</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span>\n        <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Start the server in a screen. Only relevant when restarting locally.&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">resync_rh</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"n\">typer</span><span class=\"o\">.</span><span class=\"n\">Option</span><span class=\"p\">(</span>\n        <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">&quot;Resync the Runhouse package. Only relevant when restarting remotely.&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Restart the HTTP server on the cluster.&quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n        <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">restart_server</span><span class=\"p\">(</span><span class=\"n\">resync_rh</span><span class=\"o\">=</span><span class=\"n\">resync_rh</span><span class=\"p\">,</span> <span class=\"n\">restart_ray</span><span class=\"o\">=</span><span class=\"n\">restart_ray</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span>\n\n    <span class=\"n\">_start_server</span><span class=\"p\">(</span>\n        <span class=\"n\">restart</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">restart_ray</span><span class=\"o\">=</span><span class=\"n\">restart_ray</span><span class=\"p\">,</span>\n        <span class=\"n\">screen</span><span class=\"o\">=</span><span class=\"n\">screen</span><span class=\"p\">,</span>\n        <span class=\"n\">create_logfile</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">callback</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Runhouse CLI</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">verbose</span><span class=\"p\">:</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;runhouse&quot;</span>\n        <span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">==</span><span class=\"si\">{</span><span class=\"n\">__version__</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s2\">&quot;bold green&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">state</span><span class=\"p\">[</span><span class=\"s2\">&quot;verbose&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre></div>", "current_page_name": "_modules/runhouse/main", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.13"}