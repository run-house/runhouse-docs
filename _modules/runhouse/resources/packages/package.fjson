{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "runhouse.resources.packages.package", "body": "<h1>Source code for runhouse.resources.packages.package</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse</span> <span class=\"kn\">import</span> <span class=\"nb\">globals</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.envs.utils</span> <span class=\"kn\">import</span> <span class=\"n\">install_conda</span><span class=\"p\">,</span> <span class=\"n\">run_setup_command</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.folders</span> <span class=\"kn\">import</span> <span class=\"n\">Folder</span><span class=\"p\">,</span> <span class=\"n\">folder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.hardware.cluster</span> <span class=\"kn\">import</span> <span class=\"n\">Cluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.hardware.utils</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">_get_cluster_from</span><span class=\"p\">,</span>\n    <span class=\"n\">detect_cuda_version_or_cpu</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.resource</span> <span class=\"kn\">import</span> <span class=\"n\">Resource</span>\n\n<span class=\"n\">INSTALL_METHODS</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;local&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">}</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"Package\"><a class=\"viewcode-back\" href=\"../../../../../api/python/package/#runhouse.Package\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Package</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"n\">RESOURCE_TYPE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;package&quot;</span>\n\n    <span class=\"c1\"># https://pytorch.org/get-started/locally/</span>\n    <span class=\"c1\"># Note: no binaries exist for 11.4 (https://github.com/pytorch/pytorch/issues/75992)</span>\n    <span class=\"n\">TORCH_INDEX_URLS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;11.3&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://download.pytorch.org/whl/cu113&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;11.5&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://download.pytorch.org/whl/cu115&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;11.6&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://download.pytorch.org/whl/cu116&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;11.7&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://download.pytorch.org/whl/cu117&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;11.8&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://download.pytorch.org/whl/cu118&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;12.1&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://download.pytorch.org/whl/cu121&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;cpu&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://download.pytorch.org/whl/cpu&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n<div class=\"viewcode-block\" id=\"Package.__init__\"><a class=\"viewcode-back\" href=\"../../../../../api/python/package/#runhouse.Package.__init__\">[docs]</a>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">install_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">install_target</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">install_args</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>  <span class=\"c1\"># We have this here to ignore extra arguments when calling from from_config</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Runhouse Package resource.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">            To create a git package, please use the factory method :func:`package`.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">=</span> <span class=\"n\">install_method</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span> <span class=\"o\">=</span> <span class=\"n\">install_target</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_args</span> <span class=\"o\">=</span> <span class=\"n\">install_args</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">condensed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"c1\"># If the package is just a simple Package.from_string string, no</span>\n        <span class=\"c1\"># need to store it in rns, just give back the string.</span>\n        <span class=\"c1\"># if self.install_method in [&#39;pip&#39;, &#39;conda&#39;, &#39;git&#39;]:</span>\n        <span class=\"c1\">#     return f&#39;{self.install_method}:{self.name}&#39;</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">condensed</span><span class=\"p\">)</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_method&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_target&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_resource_string_for_subconfig</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">condensed</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_args&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_args</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Package: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">):</span>\n            <span class=\"c1\"># if self.install_target.name:</span>\n            <span class=\"c1\">#     return f&#39;Package: {self.install_target.name}&#39;</span>\n            <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Package: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Package: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_install_cmd</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Cluster&quot;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"n\">install_args</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot; </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_args</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_args</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">):</span>\n            <span class=\"c1\"># TODO [DG] Revisit for pip: Would be nice if we could use -e by default, but importlib on the rpc server</span>\n            <span class=\"c1\">#  isn&#39;t finding the package right after its installed.</span>\n            <span class=\"c1\"># if (Path(local_path) / &#39;setup.py&#39;).exists():</span>\n            <span class=\"c1\">#     install_cmd = f&#39;-e {local_path}&#39; + install_args</span>\n            <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">local_path</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"o\">+</span> <span class=\"n\">install_args</span>\n            <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">cluster</span><span class=\"p\">:</span>\n                    <span class=\"n\">reqs_path</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">/requirements.txt&quot;</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">reqs_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n                        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n                    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">reqs_path</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                        <span class=\"n\">reqs</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">system</span> <span class=\"o\">==</span> <span class=\"n\">cluster</span><span class=\"p\">:</span>\n                        <span class=\"n\">install_target</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">install_target</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">install_target</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span>\n\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">exists_in_system</span><span class=\"p\">():</span>\n                        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n                    <span class=\"k\">elif</span> <span class=\"s2\">&quot;requirements.txt&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">ls</span><span class=\"p\">(</span><span class=\"n\">full_paths</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n                        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n                    <span class=\"n\">reqs</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                        <span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;requirements.txt&quot;</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span>\n                        <span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n                        <span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">reqs_path</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">/requirements.txt&quot;</span>\n\n                <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_requirements_txt_install_cmd</span><span class=\"p\">(</span>\n                    <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">reqs_path</span><span class=\"p\">,</span>\n                    <span class=\"n\">reqs</span><span class=\"o\">=</span><span class=\"n\">reqs</span><span class=\"p\">,</span>\n                    <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"n\">install_args</span><span class=\"p\">,</span>\n                    <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span> <span class=\"o\">+</span> <span class=\"n\">install_args</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;pip install </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_install_cmd_for_torch</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cluster</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;pip install </span><span class=\"si\">{</span><span class=\"n\">install_cmd</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;conda install -y </span><span class=\"si\">{</span><span class=\"n\">install_cmd</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">install_cmd</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_install</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Env&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Cluster&quot;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Install package.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            env (Env or str): Environment to install package on. If left empty, defaults to base environment.</span>\n<span class=\"sd\">                (Default: ``None``)</span>\n<span class=\"sd\">            cluster (Optional[Cluster]): If provided, will install package on cluster using SSH.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Installing </span><span class=\"si\">{</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\"> with method </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_install_cmd</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pip_install</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_conda_install</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;local&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">cluster</span><span class=\"p\">:</span>\n                    <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">local_path</span>\n                <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">exists_in_system</span><span class=\"p\">():</span>\n                    <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">path</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">path</span>\n                    <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_install_cmd</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">path</span><span class=\"p\">:</span>\n                    <span class=\"k\">return</span>\n\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;reqs&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">install_cmd</span><span class=\"p\">:</span>\n                    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                        <span class=\"sa\">f</span><span class=\"s2\">&quot;pip installing </span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">/requirements.txt with: </span><span class=\"si\">{</span><span class=\"n\">install_cmd</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pip_install</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">/requirements.txt not found, skipping&quot;</span><span class=\"p\">)</span>\n\n                <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">cluster</span> <span class=\"k\">else</span> <span class=\"n\">run_setup_command</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;export PATH=$PATH;</span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"p\">(</span>\n                <span class=\"ow\">not</span> <span class=\"n\">cluster</span>\n                <span class=\"ow\">and</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">()</span>\n            <span class=\"p\">):</span>\n                <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;install_target must be a Folder or a path to a directory for &quot;</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;install_method </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                <span class=\"p\">)</span>\n        <span class=\"c1\"># elif self.install_method == &#39;unpickle&#39;:</span>\n        <span class=\"c1\">#     # unpickle the functions and make them importable</span>\n        <span class=\"c1\">#     with self.get(&#39;functions.pickle&#39;) as f:</span>\n        <span class=\"c1\">#         sys.modules[self.name] = pickle.load(f)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Unknown install_method </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_method</span><span class=\"si\">}</span><span class=\"s2\">. Try using cluster.run() or to install instead.&quot;</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"c1\"># ----------------------------------</span>\n    <span class=\"c1\"># Torch Install Helpers</span>\n    <span class=\"c1\"># ----------------------------------</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_requirements_txt_install_cmd</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">reqs</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Read requirements from file, append --index-url and --extra-index-url where relevant for torch packages,</span>\n<span class=\"sd\">        and return list of formatted packages.&quot;&quot;&quot;</span>\n        <span class=\"c1\"># if torch extra index url is already defined by the user or torch isn&#39;t a req, directly pip install reqs file</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">[</span><span class=\"n\">req</span> <span class=\"k\">for</span> <span class=\"n\">req</span> <span class=\"ow\">in</span> <span class=\"n\">reqs</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;torch&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">req</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;-r </span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"o\">+</span> <span class=\"n\">args</span>\n\n        <span class=\"n\">cuda_version_or_cpu</span> <span class=\"o\">=</span> <span class=\"n\">detect_cuda_version_or_cpu</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">req</span> <span class=\"ow\">in</span> <span class=\"n\">reqs</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span>\n                <span class=\"s2\">&quot;--index-url&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">req</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;--extra-index-url&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">req</span>\n            <span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;pytorch.org&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">req</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;-r </span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"o\">+</span> <span class=\"n\">args</span>\n\n        <span class=\"c1\"># add extra-index-url for torch if not found</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;-r </span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\"> --extra-index-url </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_torch_index_url</span><span class=\"p\">(</span><span class=\"n\">cuda_version_or_cpu</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_install_cmd_for_torch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">install_cmd</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return the correct formatted pip install command for the torch package(s) provided.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">install_cmd</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;#&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n        <span class=\"n\">torch_source_packages</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;torch&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;torchvision&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;torchaudio&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">([</span><span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">install_cmd</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">torch_source_packages</span><span class=\"p\">]):</span>\n            <span class=\"k\">return</span> <span class=\"n\">install_cmd</span>\n\n        <span class=\"n\">packages_to_install</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_packages_to_install_from_cmd</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">)</span>\n        <span class=\"n\">final_install_cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"n\">cuda_version_or_cpu</span> <span class=\"o\">=</span> <span class=\"n\">detect_cuda_version_or_cpu</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">package_install_cmd</span> <span class=\"ow\">in</span> <span class=\"n\">packages_to_install</span><span class=\"p\">:</span>\n            <span class=\"n\">formatted_cmd</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_install_url_for_torch_package</span><span class=\"p\">(</span>\n                <span class=\"n\">package_install_cmd</span><span class=\"p\">,</span> <span class=\"n\">cuda_version_or_cpu</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">formatted_cmd</span><span class=\"p\">:</span>\n                <span class=\"n\">final_install_cmd</span> <span class=\"o\">+=</span> <span class=\"n\">formatted_cmd</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; &quot;</span>\n\n        <span class=\"n\">final_install_cmd</span> <span class=\"o\">=</span> <span class=\"n\">final_install_cmd</span><span class=\"o\">.</span><span class=\"n\">rstrip</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">final_install_cmd</span> <span class=\"k\">if</span> <span class=\"n\">final_install_cmd</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;&quot;</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_install_url_for_torch_package</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">install_cmd</span><span class=\"p\">,</span> <span class=\"n\">cuda_version_or_cpu</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Build the full install command, adding a --index-url and --extra-index-url where applicable.&quot;&quot;&quot;</span>\n        <span class=\"c1\"># Grab the relevant index url for torch based on the CUDA version provided</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;,&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">install_cmd</span><span class=\"p\">:</span>\n            <span class=\"c1\"># If installing a range of versions format the string to make it compatible with `pip_install` method</span>\n            <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"n\">install_cmd</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">index_url</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_torch_index_url</span><span class=\"p\">(</span><span class=\"n\">cuda_version_or_cpu</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">index_url</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">(</span>\n            <span class=\"n\">specifier</span> <span class=\"ow\">in</span> <span class=\"n\">install_cmd</span> <span class=\"k\">for</span> <span class=\"n\">specifier</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;--index-url &quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-i &quot;</span><span class=\"p\">]</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">install_cmd</span><span class=\"si\">}</span><span class=\"s2\"> --index-url </span><span class=\"si\">{</span><span class=\"n\">index_url</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;--extra-index-url&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">install_cmd</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">install_cmd</span><span class=\"si\">}</span><span class=\"s2\"> --extra-index-url https://pypi.python.org/simple/&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">install_cmd</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_torch_index_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cuda_version_or_cpu</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">TORCH_INDEX_URLS</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">cuda_version_or_cpu</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_packages_to_install_from_cmd</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Split a string of command(s) into a list of separate commands&quot;&quot;&quot;</span>\n        <span class=\"c1\"># Remove any --extra-index-url flags from the install command (to be added later by default)</span>\n        <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;--extra-index-url\\s+\\S+&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">install_cmd</span><span class=\"p\">)</span>\n        <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"n\">install_cmd</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;, &quot;</span> <span class=\"ow\">in</span> <span class=\"n\">install_cmd</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Ex: &#39;torch&gt;=1.13.0,&lt;2.0.0&#39;</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">install_cmd</span><span class=\"p\">]</span>\n\n        <span class=\"n\">matches</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;(\\S+(?:\\s+(-i|--index-url)\\s+\\S+)?)&quot;</span><span class=\"p\">,</span> <span class=\"n\">install_cmd</span><span class=\"p\">)</span>\n\n        <span class=\"n\">packages_to_install</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">match</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">match</span> <span class=\"ow\">in</span> <span class=\"n\">matches</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">packages_to_install</span>\n\n    <span class=\"c1\"># ----------------------------------</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_pip_install</span><span class=\"p\">(</span>\n        <span class=\"n\">install_cmd</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Env&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Cluster&quot;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Run pip install.&quot;&quot;&quot;</span>\n        <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;python3 -m </span><span class=\"si\">{</span><span class=\"n\">install_cmd</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"k\">if</span> <span class=\"n\">cluster</span> <span class=\"ow\">or</span> <span class=\"n\">env</span>\n            <span class=\"k\">else</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">executable</span><span class=\"si\">}</span><span class=\"s2\"> -m </span><span class=\"si\">{</span><span class=\"n\">install_cmd</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">env</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.envs.utils</span> <span class=\"kn\">import</span> <span class=\"n\">_get_env_from</span>\n\n            <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">_get_env_from</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">)</span>\n            <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">_run_cmd</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">install_cmd</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"n\">retcode</span> <span class=\"o\">=</span> <span class=\"n\">run_setup_command</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">retcode</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Pip install failed, check that the package exists and is available for your platform.&quot;</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_conda_install</span><span class=\"p\">(</span>\n        <span class=\"n\">install_cmd</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Env&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Cluster&quot;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Run conda install.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">env</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                <span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.envs</span> <span class=\"kn\">import</span> <span class=\"n\">Env</span>\n\n                <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">Env</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">)</span>\n            <span class=\"n\">install_cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">_run_cmd</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">install_cmd</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"n\">install_conda</span><span class=\"p\">()</span>\n\n        <span class=\"n\">retcode</span> <span class=\"o\">=</span> <span class=\"n\">run_setup_command</span><span class=\"p\">(</span><span class=\"n\">install_cmd</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">retcode</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Conda install failed, check that the package exists and is &quot;</span>\n                <span class=\"s2\">&quot;available for your platform.&quot;</span>\n            <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Package.to\"><a class=\"viewcode-back\" href=\"../../../../../api/python/package/#runhouse.Package.to\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">to</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Cluster&quot;</span><span class=\"p\">],</span>\n        <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">mount</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Copy the package onto filesystem or cluster, and return the new Package object.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">Folder</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;`install_target` must be a Folder in order to copy the package to a system.&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span>\n            <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">system</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;file&quot;</span>\n        <span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">_get_cluster_from</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">)</span>\n\n        <span class=\"n\">install_system_name</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">name</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">system</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">_get_cluster_from</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n        <span class=\"n\">system_name</span> <span class=\"o\">=</span> <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">system</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">system_name</span> <span class=\"o\">==</span> <span class=\"n\">install_system_name</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">Resource</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">Resource</span><span class=\"p\">):</span>\n                <span class=\"c1\"># if these are both clusters, check if they&#39;re pointing to the same address.</span>\n                <span class=\"c1\"># We use endpoint instead of address here because if address is localhost, we need to port too</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">endpoint</span><span class=\"p\">(</span>\n                    <span class=\"n\">external</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n                <span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">endpoint</span><span class=\"p\">(</span><span class=\"n\">external</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n                    <span class=\"c1\"># If we&#39;re on the target system, just make sure the package is in the Python path</span>\n                    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">local_path</span><span class=\"p\">)</span>\n                    <span class=\"k\">return</span> <span class=\"bp\">self</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Copying package from </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">fsspec_url</span><span class=\"si\">}</span><span class=\"s2\"> to: </span><span class=\"si\">{</span><span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">system</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">new_folder</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">_to_cluster</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">mount</span><span class=\"o\">=</span><span class=\"n\">mount</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>  <span class=\"c1\"># to fs</span>\n            <span class=\"n\">new_folder</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">)</span>\n        <span class=\"n\">new_folder</span><span class=\"o\">.</span><span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">system</span>\n        <span class=\"n\">new_package</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">new_package</span><span class=\"o\">.</span><span class=\"n\">install_target</span> <span class=\"o\">=</span> <span class=\"n\">new_folder</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_package</span></div>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">_resolve_children</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;install_target&quot;</span><span class=\"p\">),</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n            <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_target&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Folder</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span>\n                <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;install_target&quot;</span><span class=\"p\">],</span>\n                <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n                <span class=\"n\">_resolve_children</span><span class=\"o\">=</span><span class=\"n\">_resolve_children</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;resource_subtype&quot;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;GitPackage&quot;</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">runhouse</span> <span class=\"kn\">import</span> <span class=\"n\">GitPackage</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">GitPackage</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span>\n                <span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span> <span class=\"n\">_resolve_children</span><span class=\"o\">=</span><span class=\"n\">_resolve_children</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_string</span><span class=\"p\">(</span><span class=\"n\">specifier</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">specifier</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;requirements.txt&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">specifier</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;reqs:./&quot;</span>\n\n        <span class=\"c1\"># Use regex to check if specifier matches &#39;&lt;method&gt;:https://github.com/&lt;path&gt;&#39; or &#39;https://github.com/&lt;path&gt;&#39;</span>\n        <span class=\"n\">match</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span>\n            <span class=\"sa\">r</span><span class=\"s2\">&quot;^(?:(?P&lt;method&gt;[^:]+):)?(?P&lt;path&gt;https://github.com/.+)&quot;</span><span class=\"p\">,</span> <span class=\"n\">specifier</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">match</span><span class=\"p\">:</span>\n            <span class=\"n\">install_method</span> <span class=\"o\">=</span> <span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"s2\">&quot;method&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"s2\">&quot;path&quot;</span><span class=\"p\">)</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.packages.git_package</span> <span class=\"kn\">import</span> <span class=\"n\">git_package</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">git_package</span><span class=\"p\">(</span>\n                <span class=\"n\">git_url</span><span class=\"o\">=</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"n\">install_method</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">target_and_args</span> <span class=\"o\">=</span> <span class=\"n\">specifier</span>\n        <span class=\"k\">if</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;:&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"n\">INSTALL_METHODS</span><span class=\"p\">:</span>\n            <span class=\"n\">target_and_args</span> <span class=\"o\">=</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;:&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">rel_target</span><span class=\"p\">,</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"n\">target_and_args</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot; &quot;</span> <span class=\"ow\">in</span> <span class=\"n\">target_and_args</span>\n            <span class=\"k\">else</span> <span class=\"p\">(</span><span class=\"n\">target_and_args</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># We need to do this because relative paths are relative to the current working directory!</span>\n        <span class=\"n\">abs_target</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">rel_target</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">rel_target</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">is_absolute</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"nb\">globals</span><span class=\"o\">.</span><span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">locate_working_dir</span><span class=\"p\">())</span> <span class=\"o\">/</span> <span class=\"n\">rel_target</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">abs_target</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n            <span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">Folder</span><span class=\"p\">(</span>\n                <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">abs_target</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n            <span class=\"p\">)</span>  <span class=\"c1\"># No need to create the folder here</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">rel_target</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;local:&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;local&quot;</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;reqs:&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span>\n                <span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span>\n                <span class=\"n\">install_args</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">,</span>\n                <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;pip:&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span>\n                <span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span>\n                <span class=\"n\">install_args</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">,</span>\n                <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;conda:&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span>\n                <span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span>\n                <span class=\"n\">install_args</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">,</span>\n                <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;conda&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">specifier</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;rh:&quot;</span><span class=\"p\">):</span>\n            <span class=\"c1\"># Calling the factory method below</span>\n            <span class=\"k\">return</span> <span class=\"n\">package</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">specifier</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:],</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">specifier</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n                <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span>\n                    <span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span>\n                    <span class=\"n\">install_args</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">,</span>\n                    <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span>\n                    <span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">target</span><span class=\"p\">,</span>\n                    <span class=\"n\">install_args</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"p\">,</span>\n                    <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s2\">&quot;pip&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"package\"><a class=\"viewcode-back\" href=\"../../../../../api/python/package/#runhouse.package\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">package</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">install_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">install_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">local_mount</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">data_config</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Package</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Builds an instance of :class:`Package`.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        name (str): Name to assign the package resource.</span>\n<span class=\"sd\">        install_method (str): Method for installing the package. Options: [``pip``, ``conda``, ``reqs``, ``local``]</span>\n<span class=\"sd\">        install_str (str): Additional arguments to install.</span>\n<span class=\"sd\">        path (str): URL of the package to install.</span>\n<span class=\"sd\">        system (str): File system or cluster on which the package lives. Currently this must a cluster or one of:</span>\n<span class=\"sd\">            [``file``, ``github``, ``sftp``, ``ssh``, ``s3``, ``gs``, ``azure``].</span>\n<span class=\"sd\">        dryrun (bool): Whether to create the Package if it doesn&#39;t exist, or load the Package object as a dryrun.</span>\n<span class=\"sd\">            (Default: ``False``)</span>\n<span class=\"sd\">        local_mount (bool): Whether to locally mount the installed package. (Default: ``False``)</span>\n<span class=\"sd\">        data_config (Optional[Dict]): The data config to pass to the underlying fsspec handler.</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        Package: The resulting package.</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; import runhouse as rh</span>\n<span class=\"sd\">        &gt;&gt;&gt; reloaded_package = rh.package(name=&quot;my-package&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; local_package = rh.package(path=&quot;local/folder/path&quot;, install_method=&quot;local&quot;)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">(</span>\n        <span class=\"p\">[</span><span class=\"n\">install_method</span><span class=\"p\">,</span> <span class=\"n\">install_str</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">data_config</span><span class=\"p\">,</span> <span class=\"n\">local_mount</span><span class=\"p\">]</span>\n    <span class=\"p\">):</span>\n        <span class=\"c1\"># If only the name is provided and dryrun is set to True</span>\n        <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n    <span class=\"n\">install_target</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">install_args</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">if</span> <span class=\"n\">path</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">system</span> <span class=\"ow\">or</span> <span class=\"n\">Folder</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_FS</span>\n        <span class=\"n\">install_target</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"p\">(</span>\n            <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">local_mount</span><span class=\"o\">=</span><span class=\"n\">local_mount</span><span class=\"p\">,</span> <span class=\"n\">data_config</span><span class=\"o\">=</span><span class=\"n\">data_config</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">install_args</span> <span class=\"o\">=</span> <span class=\"n\">install_str</span>\n    <span class=\"k\">elif</span> <span class=\"n\">install_str</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">install_args</span> <span class=\"o\">=</span> <span class=\"n\">install_str</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">Package</span><span class=\"p\">(</span>\n        <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"n\">install_method</span><span class=\"p\">,</span>\n        <span class=\"n\">install_target</span><span class=\"o\">=</span><span class=\"n\">install_target</span><span class=\"p\">,</span>\n        <span class=\"n\">install_args</span><span class=\"o\">=</span><span class=\"n\">install_args</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/resources/packages/package", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}