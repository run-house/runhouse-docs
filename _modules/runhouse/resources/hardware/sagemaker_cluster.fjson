{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "runhouse.resources.hardware.sagemaker_cluster", "body": "<h1>Source code for runhouse.resources.hardware.sagemaker_cluster</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">configparser</span>\n<span class=\"kn\">import</span> <span class=\"nn\">contextlib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">getpass</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pkgutil</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pty</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">select</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shlex</span>\n<span class=\"kn\">import</span> <span class=\"nn\">socket</span>\n<span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">textwrap</span>\n<span class=\"kn\">import</span> <span class=\"nn\">threading</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">boto3</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">paramiko</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">sagemaker</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">sagemaker.estimator</span> <span class=\"kn\">import</span> <span class=\"n\">EstimatorBase</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">sagemaker.mxnet</span> <span class=\"kn\">import</span> <span class=\"n\">MXNet</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">sagemaker.pytorch</span> <span class=\"kn\">import</span> <span class=\"n\">PyTorch</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">sagemaker.tensorflow</span> <span class=\"kn\">import</span> <span class=\"n\">TensorFlow</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">sagemaker.xgboost</span> <span class=\"kn\">import</span> <span class=\"n\">XGBoost</span>\n<span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sshtunnel</span> <span class=\"kn\">import</span> <span class=\"n\">BaseSSHTunnelForwarderError</span><span class=\"p\">,</span> <span class=\"n\">SSHTunnelForwarder</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.globals</span> <span class=\"kn\">import</span> <span class=\"n\">configs</span><span class=\"p\">,</span> <span class=\"n\">open_cluster_tunnels</span><span class=\"p\">,</span> <span class=\"n\">rns_client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.utils.api</span> <span class=\"kn\">import</span> <span class=\"n\">is_jsonable</span><span class=\"p\">,</span> <span class=\"n\">resolve_absolute_path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.utils.names</span> <span class=\"kn\">import</span> <span class=\"n\">_generate_default_name</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.cluster</span> <span class=\"kn\">import</span> <span class=\"n\">Cluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.utils</span> <span class=\"kn\">import</span> <span class=\"n\">SkySSHRunner</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"SageMakerCluster\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SageMakerCluster\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">SageMakerCluster</span><span class=\"p\">(</span><span class=\"n\">Cluster</span><span class=\"p\">):</span>\n    <span class=\"n\">DEFAULT_HOST</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;localhost&quot;</span>\n    <span class=\"n\">DEFAULT_INSTANCE_TYPE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ml.m5.large&quot;</span>\n    <span class=\"n\">DEFAULT_REGION</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;us-east-1&quot;</span>\n    <span class=\"n\">DEFAULT_USER</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;root&quot;</span>\n    <span class=\"c1\"># https://github.com/aws/deep-learning-containers/blob/master/available_images.md</span>\n    <span class=\"n\">BASE_ECR_URL</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;763104351884.dkr.ecr.us-east-1.amazonaws.com&quot;</span>\n\n    <span class=\"c1\"># Default path for any estimator source code copied onto the cluster</span>\n    <span class=\"n\">ESTIMATOR_SRC_CODE_PATH</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;/opt/ml/code&quot;</span>\n    <span class=\"n\">ESTIMATOR_LOG_FILE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;sm_cluster.out&quot;</span>\n    <span class=\"n\">SSH_KEY_FILE_NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;sagemaker-ssh-gw&quot;</span>\n\n    <span class=\"n\">DEFAULT_SSH_PORT</span> <span class=\"o\">=</span> <span class=\"mi\">11022</span>\n    <span class=\"n\">DEFAULT_HTTP_PORT</span> <span class=\"o\">=</span> <span class=\"mi\">50052</span>\n    <span class=\"n\">DEFAULT_CONNECTION_WAIT_TIME</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>  <span class=\"c1\"># seconds</span>\n\n<div class=\"viewcode-block\" id=\"SageMakerCluster.__init__\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SageMakerCluster.__init__\">[docs]</a>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">role</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">profile</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">region</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">ssh_key_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_count</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">image_uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">autostop_mins</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">connection_wait_time</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">estimator</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"s2\">&quot;EstimatorBase&quot;</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">job_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        The Runhouse SageMaker cluster abstraction. This is where you can use SageMaker as a compute backend, just as</span>\n<span class=\"sd\">        you would an on-demand cluster (i.e. cloud VMs) or a BYO (i.e. on-prem) cluster. Additionally supports running</span>\n<span class=\"sd\">        dedicated training jobs using SageMaker Estimators.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">            To build a cluster, please use the factory method :func:`sagemaker_cluster`.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_connection_wait_time</span> <span class=\"o\">=</span> <span class=\"n\">connection_wait_time</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_instance_type</span> <span class=\"o\">=</span> <span class=\"n\">instance_type</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_instance_count</span> <span class=\"o\">=</span> <span class=\"n\">instance_count</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_region</span> <span class=\"o\">=</span> <span class=\"n\">region</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_key_path</span> <span class=\"o\">=</span> <span class=\"n\">ssh_key_path</span>\n\n        <span class=\"c1\"># SSHEstimatorWrapper to facilitate the SSH connection to the cluster</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_wrapper</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"c1\"># Keep track of the ports used for forwarding to the cluster</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_local_port</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_HTTP_PORT</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_port</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_SSH_PORT</span>\n\n        <span class=\"c1\"># Note: Relevant only if an estimator is explicitly provided</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_entry_point</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;estimator_entry_point&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_source_dir</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;estimator_source_dir&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_framework</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;estimator_framework&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_name</span> <span class=\"o\">=</span> <span class=\"n\">job_name</span>\n        <span class=\"c1\"># Either use the user-provided instance_id, or look it up from the job_name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span> <span class=\"o\">=</span> <span class=\"n\">instance_id</span> <span class=\"ow\">or</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cluster_instance_id</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_name</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">autostop_mins</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"n\">autostop_mins</span>\n            <span class=\"k\">if</span> <span class=\"n\">autostop_mins</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n            <span class=\"k\">else</span> <span class=\"n\">configs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;default_autostop&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_estimator</span><span class=\"p\">(</span><span class=\"n\">estimator</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">role</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_role_and_profile</span><span class=\"p\">(</span><span class=\"n\">role</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">)</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Using SageMaker execution role: `</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">role</span><span class=\"si\">}</span><span class=\"s2\">` and profile: `</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">profile</span><span class=\"si\">}</span><span class=\"s2\">`&quot;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">image_uri</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_image_uri</span><span class=\"p\">(</span><span class=\"n\">image_uri</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Note: Setting instance ID as cluster IP for compatibility with Cluster parent class methods</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">ips</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"p\">],</span> <span class=\"n\">ssh_creds</span><span class=\"o\">=</span><span class=\"p\">{},</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">config_for_rns</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">config_for_rns</span>\n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;instance_id&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;role&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">role</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;region&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">region</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;profile&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">profile</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ssh_key_path&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ssh_key_path</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;job_name&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_name</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;instance_type&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_type</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;instance_count&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_count</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;image_uri&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">image_uri</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;autostop_mins&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">autostop_mins</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;connection_wait_time&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connection_wait_time</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># If running a dedicated job on the cluster, add the estimator config</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span> <span class=\"ow\">and</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_source_dir</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_entry_point</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;estimator_entry_point&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_entry_point</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;estimator_source_dir&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_source_dir</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">,</span> <span class=\"n\">EstimatorBase</span><span class=\"p\">):</span>\n                <span class=\"c1\"># Serialize the estimator before saving it down in the config</span>\n                <span class=\"n\">selected_attrs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                    <span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">value</span>\n                    <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span>\n                    <span class=\"k\">if</span> <span class=\"n\">is_jsonable</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n                <span class=\"c1\"># Estimator types: mxnet, tensorflow, keras, pytorch, onnx, xgboost</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_framework</span> <span class=\"o\">=</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n                <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;estimator&quot;</span><span class=\"p\">:</span> <span class=\"n\">selected_attrs</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;estimator_framework&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_framework</span><span class=\"p\">,</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n                <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s2\">&quot;estimator&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">})</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hosts_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s2\">&quot;~/.ssh/known_hosts&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">ssh_config_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s2\">&quot;~/.ssh/config&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">ssh_key_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Relative path to the private SSH key used to connect to the cluster.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_key_path</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_relative_ssh_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_key_path</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Default relative path</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;~/.ssh/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SSH_KEY_FILE_NAME</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n    <span class=\"nd\">@ssh_key_path</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">ssh_key_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ssh_key_path</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_key_path</span> <span class=\"o\">=</span> <span class=\"n\">ssh_key_path</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">instance_count</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_instance_count</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_instance_count</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">instance_count</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n    <span class=\"nd\">@instance_count</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">instance_count</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance_count</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_instance_count</span> <span class=\"o\">=</span> <span class=\"n\">instance_count</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">connection_wait_time</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Amount of time the SSH helper will wait inside SageMaker before it continues normal execution&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_connection_wait_time</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_connection_wait_time</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span> <span class=\"ow\">and</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_source_dir</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_entry_point</span>\n        <span class=\"p\">):</span>\n            <span class=\"c1\"># Allow for connecting to the instance before the job starts (e.g. training)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_CONNECTION_WAIT_TIME</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># For inference and others, always up and running</span>\n            <span class=\"k\">return</span> <span class=\"mi\">0</span>\n\n    <span class=\"nd\">@connection_wait_time</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">connection_wait_time</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">connection_wait_time</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_connection_wait_time</span> <span class=\"o\">=</span> <span class=\"n\">connection_wait_time</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">instance_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_instance_type</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_instance_type</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">instance_type</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_INSTANCE_TYPE</span>\n\n    <span class=\"nd\">@instance_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">instance_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance_type</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_instance_type</span> <span class=\"o\">=</span> <span class=\"n\">instance_type</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">region</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_region</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_region</span>\n\n        <span class=\"c1\"># If no region is specified, try using the one associated with the sagemaker session</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sagemaker_session</span><span class=\"o\">.</span><span class=\"n\">boto_region_name</span>\n            <span class=\"k\">if</span> <span class=\"n\">region</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_REGION</span>\n            <span class=\"k\">return</span> <span class=\"n\">region</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_REGION</span>\n\n    <span class=\"nd\">@region</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">region</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">region</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_region</span> <span class=\"o\">=</span> <span class=\"n\">region</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">default_bucket</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Default bucket to use for storing the cluster&#39;s authorized public keys.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sagemaker_session</span><span class=\"o\">.</span><span class=\"n\">default_bucket</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_extra_ssh_args</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Extra SSH arguments to be used when connecting to the cluster.&quot;&quot;&quot;</span>\n        <span class=\"c1\"># Note - port 12345 can be used for Python Debug Server: &quot;-R localhost:12345:localhost:12345&quot;</span>\n        <span class=\"c1\"># https://github.com/aws-samples/sagemaker-ssh-helper#remote-debugging-with-pycharm-debug-server-over-ssh</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;-L localhost:</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_local_port</span><span class=\"si\">}</span><span class=\"s2\">:localhost:</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_local_port</span><span class=\"si\">}</span><span class=\"s2\"> &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;-L localhost:</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_port</span><span class=\"si\">}</span><span class=\"s2\">:localhost:22&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_s3_keys_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Path to public key stored for the cluster on S3. When initializing the cluster, the public key</span>\n<span class=\"sd\">        is copied by default to an authorized keys file in this location.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;s3://</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_bucket</span><span class=\"si\">}</span><span class=\"s2\">/ssh-authorized-keys/&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_ssh_public_key_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_abs_ssh_key_path</span><span class=\"si\">}</span><span class=\"s2\">.pub&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_env_activate_cmd</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Prefix for commands run on the cluster. Ensure we are running all commands in the conda environment</span>\n<span class=\"sd\">        and not the system default python.&quot;&quot;&quot;</span>\n        <span class=\"c1\"># TODO [JL] Can SageMaker handle this for us?</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;source /opt/conda/bin/activate&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_abs_ssh_key_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">resolve_absolute_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ssh_key_path</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_ssh_key_comment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Username and hostname to be used as the comment for the public key.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">getpass</span><span class=\"o\">.</span><span class=\"n\">getuser</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">@</span><span class=\"si\">{</span><span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">gethostname</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_relative_ssh_path</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">ssh_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Convert to a relative path if it is not already one.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">ssh_path</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;~&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">ssh_path</span>\n\n        <span class=\"c1\"># Convert to a relative path</span>\n        <span class=\"n\">relative_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">relpath</span><span class=\"p\">(</span><span class=\"n\">ssh_path</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s2\">&quot;~&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">relative_path</span> <span class=\"o\">=</span> <span class=\"n\">relative_path</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">relative_path</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;~&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">relative_path</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;~/</span><span class=\"si\">{</span><span class=\"n\">relative_path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">relative_path</span>\n\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"c1\"># Cluster State &amp; Lifecycle Methods</span>\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"k\">def</span> <span class=\"nf\">check_server</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">restart_server</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">on_this_cluster</span><span class=\"p\">():</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;SageMaker cluster </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> has no instance ID&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">:</span>\n            <span class=\"n\">cluster_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config_for_rns</span>\n\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connect_server_client</span><span class=\"p\">()</span>\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;Checking server </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> with instance ID: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                <span class=\"p\">)</span>\n\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">check_server</span><span class=\"p\">(</span><span class=\"n\">cluster_config</span><span class=\"o\">=</span><span class=\"n\">cluster_config</span><span class=\"p\">)</span>\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Server </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"si\">}</span><span class=\"s2\"> is up.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">restart_server</span><span class=\"p\">:</span>\n                    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                        <span class=\"sa\">f</span><span class=\"s2\">&quot;Server </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"si\">}</span><span class=\"s2\"> is up, but the HTTP server may not be up.&quot;</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n                        <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;sudo apt-get install screen -y &quot;</span>\n                            <span class=\"s2\">&quot;&amp;&amp; sudo apt-get install rsync -y&quot;</span>\n                        <span class=\"p\">]</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"c1\"># Restart the server inside the base conda env</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restart_server</span><span class=\"p\">(</span>\n                        <span class=\"n\">resync_rh</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                        <span class=\"n\">restart_ray</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                        <span class=\"n\">env_activate_cmd</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_env_activate_cmd</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Checking server </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"si\">}</span><span class=\"s2\"> again.&quot;</span><span class=\"p\">)</span>\n\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">check_server</span><span class=\"p\">(</span><span class=\"n\">cluster_config</span><span class=\"o\">=</span><span class=\"n\">cluster_config</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                        <span class=\"sa\">f</span><span class=\"s2\">&quot;Could not connect to SageMaker instance </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                    <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"SageMakerCluster.up\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SageMakerCluster.up\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Up the cluster.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; rh.sagemaker_cluster(&quot;sagemaker-cluster&quot;).up()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Preparing to launch a new SageMaker cluster&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_launch_new_cluster</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"SageMakerCluster.up_if_not\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SageMakerCluster.up_if_not\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">up_if_not</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Bring up the cluster if it is not up. No-op if cluster is already up.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; rh.sagemaker_cluster(&quot;sagemaker-cluster&quot;).up_if_not()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_up</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">up</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"SageMakerCluster.is_up\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SageMakerCluster.is_up\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">is_up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Check if the cluster is up.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; rh.sagemaker_cluster(&quot;sagemaker-cluster&quot;).is_up()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">()</span>\n            <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;TrainingJobStatus&quot;</span><span class=\"p\">)</span>\n            <span class=\"c1\"># Up if the instance is in progress</span>\n            <span class=\"k\">return</span> <span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;InProgress&quot;</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"SageMakerCluster.teardown\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SageMakerCluster.teardown\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">teardown</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Teardown the SageMaker instance.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; rh.sagemaker_cluster(name=&quot;sagemaker-cluster&quot;).teardown()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stop_instance</span><span class=\"p\">(</span><span class=\"n\">delete_configs</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SageMakerCluster.teardown_and_delete\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SageMakerCluster.teardown_and_delete\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">teardown_and_delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Teardown the SageMaker instance and delete from RNS configs.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; rh.sagemaker_cluster(name=&quot;sagemaker-cluster&quot;).teardown_and_delete()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stop_instance</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"SageMakerCluster.keep_warm\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SageMakerCluster.keep_warm\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">keep_warm</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">autostop_mins</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Keep the cluster warm for given number of minutes after inactivity.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            autostop_mins (int): Amount of time (in minutes) to keep the cluster warm after inactivity.</span>\n<span class=\"sd\">                If set to ``-1``, keep cluster warm indefinitely. (Default: ``-1``)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_autostop</span><span class=\"p\">(</span><span class=\"n\">autostop_mins</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__getstate__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Delete non-serializable elements (e.g. sagemaker session object) before pickling.&quot;&quot;&quot;</span>\n        <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n        <span class=\"n\">state</span><span class=\"p\">[</span><span class=\"s2\">&quot;_sagemaker_session&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">state</span><span class=\"p\">[</span><span class=\"s2\">&quot;client&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">state</span><span class=\"p\">[</span><span class=\"s2\">&quot;_rpc_tunnel&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"n\">state</span>\n\n<div class=\"viewcode-block\" id=\"SageMakerCluster.pause_autostop\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SageMakerCluster.pause_autostop\">[docs]</a>    <span class=\"nd\">@contextlib</span><span class=\"o\">.</span><span class=\"n\">contextmanager</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pause_autostop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Context manager to temporarily pause autostop.&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_autostop</span><span class=\"p\">(</span><span class=\"n\">autostop_mins</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">yield</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_autostop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">autostop_mins</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SageMakerCluster.status\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SageMakerCluster.status\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Get status of SageMaker cluster.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; status = rh.sagemaker_cluster(&quot;sagemaker-cluster&quot;).status()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sagemaker_session</span><span class=\"o\">.</span><span class=\"n\">describe_training_job</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_name</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">{}</span></div>\n\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"c1\"># SSH APIs</span>\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"k\">def</span> <span class=\"nf\">ssh_tunnel</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">local_port</span><span class=\"p\">,</span> <span class=\"n\">remote_port</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">num_ports_to_try</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">retry</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">SSHTunnelForwarder</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">remote_bind_addresses</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">&quot;127.0.0.1&quot;</span><span class=\"p\">,</span> <span class=\"n\">local_port</span><span class=\"p\">)</span>\n            <span class=\"n\">local_bind_addresses</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">local_port</span><span class=\"p\">)</span>\n\n            <span class=\"n\">ssh_tunnel</span> <span class=\"o\">=</span> <span class=\"n\">SSHTunnelForwarder</span><span class=\"p\">(</span>\n                <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_HOST</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_port</span><span class=\"p\">),</span>\n                <span class=\"n\">ssh_username</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_USER</span><span class=\"p\">,</span>\n                <span class=\"n\">ssh_pkey</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_abs_ssh_key_path</span><span class=\"p\">,</span>\n                <span class=\"n\">remote_bind_address</span><span class=\"o\">=</span><span class=\"n\">remote_bind_addresses</span><span class=\"p\">,</span>\n                <span class=\"n\">local_bind_address</span><span class=\"o\">=</span><span class=\"n\">local_bind_addresses</span><span class=\"p\">,</span>\n                <span class=\"n\">set_keepalive</span><span class=\"o\">=</span><span class=\"mi\">1800</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"c1\"># Start the SSH tunnel</span>\n            <span class=\"n\">ssh_tunnel</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n            <span class=\"c1\"># Update the SSH config for the cluster with the connected SSH port</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_or_update_ssh_config_entry</span><span class=\"p\">()</span>\n\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;SSH connection has been successfully created with the cluster&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">except</span> <span class=\"n\">BaseSSHTunnelForwarderError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">retry</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Failed to create the SSH tunnel object even after successfully refreshing the SSM session</span>\n                <span class=\"k\">raise</span> <span class=\"n\">e</span>\n\n            <span class=\"c1\"># Refresh the SSM session, which should bind the HTTP and SSH ports to localhost which are forwarded</span>\n            <span class=\"c1\"># to the cluster</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_refresh_ssm_session_with_cluster</span><span class=\"p\">(</span><span class=\"n\">num_ports_to_try</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># Retry creating the SSH tunnel once the session has been refreshed</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ssh_tunnel</span><span class=\"p\">(</span>\n                <span class=\"n\">local_port</span><span class=\"p\">,</span> <span class=\"n\">remote_port</span><span class=\"p\">,</span> <span class=\"n\">num_ports_to_try</span><span class=\"p\">,</span> <span class=\"n\">retry</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">ssh_tunnel</span><span class=\"p\">,</span> <span class=\"n\">local_port</span>\n\n<div class=\"viewcode-block\" id=\"SageMakerCluster.ssh\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.SageMakerCluster.ssh\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">ssh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">interactive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;SSH into the cluster.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            interactive (bool): Whether to start an interactive shell or not (Default: ``True``).</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; rh.sagemaker_cluster(name=&quot;sagemaker-cluster&quot;).ssh()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">open_cluster_tunnels</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Make sure SSM session and SSH tunnels are up before running the command</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connect_server_client</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">interactive</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Created SSH tunnel with the cluster. To SSH into the cluster, run: `ssh </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">`&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">head_fd</span><span class=\"p\">,</span> <span class=\"n\">worker_fd</span> <span class=\"o\">=</span> <span class=\"n\">pty</span><span class=\"o\">.</span><span class=\"n\">openpty</span><span class=\"p\">()</span>\n        <span class=\"n\">ssh_process</span> <span class=\"o\">=</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">Popen</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;ssh&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-o&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;StrictHostKeyChecking=no&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">],</span>\n            <span class=\"n\">stdin</span><span class=\"o\">=</span><span class=\"n\">worker_fd</span><span class=\"p\">,</span>\n            <span class=\"n\">stdout</span><span class=\"o\">=</span><span class=\"n\">worker_fd</span><span class=\"p\">,</span>\n            <span class=\"n\">stderr</span><span class=\"o\">=</span><span class=\"n\">worker_fd</span><span class=\"p\">,</span>\n            <span class=\"n\">universal_newlines</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Close the worker_fd in the parent process as it&#39;s not needed there</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">worker_fd</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Wait for the SSH process to initialize</span>\n        <span class=\"n\">select</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">([</span><span class=\"n\">head_fd</span><span class=\"p\">],</span> <span class=\"p\">[],</span> <span class=\"p\">[])</span>\n\n        <span class=\"c1\"># Interact with the SSH process through the head_fd</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">head_fd</span> <span class=\"ow\">in</span> <span class=\"n\">select</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">([</span><span class=\"n\">head_fd</span><span class=\"p\">],</span> <span class=\"p\">[],</span> <span class=\"p\">[],</span> <span class=\"mi\">0</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                    <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">head_fd</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()</span>\n                    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n\n                <span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdin</span> <span class=\"ow\">in</span> <span class=\"n\">select</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">([</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdin</span><span class=\"p\">],</span> <span class=\"p\">[],</span> <span class=\"p\">[],</span> <span class=\"mi\">0</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                    <span class=\"n\">user_input</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdin</span><span class=\"o\">.</span><span class=\"n\">readline</span><span class=\"p\">()</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">head_fd</span><span class=\"p\">,</span> <span class=\"n\">user_input</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">())</span>\n                    <span class=\"k\">except</span> <span class=\"ne\">OSError</span><span class=\"p\">:</span>\n                        <span class=\"k\">pass</span>\n\n                    <span class=\"c1\"># terminate the SSH process gracefully</span>\n                    <span class=\"k\">if</span> <span class=\"n\">user_input</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;exit&quot;</span><span class=\"p\">:</span>\n                        <span class=\"k\">break</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">e</span>\n        <span class=\"k\">finally</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Close the head_fd and terminate the SSH process when done</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">head_fd</span><span class=\"p\">)</span>\n            <span class=\"n\">ssh_process</span><span class=\"o\">.</span><span class=\"n\">terminate</span><span class=\"p\">()</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_run_commands_with_ssh</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">commands</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">,</span>\n        <span class=\"n\">cmd_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">stream_logs</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">,</span>\n        <span class=\"n\">port_forward</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">require_outputs</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">return_codes</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">command</span> <span class=\"ow\">in</span> <span class=\"n\">commands</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">command</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;rsync&quot;</span><span class=\"p\">):</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n                        <span class=\"n\">command</span><span class=\"p\">,</span>\n                        <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                        <span class=\"n\">stdout</span><span class=\"o\">=</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">PIPE</span><span class=\"p\">,</span>\n                        <span class=\"n\">stderr</span><span class=\"o\">=</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">PIPE</span><span class=\"p\">,</span>\n                        <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">return_codes</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                        <span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">returncode</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">stderr</span><span class=\"p\">)</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">except</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">CalledProcessError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                    <span class=\"n\">return_codes</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">open_cluster_tunnels</span><span class=\"p\">:</span>\n                    <span class=\"c1\"># Make sure tunnel is up before running commands (e.g. calling ``restart_server`` right after</span>\n                    <span class=\"c1\"># loading the cluster with dryrun)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connect_server_client</span><span class=\"p\">()</span>\n\n                <span class=\"c1\"># Host can be replaced with name (as reflected in the ~/.ssh/config file)</span>\n                <span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">SkySSHRunner</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                    <span class=\"n\">ssh_user</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_USER</span><span class=\"p\">,</span>\n                    <span class=\"n\">ssh_private_key</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_abs_ssh_key_path</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">command</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">cmd_prefix</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">command</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"k\">if</span> <span class=\"n\">cmd_prefix</span> <span class=\"k\">else</span> <span class=\"n\">command</span>\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Running command on </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">: </span><span class=\"si\">{</span><span class=\"n\">command</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">return_code</span><span class=\"p\">,</span> <span class=\"n\">stdout</span><span class=\"p\">,</span> <span class=\"n\">stderr</span> <span class=\"o\">=</span> <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n                    <span class=\"n\">command</span><span class=\"p\">,</span>\n                    <span class=\"n\">require_outputs</span><span class=\"o\">=</span><span class=\"n\">require_outputs</span><span class=\"p\">,</span>\n                    <span class=\"n\">stream_logs</span><span class=\"o\">=</span><span class=\"n\">stream_logs</span><span class=\"p\">,</span>\n                    <span class=\"n\">port_forward</span><span class=\"o\">=</span><span class=\"n\">port_forward</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n\n                <span class=\"k\">if</span> <span class=\"p\">(</span>\n                    <span class=\"n\">return_code</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span>\n                    <span class=\"ow\">and</span> <span class=\"s2\">&quot;dpkg: error processing package install-info&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">stdout</span>\n                <span class=\"p\">):</span>\n                    <span class=\"c1\"># **NOTE**: there may be issues with some SageMaker GPUs post installation script which</span>\n                    <span class=\"c1\"># leads to an error which looks something like: &quot;installed install-info package post-installation</span>\n                    <span class=\"c1\"># script subprocess returned error exit status 2&quot;</span>\n                    <span class=\"c1\"># https://askubuntu.com/questions/1034961/cant-upgrade-error-etc-environment-source-not-found-and-error-processin</span>\n                    <span class=\"c1\"># /etc/environment file may also be corrupt, replacing with an empty file allows</span>\n                    <span class=\"c1\"># subsequent python commands to run</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_run_commands_with_ssh</span><span class=\"p\">(</span>\n                        <span class=\"n\">commands</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;cd /var/lib/dpkg/info &amp;&amp; sudo rm *.postinst &quot;</span>\n                            <span class=\"s2\">&quot;&amp;&amp; sudo mv /etc/environment /etc/environment_broken &quot;</span>\n                            <span class=\"s2\">&quot;&amp;&amp; sudo touch /etc/environment &quot;</span>\n                            <span class=\"sa\">f</span><span class=\"s2\">&quot;&amp;&amp; </span><span class=\"si\">{</span><span class=\"n\">command</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                        <span class=\"p\">],</span>\n                        <span class=\"n\">cmd_prefix</span><span class=\"o\">=</span><span class=\"n\">cmd_prefix</span><span class=\"p\">,</span>\n                        <span class=\"n\">stream_logs</span><span class=\"o\">=</span><span class=\"n\">stream_logs</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n\n                <span class=\"n\">return_codes</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">return_code</span><span class=\"p\">,</span> <span class=\"n\">stdout</span><span class=\"p\">,</span> <span class=\"n\">stderr</span><span class=\"p\">))</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">return_codes</span>\n\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"c1\"># Cluster Provisioning &amp; Launching</span>\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_create_launch_estimator</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create the estimator object used for launching the cluster. If a custom estimator is provided, use that.</span>\n<span class=\"sd\">        Otherwise, use a Runhouse default estimator to launch.</span>\n<span class=\"sd\">        **Note If an estimator is provided, Runhouse will override the entry point and source dir to use the</span>\n<span class=\"sd\">        default Runhouse entry point and source dir. This is to ensure that the connection to the cluster</span>\n<span class=\"sd\">        can be maintained even if the job fails, after it has completed, or if autostop is enabled.**&quot;&quot;&quot;</span>\n        <span class=\"c1\"># Note: these entry points must point to the existing local files</span>\n        <span class=\"n\">default_entry_point</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;launch_instance.py&quot;</span>\n        <span class=\"n\">full_module_name</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;scripts/sagemaker_cluster/</span><span class=\"si\">{</span><span class=\"n\">default_entry_point</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"n\">entry_point_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_path_for_module</span><span class=\"p\">(</span><span class=\"n\">full_module_name</span><span class=\"p\">)</span>\n        <span class=\"n\">source_dir_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">entry_point_path</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Set default_entry_point and default_source_dir</span>\n        <span class=\"n\">default_source_dir</span> <span class=\"o\">=</span> <span class=\"n\">source_dir_path</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Save the original entry point and source dir to be used on the cluster for running the estimator</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_entry_point</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">entry_point</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_source_dir</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">source_dir</span>\n\n            <span class=\"c1\"># Update the estimator with the Runhouse custom entry point and source dir</span>\n            <span class=\"c1\"># When the job is initialized, it will run through the Runhouse entry point, which will manage the</span>\n            <span class=\"c1\"># running of the custom estimator</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">entry_point</span> <span class=\"o\">=</span> <span class=\"n\">default_entry_point</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">source_dir</span> <span class=\"o\">=</span> <span class=\"n\">default_source_dir</span>\n\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># No estimator provided, use the Runhouse custom estimator (using PyTorch by default)</span>\n            <span class=\"n\">estimator_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;instance_count&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_count</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;role&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">role</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;image_uri&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">image_uri</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;framework_version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2.0.1&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;py_version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;py310&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;entry_point&quot;</span><span class=\"p\">:</span> <span class=\"n\">default_entry_point</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;source_dir&quot;</span><span class=\"p\">:</span> <span class=\"n\">default_source_dir</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;instance_type&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_type</span><span class=\"p\">,</span>\n                <span class=\"c1\"># https://docs.aws.amazon.com/sagemaker/latest/dg/train-warm-pools.html</span>\n                <span class=\"s2\">&quot;keep_alive_period_in_seconds&quot;</span><span class=\"p\">:</span> <span class=\"mi\">3600</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">PyTorch</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">estimator_dict</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_launch_new_cluster</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_launch_estimator</span><span class=\"p\">()</span>\n\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Launching a new SageMaker cluster (instance count=</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_count</span><span class=\"si\">}</span><span class=\"s2\">) on instance &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;type: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_type</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_new_instance</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># If no name provided, use the autogenerated name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">latest_training_job</span><span class=\"o\">.</span><span class=\"n\">name</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cluster_instance_id</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># For compatibility with parent Cluster class methods which use an address</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span>\n\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;New SageMaker instance started with ID: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Remove stale entries from the known hosts file</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filter_known_hosts</span><span class=\"p\">()</span>\n\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Creating session with cluster via SSM&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_ssm_session_with_cluster</span><span class=\"p\">()</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check_server</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_source_dir</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_entry_point</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Copy the provided estimator&#39;s code to the cluster - Runhouse will then manage running the job in order</span>\n            <span class=\"c1\"># to preserve control over the cluster&#39;s autostop</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sync_estimator_to_cluster</span><span class=\"p\">()</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Logs for the estimator can be viewed on the cluster in &quot;</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;path: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ESTIMATOR_SRC_CODE_PATH</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ESTIMATOR_LOG_FILE</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Connection with </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> has been created. You can SSH onto &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;the cluster with the CLI using: ``ssh </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">``&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_create_new_instance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">sagemaker_ssh_helper.wrapper</span> <span class=\"kn\">import</span> <span class=\"n\">SSHEstimatorWrapper</span>\n\n        <span class=\"c1\"># Make sure the SSHEstimatorWrapper is being used by the estimator, this is necessary for</span>\n        <span class=\"c1\"># enabling the SSH tunnel to the cluster</span>\n        <span class=\"c1\"># https://github.com/aws-samples/sagemaker-ssh-helper/tree/main#step-2-modify-your-start-training-job-code</span>\n        <span class=\"n\">ssh_dependency_dir</span> <span class=\"o\">=</span> <span class=\"n\">SSHEstimatorWrapper</span><span class=\"o\">.</span><span class=\"n\">dependency_dir</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">ssh_dependency_dir</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">dependencies</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">dependencies</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">ssh_dependency_dir</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Create the SSH wrapper &amp; run the job</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_wrapper</span> <span class=\"o\">=</span> <span class=\"n\">SSHEstimatorWrapper</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">,</span> <span class=\"n\">connection_wait_time_seconds</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connection_wait_time</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_start_instance</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_create_ssm_session_with_cluster</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">num_ports_to_try</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a session with the cluster. Runs a bash script containing a series of commands which use existing</span>\n<span class=\"sd\">        SSH keys or generate new ones needed to authorize the connection with the cluster via the AWS SSM.</span>\n<span class=\"sd\">        These commands are run when the cluster is initially provisioned, or for subsequent connections if the session</span>\n<span class=\"sd\">        is longer active. Once finished, the SSH port and HTTP port will be bound to processes on</span>\n<span class=\"sd\">        localhost which are forwarded to the cluster.&quot;&quot;&quot;</span>\n        <span class=\"c1\"># https://github.com/aws-samples/sagemaker-ssh-helper/tree/main#forwarding-tcp-ports-over-ssh-tunnel</span>\n        <span class=\"n\">base_command</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_base_command_for_ssm_session</span><span class=\"p\">()</span>\n\n        <span class=\"n\">connected</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">connected</span><span class=\"p\">:</span>\n            <span class=\"n\">command</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">base_command</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_extra_ssh_args</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">num_ports_to_try</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"k\">raise</span> <span class=\"ne\">ConnectionError</span><span class=\"p\">(</span>\n                        <span class=\"sa\">f</span><span class=\"s2\">&quot;Failed to create SSM session and connect to </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> after repeated attempts.&quot;</span>\n                        <span class=\"sa\">f</span><span class=\"s2\">&quot;Make sure SSH keys exist in local path: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_abs_ssh_key_path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                    <span class=\"p\">)</span>\n\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Running command: </span><span class=\"si\">{</span><span class=\"n\">command</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n                <span class=\"c1\"># Define an event to signal completion of the SSH tunnel setup</span>\n                <span class=\"n\">tunnel_setup_complete</span> <span class=\"o\">=</span> <span class=\"n\">threading</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"p\">()</span>\n\n                <span class=\"c1\"># Manually allocate a pseudo-terminal to prevent a &quot;pseudo-terminal not allocated&quot; error</span>\n                <span class=\"n\">head_fd</span><span class=\"p\">,</span> <span class=\"n\">worker_fd</span> <span class=\"o\">=</span> <span class=\"n\">pty</span><span class=\"o\">.</span><span class=\"n\">openpty</span><span class=\"p\">()</span>\n\n                <span class=\"k\">def</span> <span class=\"nf\">run_ssm_session_cmd</span><span class=\"p\">():</span>\n                    <span class=\"c1\"># Execute the command with the pseudo-terminal in a separate thread</span>\n                    <span class=\"n\">process</span> <span class=\"o\">=</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">Popen</span><span class=\"p\">(</span>\n                        <span class=\"n\">command</span><span class=\"p\">,</span>\n                        <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                        <span class=\"n\">stdout</span><span class=\"o\">=</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">PIPE</span><span class=\"p\">,</span>\n                        <span class=\"n\">stdin</span><span class=\"o\">=</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">PIPE</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n\n                    <span class=\"c1\"># Close the worker file descriptor as we don&#39;t need it</span>\n                    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">worker_fd</span><span class=\"p\">)</span>\n\n                    <span class=\"c1\"># Close the master file descriptor after reading the output</span>\n                    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">head_fd</span><span class=\"p\">)</span>\n\n                    <span class=\"c1\"># Wait for the process to complete and collect its return code</span>\n                    <span class=\"n\">process</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span>\n\n                    <span class=\"c1\"># Signal that the tunnel setup is complete</span>\n                    <span class=\"n\">tunnel_setup_complete</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">()</span>\n\n                <span class=\"n\">tunnel_thread</span> <span class=\"o\">=</span> <span class=\"n\">threading</span><span class=\"o\">.</span><span class=\"n\">Thread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">run_ssm_session_cmd</span><span class=\"p\">)</span>\n                <span class=\"n\">tunnel_thread</span><span class=\"o\">.</span><span class=\"n\">daemon</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>  <span class=\"c1\"># Set the thread as a daemon, so it won&#39;t block the main thread</span>\n\n                <span class=\"c1\"># Start the SSH tunnel thread</span>\n                <span class=\"n\">tunnel_thread</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n                <span class=\"c1\"># Give time for the SSM session to start, SSH keys to be copied onto the cluster, and the SSH port</span>\n                <span class=\"c1\"># forwarding command to run</span>\n                <span class=\"n\">tunnel_setup_complete</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ports_are_in_use</span><span class=\"p\">():</span>\n                    <span class=\"c1\"># Command should bind SSH port and HTTP port on localhost, if this is not the case try re-running</span>\n                    <span class=\"c1\"># the bash script with a different set of ports</span>\n                    <span class=\"c1\"># E.g. \u276f lsof -i:11022,50052</span>\n                    <span class=\"c1\"># COMMAND   PID   USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME</span>\n                    <span class=\"c1\"># ssh     97115 myuser    3u  IPv4 0xcf81f230786cc9fd      0t0  TCP localhost:50052 (LISTEN)</span>\n                    <span class=\"c1\"># ssh     97115 myuser    6u  IPv4 0xcf81f230786eff6d      0t0  TCP localhost:11022 (LISTEN)</span>\n                    <span class=\"k\">raise</span> <span class=\"ne\">ConnectionError</span>\n\n                <span class=\"c1\"># Update the SSH config for the cluster with the connected SSH port</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_or_update_ssh_config_entry</span><span class=\"p\">()</span>\n\n                <span class=\"n\">connected</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;Created SSM session using ports </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_port</span><span class=\"si\">}</span><span class=\"s2\"> and </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_local_port</span><span class=\"si\">}</span><span class=\"s2\">. &quot;</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;All active sessions can be viewed with: ``aws ssm describe-sessions --state Active``&quot;</span>\n                <span class=\"p\">)</span>\n\n            <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"ne\">ConnectionError</span><span class=\"p\">,</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">CalledProcessError</span><span class=\"p\">):</span>\n                <span class=\"c1\"># Try re-running with updated the ports - possible the ports are already in use</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_local_port</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_port</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"n\">num_ports_to_try</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n                <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_start_instance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Call the SageMaker CreateTrainingJob API to start the training job on the cluster.&quot;&quot;&quot;</span>\n        <span class=\"c1\"># TODO [JL] Note: Keeping private until re-running training jobs on the same cluster is supported</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;No estimator found, cannot run job.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span>\n            <span class=\"n\">wait</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"n\">job_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_name</span> <span class=\"ow\">or</span> <span class=\"n\">_generate_default_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s2\">&quot;-&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_load_base_command_for_ssm_session</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Bash script command for creating the SSM session and uploading the SSH keys to the cluster. Will try</span>\n<span class=\"sd\">        reusing existing keys locally if they exist, otherwise will generate new ones locally and copy them to s3.&quot;&quot;&quot;</span>\n        <span class=\"n\">private_key_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_abs_ssh_key_path</span>\n        <span class=\"n\">public_key_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_public_key_path</span>\n\n        <span class=\"n\">resource_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;scripts/sagemaker_cluster/start-ssm-proxy-connection.sh&quot;</span>\n        <span class=\"n\">script_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_path_for_module</span><span class=\"p\">(</span><span class=\"n\">resource_name</span><span class=\"p\">)</span>\n\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"n\">script_path</span><span class=\"p\">,</span> <span class=\"mo\">0o755</span><span class=\"p\">)</span>\n\n        <span class=\"n\">s3_key_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_keys_path</span>\n\n        <span class=\"c1\"># bash script which creates an SSM session with the cluster</span>\n        <span class=\"n\">base_command</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s1\">&#39;bash </span><span class=\"si\">{</span><span class=\"n\">script_path</span><span class=\"si\">}</span><span class=\"s1\"> &quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"si\">}</span><span class=\"s1\">&quot; &#39;</span>\n            <span class=\"sa\">f</span><span class=\"s1\">&#39;&quot;</span><span class=\"si\">{</span><span class=\"n\">s3_key_path</span><span class=\"si\">}</span><span class=\"s1\">&quot; &quot;</span><span class=\"si\">{</span><span class=\"n\">private_key_path</span><span class=\"si\">}</span><span class=\"s1\">&quot; &quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">region</span><span class=\"si\">}</span><span class=\"s1\">&quot;&#39;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"n\">s3_key_path</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;/&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">s3_key_path</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)[</span><span class=\"mi\">3</span><span class=\"p\">:])</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">public_key_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">()</span> <span class=\"ow\">and</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">private_key_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n            <span class=\"c1\"># If the key pair exists locally, make sure a matching public key also exists in s3</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_public_key_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">public_key</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_public_key_to_authorized_keys</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">public_key</span><span class=\"p\">)</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">base_command</span>\n\n        <span class=\"c1\"># If no private + public keys exists generate a new key pair from scratch</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;No private + public keypair found in local path: </span><span class=\"si\">{</span><span class=\"n\">private_key_path</span><span class=\"si\">}</span><span class=\"s2\">. Generating a new key pair &quot;</span>\n            <span class=\"s2\">&quot;locally and uploading the new public key to s3&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_new_ssh_key_pair</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">base_command</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_refresh_ssm_session_with_cluster</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">num_ports_to_try</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Reconnect to the cluster via the AWS SSM. This bypasses the step of creating a new SSH key which was already</span>\n<span class=\"sd\">        done when upping the cluster. Note: this assumes the session has previously been created, which we do when</span>\n<span class=\"sd\">        the cluster has been upped.</span>\n\n<span class=\"sd\">        To view all sessions: ``aws ssm describe-sessions --state Active``</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">ssh_key_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_abs_ssh_key_path</span>\n        <span class=\"n\">public_key_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_public_key_path</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">ssh_key_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">()</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">public_key_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;SSH key pairs not found in paths: </span><span class=\"si\">{</span><span class=\"n\">ssh_key_path</span><span class=\"si\">}</span><span class=\"s2\"> and </span><span class=\"si\">{</span><span class=\"n\">public_key_path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_ssm_session_with_cluster</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># https://github.com/aws-samples/sagemaker-ssh-helper/blob/main/sagemaker_ssh_helper/sm-connect-ssh-proxy</span>\n        <span class=\"n\">full_module_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;scripts/sagemaker_cluster/refresh-ssm-session.sh&quot;</span>\n        <span class=\"n\">script_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_path_for_module</span><span class=\"p\">(</span><span class=\"n\">full_module_name</span><span class=\"p\">)</span>\n\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"n\">script_path</span><span class=\"p\">,</span> <span class=\"mo\">0o755</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Remove stale entries from the known hosts file - this is import for avoiding collisions when</span>\n        <span class=\"c1\"># subsequent clusters are created as the IP address is added to the file as: [localhost]:11022</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filter_known_hosts</span><span class=\"p\">()</span>\n\n        <span class=\"n\">num_ports_total</span> <span class=\"o\">=</span> <span class=\"n\">num_ports_to_try</span>\n        <span class=\"n\">connected</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">connected</span><span class=\"p\">:</span>\n            <span class=\"n\">command</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">script_path</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"p\">,</span>\n                <span class=\"n\">ssh_key_path</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">region</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">shlex</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_extra_ssh_args</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">num_ports_to_try</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">ConnectionError</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;Failed to create connection with </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> after </span><span class=\"si\">{</span><span class=\"n\">num_ports_total</span><span class=\"si\">}</span><span class=\"s2\"> attempts &quot;</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;(cluster status=`</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;TrainingJobStatus&#39;</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">`). Make sure that another SageMaker &quot;</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;cluster is not already active, that AWS CLI V2 is installed, and that the path has been properly &quot;</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;added to your bash profile&quot;</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;(https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-troubleshooting.html). &quot;</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;If the problem continues to persist, try running the command to create the session &quot;</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;manually: `bash </span><span class=\"si\">{</span><span class=\"s1\">&#39; &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">`&quot;</span>\n                <span class=\"p\">)</span>\n\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">Popen</span><span class=\"p\">(</span>\n                    <span class=\"n\">command</span><span class=\"p\">,</span>\n                    <span class=\"n\">stdout</span><span class=\"o\">=</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">PIPE</span><span class=\"p\">,</span>\n                    <span class=\"n\">stderr</span><span class=\"o\">=</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">PIPE</span><span class=\"p\">,</span>\n                    <span class=\"n\">stdin</span><span class=\"o\">=</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">PIPE</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n\n                <span class=\"c1\"># Give enough time for the aws ssm + ssh port forwarding commands in the script to complete</span>\n                <span class=\"c1\"># Better to wait a few more seconds than to restart the HTTP server and Ray on the cluster unnecessarily</span>\n                <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ports_are_in_use</span><span class=\"p\">():</span>\n                    <span class=\"c1\"># Command should bind SSH port and HTTP port on localhost, if this is not the case try re-running</span>\n                    <span class=\"c1\"># with different ports</span>\n                    <span class=\"k\">raise</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">error</span>\n\n                <span class=\"n\">connected</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Successfully refreshed SSM session with </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n            <span class=\"k\">except</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">:</span>\n                <span class=\"c1\"># If the refresh didn&#39;t work try connecting with a different port - could be that the port</span>\n                <span class=\"c1\"># is already taken</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_local_port</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_port</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"n\">num_ports_to_try</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n                <span class=\"k\">pass</span>\n\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"c1\"># SSH Keys Management</span>\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_create_new_ssh_key_pair</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a new private / public key pairing needed for SSHing into the cluster.&quot;&quot;&quot;</span>\n        <span class=\"n\">private_key_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_abs_ssh_key_path</span>\n        <span class=\"n\">ssh_key</span> <span class=\"o\">=</span> <span class=\"n\">paramiko</span><span class=\"o\">.</span><span class=\"n\">RSAKey</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">bits</span><span class=\"o\">=</span><span class=\"mi\">2048</span><span class=\"p\">)</span>\n\n        <span class=\"n\">ssh_key</span><span class=\"o\">.</span><span class=\"n\">write_private_key_file</span><span class=\"p\">(</span><span class=\"n\">private_key_path</span><span class=\"p\">)</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"n\">private_key_path</span><span class=\"p\">,</span> <span class=\"mo\">0o600</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Set the comment for the public key to include username and hostname</span>\n        <span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_key_comment</span>\n        <span class=\"n\">public_key</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;ssh-rsa </span><span class=\"si\">{</span><span class=\"n\">ssh_key</span><span class=\"o\">.</span><span class=\"n\">get_base64</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">comment</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"c1\"># Update the public key locally</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_write_public_key</span><span class=\"p\">(</span><span class=\"n\">public_key</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Update the public key in s3</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_public_key_to_authorized_keys</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">public_key</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_add_public_key_to_authorized_keys</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">public_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add the public key to the authorized keys file stored in S3. This file will get copied onto the cluster&#39;s</span>\n<span class=\"sd\">        authorized keys file.&quot;&quot;&quot;</span>\n        <span class=\"n\">path_to_auth_keys</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_path_to_auth_keys</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n        <span class=\"n\">authorized_keys</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_authorized_keys</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">path_to_auth_keys</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">authorized_keys</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Create a new authorized keys file</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;No authorized keys file found in s3 path: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_keys_path</span><span class=\"si\">}</span><span class=\"s2\">. Creating and uploading a new file.&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_upload_key_to_s3</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">path_to_auth_keys</span><span class=\"p\">,</span> <span class=\"n\">public_key</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">public_key</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">authorized_keys</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Add the public key to the existing authorized keys saved in s3</span>\n            <span class=\"n\">authorized_keys</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"si\">{</span><span class=\"n\">public_key</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Adding public key to authorized keys file saved for the cluster &quot;</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;in path: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_keys_path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_upload_key_to_s3</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">path_to_auth_keys</span><span class=\"p\">,</span> <span class=\"n\">authorized_keys</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_path_to_auth_keys</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Path to the authorized keys file stored in the s3 bucket for the role ARN associated with the cluster.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">key</span> <span class=\"o\">+</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SSH_KEY_FILE_NAME</span><span class=\"si\">}</span><span class=\"s2\">.pub&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_write_public_key</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">public_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Update the public key stored locally.&quot;&quot;&quot;</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_public_key_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">public_key</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_upload_key_to_s3</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Save a public key to the authorized file in the default bucket for given SageMaker role.&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_client</span><span class=\"o\">.</span><span class=\"n\">put_object</span><span class=\"p\">(</span>\n            <span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"n\">bucket</span><span class=\"p\">,</span>\n            <span class=\"n\">Key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">,</span>\n            <span class=\"n\">Body</span><span class=\"o\">=</span><span class=\"n\">body</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_load_authorized_keys</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">auth_keys_file</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Load the authorized keys file for this AWS role stored in S3. If no file exists, return None.&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_client</span><span class=\"o\">.</span><span class=\"n\">get_object</span><span class=\"p\">(</span><span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">Key</span><span class=\"o\">=</span><span class=\"n\">auth_keys_file</span><span class=\"p\">)</span>\n            <span class=\"n\">existing_pub_keys</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s2\">&quot;Body&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">existing_pub_keys</span>\n\n        <span class=\"k\">except</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_client</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">NoSuchKey</span><span class=\"p\">:</span>\n            <span class=\"c1\"># No authorized keys file exists in s3 for this role</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">e</span>\n\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"c1\"># Cluster Helpers</span>\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_rsync</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">dest</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">up</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">contents</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">source</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">source</span>\n        <span class=\"n\">dest</span> <span class=\"o\">=</span> <span class=\"n\">dest</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dest</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">dest</span>\n\n        <span class=\"n\">command</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;rsync -rvh --exclude=&#39;.git&#39; --exclude=&#39;venv*/&#39; --exclude=&#39;dist/&#39; --exclude=&#39;docs/&#39; &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;--exclude=&#39;__pycache__/&#39; --exclude=&#39;.*&#39; &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;--include=&#39;.rh/&#39; -e &#39;ssh -o StrictHostKeyChecking=no &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;-i </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_abs_ssh_key_path</span><span class=\"si\">}</span><span class=\"s2\"> -p </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_port</span><span class=\"si\">}</span><span class=\"s2\">&#39; </span><span class=\"si\">{</span><span class=\"n\">source</span><span class=\"si\">}</span><span class=\"s2\"> root@localhost:</span><span class=\"si\">{</span><span class=\"n\">dest</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Syncing </span><span class=\"si\">{</span><span class=\"n\">source</span><span class=\"si\">}</span><span class=\"s2\"> to: </span><span class=\"si\">{</span><span class=\"n\">dest</span><span class=\"si\">}</span><span class=\"s2\"> on cluster&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">return_codes</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"n\">command</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"n\">return_codes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;rsync to SageMaker cluster failed: </span><span class=\"si\">{</span><span class=\"n\">return_codes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_cluster_instance_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get the instance ID of the cluster. This is the ID of the instance running the training job generated</span>\n<span class=\"sd\">        by SageMaker.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_wrapper</span><span class=\"p\">:</span>\n            <span class=\"c1\"># This is a hack to effectively do list.get(0, None)</span>\n            <span class=\"k\">return</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_wrapper</span><span class=\"o\">.</span><span class=\"n\">get_instance_ids</span><span class=\"p\">()),</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n        <span class=\"kn\">from</span> <span class=\"nn\">sagemaker_ssh_helper.manager</span> <span class=\"kn\">import</span> <span class=\"n\">SSMManager</span>\n\n        <span class=\"n\">ssm_manager</span> <span class=\"o\">=</span> <span class=\"n\">SSMManager</span><span class=\"p\">(</span><span class=\"n\">region_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">region</span><span class=\"p\">)</span>\n        <span class=\"n\">ssm_manager</span><span class=\"o\">.</span><span class=\"n\">redo_attempts</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">instance_ids</span> <span class=\"o\">=</span> <span class=\"n\">ssm_manager</span><span class=\"o\">.</span><span class=\"n\">get_training_instance_ids</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_name</span><span class=\"p\">)</span>\n        <span class=\"c1\"># This is a hack to effectively do list.get(0, None)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"n\">instance_ids</span><span class=\"p\">),</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_path_for_module</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">resource_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">importlib.resources</span> <span class=\"k\">as</span> <span class=\"nn\">pkg_resources</span>\n\n        <span class=\"n\">package_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;runhouse&quot;</span>\n        <span class=\"n\">script_path</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pkg_resources</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">(</span><span class=\"n\">package_name</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">resource_name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">script_path</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_load_role_and_profile</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">role</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Load the SageMaker role and profile used for launching and connecting to the cluster.</span>\n<span class=\"sd\">        Role can be provided as an ARN or a name. If provided, will search for the profile containing this role</span>\n<span class=\"sd\">        in local AWS configs. If no profile is provided, try loading from the environment variable ``AWS_PROFILE``,</span>\n<span class=\"sd\">        otherwise default to using the ``default`` profile.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">:</span>\n            <span class=\"c1\"># If using an estimator must provide a name or full ARN</span>\n            <span class=\"c1\"># https://sagemaker.readthedocs.io/en/stable/api/training/estimators.html</span>\n            <span class=\"n\">role</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">role</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">role</span> <span class=\"ow\">and</span> <span class=\"n\">role</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;arn:aws&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">profile</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_find_profile_for_role</span><span class=\"p\">(</span><span class=\"n\">role</span><span class=\"p\">)</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html</span>\n            <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">profile</span> <span class=\"ow\">or</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;AWS_PROFILE&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">profile</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;default&quot;</span>\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;No profile provided or environment variable set to `AWS_PROFILE`, using the </span><span class=\"si\">{</span><span class=\"n\">profile</span><span class=\"si\">}</span><span class=\"s2\"> profile&quot;</span>\n                <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Create a sagemaker session using the profile provided</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_boto_session</span> <span class=\"o\">=</span> <span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">(</span><span class=\"n\">region_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_REGION</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_s3_client</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_boto_session</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s2\">&quot;s3&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sagemaker_session</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_sagemaker_session</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># If no role explicitly provided, use sagemaker to get it via the profile</span>\n        <span class=\"n\">role</span> <span class=\"o\">=</span> <span class=\"n\">role</span> <span class=\"ow\">or</span> <span class=\"n\">sagemaker</span><span class=\"o\">.</span><span class=\"n\">get_execution_role</span><span class=\"p\">(</span>\n            <span class=\"n\">sagemaker_session</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sagemaker_session</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">role</span><span class=\"p\">,</span> <span class=\"n\">profile</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_find_profile_for_role</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">role_arn</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Find the profile associated with a particular role ARN. If no profile is found, return None.&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">aws_dir</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s2\">&quot;~/.aws&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">credentials_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">aws_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;credentials&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">config_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">aws_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;config&quot;</span><span class=\"p\">)</span>\n\n            <span class=\"n\">profiles_with_role</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">()</span>\n\n            <span class=\"k\">for</span> <span class=\"n\">path</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">credentials_path</span><span class=\"p\">,</span> <span class=\"n\">config_path</span><span class=\"p\">]:</span>\n                <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">configparser</span><span class=\"o\">.</span><span class=\"n\">ConfigParser</span><span class=\"p\">()</span>\n                <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n                <span class=\"k\">for</span> <span class=\"n\">section</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">sections</span><span class=\"p\">():</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;role_arn&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"n\">section</span><span class=\"p\">]:</span>\n                        <span class=\"k\">if</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"n\">section</span><span class=\"p\">][</span><span class=\"s2\">&quot;role_arn&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">role_arn</span><span class=\"p\">:</span>\n                            <span class=\"c1\"># Add just the name of the profile (not the full section heading)</span>\n                            <span class=\"n\">profiles_with_role</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">section</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">profiles_with_role</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n            <span class=\"n\">profiles</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">profiles_with_role</span><span class=\"p\">)</span>\n            <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">profiles</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">profiles</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;Found multiple profiles associated with the same role. Using the first &quot;</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;one (</span><span class=\"si\">{</span><span class=\"n\">profile</span><span class=\"si\">}</span><span class=\"s2\">)&quot;</span>\n                <span class=\"p\">)</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">profile</span>\n\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Could not find a profile for role </span><span class=\"si\">{</span><span class=\"n\">role_arn</span><span class=\"si\">}</span><span class=\"s2\">: </span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_load_image_uri</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">image_uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Load the docker image URI used for launching the SageMaker instance. If no image URI is provided, use</span>\n<span class=\"sd\">        a default image based on the instance type.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">image_uri</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">image_uri</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">image_uri</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_base_image_uri</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_load_sagemaker_session</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a SageMaker session required for using the SageMaker APIs. If none is provided</span>\n<span class=\"sd\">        create one using the default region.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">sagemaker_session</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">sagemaker</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">(</span><span class=\"n\">boto_session</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_boto_session</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_stop_instance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">delete_configs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Stop the SageMaker instance. Optionally remove its config from RNS.&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sagemaker_session</span><span class=\"o\">.</span><span class=\"n\">stop_training_job</span><span class=\"p\">(</span><span class=\"n\">job_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_name</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_up</span><span class=\"p\">():</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Failed to stop cluster </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Successfully stopped cluster </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Remove stale host key(s) from known hosts</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filter_known_hosts</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">delete_configs</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Delete from RNS</span>\n            <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">delete_configs</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># Delete entry from ~/.ssh/config</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_delete_ssh_config_entry</span><span class=\"p\">()</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Deleted cluster </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> from configs&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_sync_runhouse_to_cluster</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">_install_url</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;No instance ID set for cluster </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">. Is it up?&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Sync the local ~/.rh directory to the cluster</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_rsync</span><span class=\"p\">(</span>\n            <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s2\">&quot;~/.rh&quot;</span><span class=\"p\">),</span>\n            <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">&quot;~/.rh&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">up</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">contents</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Synced ~/.rh folder to the cluster&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">local_rh_package_path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">pkgutil</span><span class=\"o\">.</span><span class=\"n\">get_loader</span><span class=\"p\">(</span><span class=\"s2\">&quot;runhouse&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parent</span>\n\n        <span class=\"c1\"># **Note** temp patch to handle PyYAML errors: https://github.com/yaml/pyyaml/issues/724</span>\n        <span class=\"n\">base_rh_install_cmd</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_env_activate_cmd</span><span class=\"si\">}</span><span class=\"s1\"> &amp;&amp; python3 -m pip install &quot;cython&lt;3.0.0&quot;&#39;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Check if runhouse is installed from source and has setup.py</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"ow\">not</span> <span class=\"n\">_install_url</span>\n            <span class=\"ow\">and</span> <span class=\"n\">local_rh_package_path</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;runhouse&quot;</span>\n            <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"n\">local_rh_package_path</span><span class=\"o\">.</span><span class=\"n\">parent</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;setup.py&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">()</span>\n        <span class=\"p\">):</span>\n            <span class=\"c1\"># Package is installed in editable mode</span>\n            <span class=\"n\">local_rh_package_path</span> <span class=\"o\">=</span> <span class=\"n\">local_rh_package_path</span><span class=\"o\">.</span><span class=\"n\">parent</span>\n            <span class=\"n\">dest_path</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;~/</span><span class=\"si\">{</span><span class=\"n\">local_rh_package_path</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_rsync</span><span class=\"p\">(</span>\n                <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">local_rh_package_path</span><span class=\"p\">),</span>\n                <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"n\">dest_path</span><span class=\"p\">,</span>\n                <span class=\"n\">up</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">contents</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">rh_install_cmd</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">base_rh_install_cmd</span><span class=\"si\">}</span><span class=\"s2\"> &amp;&amp; python3 -m pip install ./runhouse[sagemaker]&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">_install_url</span><span class=\"p\">:</span>\n                <span class=\"kn\">import</span> <span class=\"nn\">runhouse</span>\n\n                <span class=\"n\">_install_url</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;runhouse[sagemaker]==</span><span class=\"si\">{</span><span class=\"n\">runhouse</span><span class=\"o\">.</span><span class=\"n\">__version__</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"n\">rh_install_cmd</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">base_rh_install_cmd</span><span class=\"si\">}</span><span class=\"s2\"> &amp;&amp; python3 -m pip install </span><span class=\"si\">{</span><span class=\"n\">_install_url</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">status_codes</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"n\">rh_install_cmd</span><span class=\"p\">])</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">status_codes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Error installing runhouse on cluster: </span><span class=\"si\">{</span><span class=\"n\">status_codes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_load_estimator</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">estimator</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"s2\">&quot;EstimatorBase&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s2\">&quot;EstimatorBase&quot;</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Build an Estimator object from config&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">estimator</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">estimator</span><span class=\"p\">,</span> <span class=\"n\">EstimatorBase</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">estimator</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">estimator</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Unsupported estimator type. Expected dictionary or EstimatorBase, got </span><span class=\"si\">{</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">estimator</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"c1\"># Re-build the estimator object from its config</span>\n        <span class=\"n\">estimator_framework</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_framework</span>\n        <span class=\"k\">if</span> <span class=\"n\">estimator_framework</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;PyTorch&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">PyTorch</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">estimator</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">estimator_framework</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;TensorFlow&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">TensorFlow</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">estimator</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">estimator_framework</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;MXNet&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">MXNet</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">estimator</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">estimator_framework</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;XGBoost&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">XGBoost</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">estimator</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Unsupported estimator framework </span><span class=\"si\">{</span><span class=\"n\">estimator_framework</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_sync_estimator_to_cluster</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;If providing a custom estimator sync over the estimator&#39;s source directory to the cluster&quot;&quot;&quot;</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">runhouse</span> <span class=\"kn\">import</span> <span class=\"n\">folder</span>\n\n        <span class=\"n\">estimator_folder</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"p\">(</span>\n            <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_estimator_source_dir</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ESTIMATOR_SRC_CODE_PATH</span><span class=\"p\">)</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Synced estimator source directory to the cluster in path: </span><span class=\"si\">{</span><span class=\"n\">estimator_folder</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_base_image_uri</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Pick a default image for the cluster based on its instance type&quot;&quot;&quot;</span>\n        <span class=\"c1\"># TODO [JL] Add flexibility for py version &amp; framework_version</span>\n        <span class=\"n\">gpu_instance_types</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;p2&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;p3&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;p4&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;g3&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;g4&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;g5&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"n\">image_type</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"s2\">&quot;gpu&quot;</span>\n            <span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">prefix</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance_type</span> <span class=\"k\">for</span> <span class=\"n\">prefix</span> <span class=\"ow\">in</span> <span class=\"n\">gpu_instance_types</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span> <span class=\"s2\">&quot;cpu&quot;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">cuda_version</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;cu118-&quot;</span> <span class=\"k\">if</span> <span class=\"n\">image_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;gpu&quot;</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"n\">image_url</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BASE_ECR_URL</span><span class=\"si\">}</span><span class=\"s2\">/pytorch-training:2.0.1-</span><span class=\"si\">{</span><span class=\"n\">image_type</span><span class=\"si\">}</span><span class=\"s2\">-py310-</span><span class=\"si\">{</span><span class=\"n\">cuda_version</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;ubuntu20.04-sagemaker&quot;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">image_url</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_update_autostop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">autostop_mins</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">cluster_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config_for_rns</span>\n        <span class=\"n\">cluster_config</span><span class=\"p\">[</span><span class=\"s2\">&quot;autostop_mins&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">autostop_mins</span> <span class=\"ow\">or</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connect_server_client</span><span class=\"p\">()</span>\n        <span class=\"c1\"># Update the config on the server with the new autostop time</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">check_server</span><span class=\"p\">(</span><span class=\"n\">cluster_config</span><span class=\"o\">=</span><span class=\"n\">cluster_config</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"c1\"># Port Management</span>\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_ports_are_in_use</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Check if the ports used for port forwarding from localhost to the cluster are in use.&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bind_ports_to_localhost</span><span class=\"p\">()</span>\n            <span class=\"c1\"># Ports are not in use</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">except</span> <span class=\"ne\">OSError</span><span class=\"p\">:</span>\n            <span class=\"c1\"># At least one of the ports is in use</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_bind_ports_to_localhost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Try binding the SSH and HTTP ports to localhost to check if they are in use.&quot;&quot;&quot;</span>\n        <span class=\"k\">with</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">socket</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">AF_INET</span><span class=\"p\">,</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">SOCK_STREAM</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">s1</span><span class=\"p\">:</span>\n            <span class=\"n\">s1</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">((</span><span class=\"s2\">&quot;localhost&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_port</span><span class=\"p\">))</span>\n        <span class=\"k\">with</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">socket</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">AF_INET</span><span class=\"p\">,</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">SOCK_STREAM</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">s2</span><span class=\"p\">:</span>\n            <span class=\"n\">s2</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">((</span><span class=\"s2\">&quot;localhost&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_local_port</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"c1\"># SSH config</span>\n    <span class=\"c1\"># -------------------------------------------------------</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_filter_known_hosts</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;To prevent host key collisions in the ~/.ssh/known_hosts file, remove any existing entries of localhost.</span>\n<span class=\"sd\">        Since the connection to the cluster is made via localhost, remove stale entries&quot;&quot;&quot;</span>\n        <span class=\"n\">known_hosts</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hosts_path</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">known_hosts</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n            <span class=\"c1\"># e.g. in a collab or notebook environment</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">valid_hosts</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">known_hosts</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;[</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_HOST</span><span class=\"si\">}</span><span class=\"s2\">]&quot;</span><span class=\"p\">):</span>\n                    <span class=\"n\">valid_hosts</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">known_hosts</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">writelines</span><span class=\"p\">(</span><span class=\"n\">valid_hosts</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_ssh_config_entry</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">hostname</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">identity_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">textwrap</span><span class=\"o\">.</span><span class=\"n\">dedent</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">            # Added by Runhouse for SageMaker SSH Support</span>\n<span class=\"s2\">            Host </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"ow\">or</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span>\n<span class=\"s2\">              HostName </span><span class=\"si\">{</span><span class=\"n\">hostname</span><span class=\"w\"> </span><span class=\"ow\">or</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_HOST</span><span class=\"si\">}</span>\n<span class=\"s2\">              IdentityFile </span><span class=\"si\">{</span><span class=\"n\">identity_file</span><span class=\"w\"> </span><span class=\"ow\">or</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_abs_ssh_key_path</span><span class=\"si\">}</span>\n<span class=\"s2\">              Port </span><span class=\"si\">{</span><span class=\"n\">port</span><span class=\"si\">}</span>\n<span class=\"s2\">              User </span><span class=\"si\">{</span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"ow\">or</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_USER</span><span class=\"si\">}</span>\n<span class=\"s2\">        &quot;&quot;&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_add_or_update_ssh_config_entry</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Update the SSH config to allow for accessing the cluster via: ssh &lt;cluster name&gt;&quot;&quot;&quot;</span>\n        <span class=\"n\">connected_ssh_port</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_port</span>\n        <span class=\"n\">config_file</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ssh_config_file</span>\n\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">existing_config</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n        <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span>\n            <span class=\"sa\">rf</span><span class=\"s2\">&quot;^\\s*Host\\s+</span><span class=\"si\">{</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">escape</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\\s*$.*?(?=^\\s*Host\\s+|\\Z)&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">MULTILINE</span> <span class=\"o\">|</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">DOTALL</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">entry_match</span> <span class=\"o\">=</span> <span class=\"n\">pattern</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">existing_config</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">entry_match</span><span class=\"p\">:</span>\n            <span class=\"c1\"># If entry already exists update the port with the connected SSH port (may have changed from previous</span>\n            <span class=\"c1\"># connection attempt)</span>\n            <span class=\"n\">existing_entry</span> <span class=\"o\">=</span> <span class=\"n\">entry_match</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">()</span>\n            <span class=\"n\">updated_entry</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span>\n                <span class=\"sa\">r</span><span class=\"s2\">&quot;(?&lt;=Port )\\d+&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">connected_ssh_port</span><span class=\"p\">),</span> <span class=\"n\">existing_entry</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">updated_config</span> <span class=\"o\">=</span> <span class=\"n\">existing_config</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">existing_entry</span><span class=\"p\">,</span> <span class=\"n\">updated_entry</span><span class=\"p\">)</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">updated_config</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Otherwise, add the new entry to the config file</span>\n            <span class=\"n\">new_entry</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ssh_config_entry</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">connected_ssh_port</span><span class=\"p\">)</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">new_entry</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_delete_ssh_config_entry</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Remove the SSH config entry for the cluster.&quot;&quot;&quot;</span>\n        <span class=\"n\">config_file</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ssh_config_file</span>\n\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># Find the start and end lines of the entry to be deleted</span>\n        <span class=\"n\">start_line</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">job_name</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                <span class=\"n\">start_line</span> <span class=\"o\">=</span> <span class=\"n\">i</span>\n                <span class=\"k\">break</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">start_line</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"c1\"># Find the end of the entry (next empty line)</span>\n        <span class=\"n\">end_line</span> <span class=\"o\">=</span> <span class=\"n\">start_line</span>\n        <span class=\"k\">while</span> <span class=\"n\">end_line</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"n\">end_line</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">():</span>\n            <span class=\"n\">end_line</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">del</span> <span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"n\">start_line</span><span class=\"p\">:</span><span class=\"n\">end_line</span><span class=\"p\">]</span>\n\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">writelines</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/resources/hardware/sagemaker_cluster", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12"}