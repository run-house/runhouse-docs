{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "runhouse.resources.hardware.cluster_factory", "body": "<h1>Source code for runhouse.resources.hardware.cluster_factory</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.constants</span> <span class=\"kn\">import</span> <span class=\"n\">DEFAULT_SERVER_PORT</span><span class=\"p\">,</span> <span class=\"n\">LOCAL_HOSTS</span><span class=\"p\">,</span> <span class=\"n\">RESERVED_SYSTEM_NAMES</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.hardware.utils</span> <span class=\"kn\">import</span> <span class=\"n\">ServerConnectionType</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.utils.api</span> <span class=\"kn\">import</span> <span class=\"n\">relative_ssh_path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.cluster</span> <span class=\"kn\">import</span> <span class=\"n\">Cluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.on_demand_cluster</span> <span class=\"kn\">import</span> <span class=\"n\">OnDemandCluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.sagemaker.sagemaker_cluster</span> <span class=\"kn\">import</span> <span class=\"n\">SageMakerCluster</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Cluster factory method</span>\n<div class=\"viewcode-block\" id=\"cluster\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.cluster\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">cluster</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">ssh_creds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">server_port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">server_host</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">server_connection_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">ServerConnectionType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">ssl_keyfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">ssl_certfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">domain</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">den_auth</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">default_env</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"s2\">&quot;Env&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Cluster</span><span class=\"p\">,</span> <span class=\"n\">OnDemandCluster</span><span class=\"p\">,</span> <span class=\"n\">SageMakerCluster</span><span class=\"p\">]:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Builds an instance of :class:`Cluster`.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        name (str): Name for the cluster, to re-use later on.</span>\n<span class=\"sd\">        host (str or List[str], optional): Hostname (e.g. domain or name in .ssh/config), IP address, or list of IP</span>\n<span class=\"sd\">            addresses for the cluster (the first of which is the head node).</span>\n<span class=\"sd\">        ssh_creds (dict or str, optional): SSH credentials, passed as dictionary or the name of an `SSHSecret` object.</span>\n<span class=\"sd\">            Example: ``ssh_creds={&#39;ssh_user&#39;: &#39;...&#39;, &#39;ssh_private_key&#39;:&#39;&lt;path_to_key&gt;&#39;}``</span>\n<span class=\"sd\">        server_port (bool, optional): Port to use for the server. If not provided will use 80 for a</span>\n<span class=\"sd\">            ``server_connection_type`` of ``none``, 443 for ``tls`` and ``32300`` for all other SSH connection types.</span>\n<span class=\"sd\">        server_host (bool, optional): Host from which the server listens for traffic (i.e. the --host argument</span>\n<span class=\"sd\">            `runhouse start` run on the cluster). Defaults to &quot;0.0.0.0&quot; unless connecting to the server with an SSH</span>\n<span class=\"sd\">            connection, in which case ``localhost`` is used.</span>\n<span class=\"sd\">        server_connection_type (ServerConnectionType or str, optional): Type of connection to use for the Runhouse</span>\n<span class=\"sd\">            API server. ``ssh`` will use start with server via an SSH tunnel. ``tls`` will start the server</span>\n<span class=\"sd\">            with HTTPS on port 443 using TLS certs without an SSH tunnel. ``none`` will start the server with HTTP</span>\n<span class=\"sd\">            without an SSH tunnel. ``aws_ssm`` will start the server with HTTP using AWS SSM port forwarding.</span>\n<span class=\"sd\">        ssl_keyfile(str, optional): Path to SSL key file to use for launching the API server with HTTPS.</span>\n<span class=\"sd\">        ssl_certfile(str, optional): Path to SSL certificate file to use for launching the API server with HTTPS.</span>\n<span class=\"sd\">        domain(str, optional): Domain name for the cluster. Relevant if enabling HTTPs on the cluster.</span>\n<span class=\"sd\">        den_auth (bool, optional): Whether to use Den authorization on the server. If ``True``, will validate incoming</span>\n<span class=\"sd\">            requests with a Runhouse token provided in the auth headers of the request with the format:</span>\n<span class=\"sd\">            ``{&quot;Authorization&quot;: &quot;Bearer &lt;token&gt;&quot;}``. (Default: ``None``).</span>\n<span class=\"sd\">        default_env (Env or str, optional): Environment that the Runhouse server is started on in the cluster. Used to</span>\n<span class=\"sd\">            specify an isolated environment (e.g. conda env) or any setup and requirements prior to starting the Runhouse</span>\n<span class=\"sd\">            server. (Default: ``None``)</span>\n<span class=\"sd\">        dryrun (bool): Whether to create the Cluster if it doesn&#39;t exist, or load a Cluster object as a dryrun.</span>\n<span class=\"sd\">            (Default: ``False``)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        Union[Cluster, OnDemandCluster, SageMakerCluster]: The resulting cluster.</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; # using private key</span>\n<span class=\"sd\">        &gt;&gt;&gt; gpu = rh.cluster(host=&#39;&lt;hostname&gt;&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  ssh_creds={&#39;ssh_user&#39;: &#39;...&#39;, &#39;ssh_private_key&#39;:&#39;&lt;path_to_key&gt;&#39;},</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  name=&#39;rh-a10x&#39;).save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # using password</span>\n<span class=\"sd\">        &gt;&gt;&gt; gpu = rh.cluster(host=&#39;&lt;hostname&gt;&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  ssh_creds={&#39;ssh_user&#39;: &#39;...&#39;, &#39;password&#39;:&#39;*****&#39;},</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  name=&#39;rh-a10x&#39;).save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # using the name of an SSHSecret object</span>\n<span class=\"sd\">        &gt;&gt;&gt; gpu = rh.cluster(host=&#39;&lt;hostname&gt;&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  ssh_creds=&quot;my_ssh_secret&quot;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  name=&#39;rh-a10x&#39;).save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # Load cluster from above</span>\n<span class=\"sd\">        &gt;&gt;&gt; reloaded_cluster = rh.cluster(name=&quot;rh-a10x&quot;)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">host</span> <span class=\"ow\">and</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;ips&quot;</span><span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;Cluster factory method can only accept one of `host` or `ips` as an argument.&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n        <span class=\"n\">alt_options</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n            <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">host</span><span class=\"p\">,</span>\n            <span class=\"n\">ssh_creds</span><span class=\"o\">=</span><span class=\"n\">ssh_creds</span><span class=\"p\">,</span>\n            <span class=\"n\">server_port</span><span class=\"o\">=</span><span class=\"n\">server_port</span><span class=\"p\">,</span>\n            <span class=\"n\">server_host</span><span class=\"o\">=</span><span class=\"n\">server_host</span><span class=\"p\">,</span>\n            <span class=\"n\">server_connection_type</span><span class=\"o\">=</span><span class=\"n\">server_connection_type</span><span class=\"p\">,</span>\n            <span class=\"n\">ssl_keyfile</span><span class=\"o\">=</span><span class=\"n\">ssl_keyfile</span><span class=\"p\">,</span>\n            <span class=\"n\">ssl_certfile</span><span class=\"o\">=</span><span class=\"n\">ssl_certfile</span><span class=\"p\">,</span>\n            <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"n\">domain</span><span class=\"p\">,</span>\n            <span class=\"n\">den_auth</span><span class=\"o\">=</span><span class=\"n\">den_auth</span><span class=\"p\">,</span>\n            <span class=\"n\">default_env</span><span class=\"o\">=</span><span class=\"n\">default_env</span><span class=\"p\">,</span>\n            <span class=\"n\">kwargs</span><span class=\"o\">=</span><span class=\"n\">kwargs</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># Filter out None/default values</span>\n        <span class=\"n\">alt_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">alt_options</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">}</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Cluster</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">,</span> <span class=\"n\">alt_options</span><span class=\"o\">=</span><span class=\"n\">alt_options</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">c</span><span class=\"p\">:</span>\n                <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_connection_defaults</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"n\">c</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">alt_options</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"n\">e</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">ssh_creds</span><span class=\"p\">:</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets.utils</span> <span class=\"kn\">import</span> <span class=\"n\">setup_cluster_creds</span>\n\n        <span class=\"n\">ssh_creds_secret</span> <span class=\"o\">=</span> <span class=\"n\">setup_cluster_creds</span><span class=\"p\">(</span><span class=\"n\">ssh_creds</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">ssh_creds_secret</span> <span class=\"o\">=</span> <span class=\"n\">ssh_creds</span>\n\n    <span class=\"k\">if</span> <span class=\"s2\">&quot;instance_type&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n        <span class=\"k\">return</span> <span class=\"n\">ondemand_cluster</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">creds</span><span class=\"o\">=</span><span class=\"n\">ssh_creds_secret</span><span class=\"p\">,</span>\n            <span class=\"n\">server_port</span><span class=\"o\">=</span><span class=\"n\">server_port</span><span class=\"p\">,</span>\n            <span class=\"n\">server_host</span><span class=\"o\">=</span><span class=\"n\">server_host</span><span class=\"p\">,</span>\n            <span class=\"n\">server_connection_type</span><span class=\"o\">=</span><span class=\"n\">server_connection_type</span><span class=\"p\">,</span>\n            <span class=\"n\">ssl_keyfile</span><span class=\"o\">=</span><span class=\"n\">ssl_keyfile</span><span class=\"p\">,</span>\n            <span class=\"n\">ssl_certfile</span><span class=\"o\">=</span><span class=\"n\">ssl_certfile</span><span class=\"p\">,</span>\n            <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"n\">domain</span><span class=\"p\">,</span>\n            <span class=\"n\">den_auth</span><span class=\"o\">=</span><span class=\"n\">den_auth</span><span class=\"p\">,</span>\n            <span class=\"n\">default_env</span><span class=\"o\">=</span><span class=\"n\">default_env</span><span class=\"p\">,</span>\n            <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n            <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span>\n        <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;role&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;estimator&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;instance_type&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;connection_wait_time&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;num_instances&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;The `cluster` factory is intended to be used for static clusters. &quot;</span>\n            <span class=\"s2\">&quot;If you would like to create a sagemaker cluster, please use `rh.sagemaker_cluster()` instead.&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">sagemaker_cluster</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">ssh_creds</span><span class=\"o\">=</span><span class=\"n\">ssh_creds</span><span class=\"p\">,</span>\n            <span class=\"n\">server_port</span><span class=\"o\">=</span><span class=\"n\">server_port</span><span class=\"p\">,</span>\n            <span class=\"n\">server_host</span><span class=\"o\">=</span><span class=\"n\">server_host</span><span class=\"p\">,</span>\n            <span class=\"n\">server_connection_type</span><span class=\"o\">=</span><span class=\"n\">server_connection_type</span><span class=\"p\">,</span>\n            <span class=\"n\">ssl_keyfile</span><span class=\"o\">=</span><span class=\"n\">ssl_keyfile</span><span class=\"p\">,</span>\n            <span class=\"n\">ssl_certfile</span><span class=\"o\">=</span><span class=\"n\">ssl_certfile</span><span class=\"p\">,</span>\n            <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"n\">domain</span><span class=\"p\">,</span>\n            <span class=\"n\">den_auth</span><span class=\"o\">=</span><span class=\"n\">den_auth</span><span class=\"p\">,</span>\n            <span class=\"n\">default_env</span><span class=\"o\">=</span><span class=\"n\">default_env</span><span class=\"p\">,</span>\n            <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n            <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">server_connection_type</span> <span class=\"o\">==</span> <span class=\"n\">ServerConnectionType</span><span class=\"o\">.</span><span class=\"n\">AWS_SSM</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Cluster does not support server connection type of </span><span class=\"si\">{</span><span class=\"n\">server_connection_type</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">host</span><span class=\"p\">]</span>\n\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Cluster</span><span class=\"p\">(</span>\n        <span class=\"n\">ips</span><span class=\"o\">=</span><span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;ips&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">host</span><span class=\"p\">,</span>\n        <span class=\"n\">creds</span><span class=\"o\">=</span><span class=\"n\">ssh_creds_secret</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">server_host</span><span class=\"o\">=</span><span class=\"n\">server_host</span><span class=\"p\">,</span>\n        <span class=\"n\">server_port</span><span class=\"o\">=</span><span class=\"n\">server_port</span><span class=\"p\">,</span>\n        <span class=\"n\">server_connection_type</span><span class=\"o\">=</span><span class=\"n\">server_connection_type</span><span class=\"p\">,</span>\n        <span class=\"n\">ssl_keyfile</span><span class=\"o\">=</span><span class=\"n\">ssl_keyfile</span><span class=\"p\">,</span>\n        <span class=\"n\">ssl_certfile</span><span class=\"o\">=</span><span class=\"n\">ssl_certfile</span><span class=\"p\">,</span>\n        <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"n\">domain</span><span class=\"p\">,</span>\n        <span class=\"n\">den_auth</span><span class=\"o\">=</span><span class=\"n\">den_auth</span><span class=\"p\">,</span>\n        <span class=\"n\">default_env</span><span class=\"o\">=</span><span class=\"n\">default_env</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_connection_defaults</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">den_auth</span><span class=\"p\">:</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">c</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">kubernetes_cluster</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">instance_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">namespace</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">kube_config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">server_connection_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">ServerConnectionType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">OnDemandCluster</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># if user passes provider via kwargs to kubernetes_cluster</span>\n    <span class=\"n\">provider_passed</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;provider&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">provider_passed</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">provider_passed</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;kubernetes&quot;</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Runhouse K8s Cluster provider must be `kubernetes`. &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;You passed </span><span class=\"si\">{</span><span class=\"n\">provider_passed</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"c1\"># checking server_connection_type passed over from ondemand_cluster factory method</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span>\n        <span class=\"n\">server_connection_type</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n        <span class=\"ow\">and</span> <span class=\"n\">server_connection_type</span> <span class=\"o\">!=</span> <span class=\"n\">ServerConnectionType</span><span class=\"o\">.</span><span class=\"n\">SSH</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Runhouse K8s Cluster server connection type must be set to `ssh`. &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;You passed </span><span class=\"si\">{</span><span class=\"n\">server_connection_type</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">namespace</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;You passed both a context and a namespace. Ensure your namespace matches the one in your context.&quot;</span><span class=\"p\">,</span>\n            <span class=\"ne\">UserWarning</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">namespace</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>  <span class=\"c1\"># check if user passed a user-defined namespace</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;kubectl config set-context --current --namespace=</span><span class=\"si\">{</span><span class=\"n\">namespace</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">process</span> <span class=\"o\">=</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n                <span class=\"n\">cmd</span><span class=\"p\">,</span>\n                <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">check</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">stdout</span><span class=\"o\">=</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">PIPE</span><span class=\"p\">,</span>\n                <span class=\"n\">stderr</span><span class=\"o\">=</span><span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">PIPE</span><span class=\"p\">,</span>\n                <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"n\">process</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">)</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Kubernetes namespace set to </span><span class=\"si\">{</span><span class=\"n\">namespace</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">except</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">CalledProcessError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Error: </span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span>\n        <span class=\"n\">kube_config_path</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n    <span class=\"p\">):</span>  <span class=\"c1\"># check if user passed a user-defined kube_config_path</span>\n        <span class=\"n\">kube_config_dir</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s2\">&quot;~/.kube&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">kube_config_path_rl</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">kube_config_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;config&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span>\n            <span class=\"n\">kube_config_dir</span>\n        <span class=\"p\">):</span>  <span class=\"c1\"># check if ~/.kube directory exists on local machine</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span>\n                    <span class=\"n\">kube_config_dir</span>\n                <span class=\"p\">)</span>  <span class=\"c1\"># create ~/.kube directory if it doesn&#39;t exist</span>\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Created directory: </span><span class=\"si\">{</span><span class=\"n\">kube_config_dir</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">OSError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Error creating directory: </span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">kube_config_path_rl</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;A kubeconfig file already exists in ~/.kube directory. Aborting.&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;cp </span><span class=\"si\">{</span><span class=\"n\">kube_config_path</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">kube_config_path_rl</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>  <span class=\"c1\"># copy user-defined kube_config to ~/.kube/config</span>\n            <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">check</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Copied kubeconfig to: </span><span class=\"si\">{</span><span class=\"n\">kube_config_path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">CalledProcessError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Error copying kubeconfig: </span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>  <span class=\"c1\"># check if user passed a user-defined context</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;kubectl config use-context </span><span class=\"si\">{</span><span class=\"n\">context</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>  <span class=\"c1\"># set user-defined context as current context</span>\n            <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">check</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Kubernetes context has been set to: </span><span class=\"si\">{</span><span class=\"n\">context</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">CalledProcessError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Error setting context: </span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">OnDemandCluster</span><span class=\"p\">(</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"n\">instance_type</span><span class=\"p\">,</span>\n        <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;kubernetes&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">server_connection_type</span><span class=\"o\">=</span><span class=\"n\">server_connection_type</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_connection_defaults</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">c</span>\n\n\n<span class=\"c1\"># OnDemandCluster factory method</span>\n<div class=\"viewcode-block\" id=\"ondemand_cluster\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.ondemand_cluster\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">ondemand_cluster</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">instance_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">num_instances</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">provider</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">autostop_mins</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">use_spot</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">image_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">region</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">memory</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">disk_size</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">open_ports</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">server_port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">server_host</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">server_connection_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">ServerConnectionType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">ssl_keyfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">ssl_certfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">domain</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">den_auth</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">default_env</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"s2\">&quot;Env&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">OnDemandCluster</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Builds an instance of :class:`OnDemandCluster`. Note that image_id, region, memory, disk_size, and open_ports</span>\n<span class=\"sd\">    are all passed through to SkyPilot&#39;s `Resource constructor</span>\n<span class=\"sd\">    &lt;https://skypilot.readthedocs.io/en/latest/reference/api.html#resources&gt;`_.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        name (str): Name for the cluster, to re-use later on.</span>\n<span class=\"sd\">        instance_type (int, optional): Type of cloud instance to use for the cluster. This could</span>\n<span class=\"sd\">            be a Runhouse built-in type, or your choice of instance type.</span>\n<span class=\"sd\">        num_instances (int, optional): Number of instances to use for the cluster.</span>\n<span class=\"sd\">        provider (str, optional): Cloud provider to use for the cluster.</span>\n<span class=\"sd\">        autostop_mins (int, optional): Number of minutes to keep the cluster up after inactivity,</span>\n<span class=\"sd\">            or ``-1`` to keep cluster up indefinitely.</span>\n<span class=\"sd\">        use_spot (bool, optional): Whether or not to use spot instance.</span>\n<span class=\"sd\">        image_id (str, optional): Custom image ID for the cluster.</span>\n<span class=\"sd\">        region (str, optional): The region to use for the cluster.</span>\n<span class=\"sd\">        memory (int or str, optional): Amount of memory to use for the cluster, e.g. &quot;16&quot; or &quot;16+&quot;.</span>\n<span class=\"sd\">        disk_size (int or str, optional): Amount of disk space to use for the cluster, e.g. &quot;100&quot; or &quot;100+&quot;.</span>\n<span class=\"sd\">        open_ports (int or str or List[int], optional): Ports to open in the cluster&#39;s security group. Note</span>\n<span class=\"sd\">            that you are responsible for ensuring that the applications listening on these ports are secure.</span>\n<span class=\"sd\">        server_port (bool, optional): Port to use for the server. If not provided will use 80 for a</span>\n<span class=\"sd\">            ``server_connection_type`` of ``none``, 443 for ``tls`` and ``32300`` for all other SSH connection types.</span>\n<span class=\"sd\">        server_host (bool, optional): Host from which the server listens for traffic (i.e. the --host argument</span>\n<span class=\"sd\">            `runhouse start` run on the cluster). Defaults to &quot;0.0.0.0&quot; unless connecting to the server with an SSH</span>\n<span class=\"sd\">            connection, in which case ``localhost`` is used.</span>\n<span class=\"sd\">        server_connection_type (ServerConnectionType or str, optional): Type of connection to use for the Runhouse</span>\n<span class=\"sd\">            API server. ``ssh`` will use start with server via an SSH tunnel. ``tls`` will start the server</span>\n<span class=\"sd\">            with HTTPS on port 443 using TLS certs without an SSH tunnel. ``none`` will start the server with HTTP</span>\n<span class=\"sd\">            without an SSH tunnel. ``aws_ssm`` will start the server with HTTP using AWS SSM port forwarding.</span>\n<span class=\"sd\">        ssl_keyfile(str, optional): Path to SSL key file to use for launching the API server with HTTPS.</span>\n<span class=\"sd\">        ssl_certfile(str, optional): Path to SSL certificate file to use for launching the API server with HTTPS.</span>\n<span class=\"sd\">        domain(str, optional): Domain name for the cluster. Relevant if enabling HTTPs on the cluster.</span>\n<span class=\"sd\">        den_auth (bool, optional): Whether to use Den authorization on the server. If ``True``, will validate incoming</span>\n<span class=\"sd\">            requests with a Runhouse token provided in the auth headers of the request with the format:</span>\n<span class=\"sd\">            ``{&quot;Authorization&quot;: &quot;Bearer &lt;token&gt;&quot;}``. (Default: ``None``).</span>\n<span class=\"sd\">        default_env (Env or str, optional): Environment that the Runhouse server is started on in the cluster. Used to</span>\n<span class=\"sd\">            specify an isolated environment (e.g. conda env) or any setup and requirements prior to starting the Runhouse</span>\n<span class=\"sd\">            server. (Default: ``None``)</span>\n<span class=\"sd\">        dryrun (bool): Whether to create the Cluster if it doesn&#39;t exist, or load a Cluster object as a dryrun.</span>\n<span class=\"sd\">            (Default: ``False``)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        OnDemandCluster: The resulting cluster.</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; import runhouse as rh</span>\n<span class=\"sd\">        &gt;&gt;&gt; # On-Demand SkyPilot Cluster (OnDemandCluster)</span>\n<span class=\"sd\">        &gt;&gt;&gt; gpu = rh.ondemand_cluster(name=&#39;rh-4-a100s&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  instance_type=&#39;A100:4&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  provider=&#39;gcp&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  autostop_mins=-1,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  use_spot=True,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  image_id=&#39;my_ami_string&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  region=&#39;us-east-1&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                  ).save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # Load cluster from above</span>\n<span class=\"sd\">        &gt;&gt;&gt; reloaded_cluster = rh.ondemand_cluster(name=&quot;rh-4-a100s&quot;)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">RESERVED_SYSTEM_NAMES</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Cluster name </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> is a reserved name. Please use a different name which is not one of &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">RESERVED_SYSTEM_NAMES</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">provider</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;kubernetes&quot;</span><span class=\"p\">:</span>\n        <span class=\"n\">namespace</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;namespace&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"n\">kube_config_path</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;kube_config_path&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;context&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"n\">server_connection_type</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;server_connection_type&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"n\">default_env</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;default_env&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">kubernetes_cluster</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"n\">instance_type</span><span class=\"p\">,</span>\n            <span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"n\">namespace</span><span class=\"p\">,</span>\n            <span class=\"n\">kube_config_path</span><span class=\"o\">=</span><span class=\"n\">kube_config_path</span><span class=\"p\">,</span>\n            <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">,</span>\n            <span class=\"n\">server_connection_type</span><span class=\"o\">=</span><span class=\"n\">server_connection_type</span><span class=\"p\">,</span>\n            <span class=\"n\">default_env</span><span class=\"o\">=</span><span class=\"n\">default_env</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n        <span class=\"n\">alt_options</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n            <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"n\">instance_type</span><span class=\"p\">,</span>\n            <span class=\"n\">num_instances</span><span class=\"o\">=</span><span class=\"n\">num_instances</span><span class=\"p\">,</span>\n            <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"n\">provider</span><span class=\"p\">,</span>\n            <span class=\"n\">region</span><span class=\"o\">=</span><span class=\"n\">region</span><span class=\"p\">,</span>\n            <span class=\"n\">image_id</span><span class=\"o\">=</span><span class=\"n\">image_id</span><span class=\"p\">,</span>\n            <span class=\"n\">memory</span><span class=\"o\">=</span><span class=\"n\">memory</span><span class=\"p\">,</span>\n            <span class=\"n\">disk_size</span><span class=\"o\">=</span><span class=\"n\">disk_size</span><span class=\"p\">,</span>\n            <span class=\"n\">open_ports</span><span class=\"o\">=</span><span class=\"n\">open_ports</span><span class=\"p\">,</span>\n            <span class=\"n\">server_host</span><span class=\"o\">=</span><span class=\"n\">server_host</span><span class=\"p\">,</span>\n            <span class=\"n\">server_port</span><span class=\"o\">=</span><span class=\"n\">server_port</span><span class=\"p\">,</span>\n            <span class=\"n\">server_connection_type</span><span class=\"o\">=</span><span class=\"n\">server_connection_type</span><span class=\"p\">,</span>\n            <span class=\"n\">ssl_keyfile</span><span class=\"o\">=</span><span class=\"n\">ssl_keyfile</span><span class=\"p\">,</span>\n            <span class=\"n\">ssl_certfile</span><span class=\"o\">=</span><span class=\"n\">ssl_certfile</span><span class=\"p\">,</span>\n            <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"n\">domain</span><span class=\"p\">,</span>\n            <span class=\"n\">den_auth</span><span class=\"o\">=</span><span class=\"n\">den_auth</span><span class=\"p\">,</span>\n            <span class=\"n\">default_env</span><span class=\"o\">=</span><span class=\"n\">default_env</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># Filter out None/default values</span>\n        <span class=\"n\">alt_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">alt_options</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">}</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Cluster</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">,</span> <span class=\"n\">alt_options</span><span class=\"o\">=</span><span class=\"n\">alt_options</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">c</span><span class=\"p\">:</span>\n                <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_connection_defaults</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"n\">c</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">alt_options</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"n\">e</span>\n\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">OnDemandCluster</span><span class=\"p\">(</span>\n        <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"n\">instance_type</span><span class=\"p\">,</span>\n        <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"n\">provider</span><span class=\"p\">,</span>\n        <span class=\"n\">num_instances</span><span class=\"o\">=</span><span class=\"n\">num_instances</span><span class=\"p\">,</span>\n        <span class=\"n\">autostop_mins</span><span class=\"o\">=</span><span class=\"n\">autostop_mins</span><span class=\"p\">,</span>\n        <span class=\"n\">use_spot</span><span class=\"o\">=</span><span class=\"n\">use_spot</span><span class=\"p\">,</span>\n        <span class=\"n\">image_id</span><span class=\"o\">=</span><span class=\"n\">image_id</span><span class=\"p\">,</span>\n        <span class=\"n\">region</span><span class=\"o\">=</span><span class=\"n\">region</span><span class=\"p\">,</span>\n        <span class=\"n\">memory</span><span class=\"o\">=</span><span class=\"n\">memory</span><span class=\"p\">,</span>\n        <span class=\"n\">disk_size</span><span class=\"o\">=</span><span class=\"n\">disk_size</span><span class=\"p\">,</span>\n        <span class=\"n\">open_ports</span><span class=\"o\">=</span><span class=\"n\">open_ports</span><span class=\"p\">,</span>\n        <span class=\"n\">server_host</span><span class=\"o\">=</span><span class=\"n\">server_host</span><span class=\"p\">,</span>\n        <span class=\"n\">server_port</span><span class=\"o\">=</span><span class=\"n\">server_port</span><span class=\"p\">,</span>\n        <span class=\"n\">server_connection_type</span><span class=\"o\">=</span><span class=\"n\">server_connection_type</span><span class=\"p\">,</span>\n        <span class=\"n\">ssl_keyfile</span><span class=\"o\">=</span><span class=\"n\">ssl_keyfile</span><span class=\"p\">,</span>\n        <span class=\"n\">ssl_certfile</span><span class=\"o\">=</span><span class=\"n\">ssl_certfile</span><span class=\"p\">,</span>\n        <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"n\">domain</span><span class=\"p\">,</span>\n        <span class=\"n\">den_auth</span><span class=\"o\">=</span><span class=\"n\">den_auth</span><span class=\"p\">,</span>\n        <span class=\"n\">default_env</span><span class=\"o\">=</span><span class=\"n\">default_env</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_connection_defaults</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">den_auth</span><span class=\"p\">:</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">c</span></div>\n\n\n<div class=\"viewcode-block\" id=\"sagemaker_cluster\"><a class=\"viewcode-back\" href=\"../../../../../api/python/cluster/#runhouse.sagemaker_cluster\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">sagemaker_cluster</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"n\">role</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">profile</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">ssh_key_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">instance_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">num_instances</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">image_uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">autostop_mins</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">connection_wait_time</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">estimator</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"s2\">&quot;sagemaker.estimator.EstimatorBase&quot;</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">job_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">server_port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">server_host</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">server_connection_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">ServerConnectionType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">ssl_keyfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">ssl_certfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">domain</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">den_auth</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">default_env</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"s2\">&quot;Env&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">SageMakerCluster</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Builds an instance of :class:`SageMakerCluster`. See SageMaker Hardware Setup section for more specific</span>\n<span class=\"sd\">    instructions and requirements for providing the role and setting up the cluster.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        name (str): Name for the cluster, to re-use later on.</span>\n<span class=\"sd\">        role (str, optional): An AWS IAM role (either name or full ARN).</span>\n<span class=\"sd\">            Can be passed in explicitly as an argument or provided via an estimator. If not specified will try</span>\n<span class=\"sd\">            using the ``profile`` attribute or environment variable ``AWS_PROFILE`` to extract the relevant role ARN.</span>\n<span class=\"sd\">            More info on configuring an IAM role for SageMaker</span>\n<span class=\"sd\">            `here &lt;https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html&gt;`_.</span>\n<span class=\"sd\">        profile (str, optional): AWS profile to use for the cluster. If provided instead of a ``role``, will lookup</span>\n<span class=\"sd\">            the role ARN associated with the profile in the local AWS credentials.</span>\n<span class=\"sd\">            If not provided, will use the ``default`` profile.</span>\n<span class=\"sd\">        ssh_key_path (str, optional): Path (relative or absolute) to private SSH key to use for connecting to</span>\n<span class=\"sd\">            the cluster. If not provided, will look for the key in path ``~/.ssh/sagemaker-ssh-gw``.</span>\n<span class=\"sd\">            If not found will generate new keys and upload the public key to the default s3 bucket for the Role ARN.</span>\n<span class=\"sd\">        instance_id (str, optional): ID of the AWS instance to use for the cluster. SageMaker does not expose</span>\n<span class=\"sd\">            IP addresses of its instance, so we use an instance ID as a unique identifier for the cluster.</span>\n<span class=\"sd\">        instance_type (str, optional): Type of AWS instance to use for the cluster. More info on supported</span>\n<span class=\"sd\">            instance options `here &lt;https://aws.amazon.com/sagemaker/pricing/instance-types&gt;`_.</span>\n<span class=\"sd\">            (Default: ``ml.m5.large``.)</span>\n<span class=\"sd\">        num_instances (int, optional): Number of instances to use for the cluster.</span>\n<span class=\"sd\">            (Default: ``1``.)</span>\n<span class=\"sd\">        image_uri (str, optional): Image to use for the cluster instead of using the default SageMaker image which</span>\n<span class=\"sd\">            will be based on the framework_version and py_version. Can be an ECR url or dockerhub image and tag.</span>\n<span class=\"sd\">        estimator (Union[str, sagemaker.estimator.EstimatorBase], optional): Estimator to use for a dedicated</span>\n<span class=\"sd\">            training job. Leave as ``None`` if launching the compute without running a dedicated job.</span>\n<span class=\"sd\">            More info on creating an estimator `here</span>\n<span class=\"sd\">            &lt;https://sagemaker.readthedocs.io/en/stable/frameworks/pytorch/using_pytorch.html#create-an-estimator&gt;`_.</span>\n<span class=\"sd\">        autostop_mins (int, optional): Number of minutes to keep the cluster up after inactivity,</span>\n<span class=\"sd\">            or ``-1`` to keep cluster up indefinitely. *Note: this will keep the cluster up even if a dedicated</span>\n<span class=\"sd\">            training job has finished running or failed*.</span>\n<span class=\"sd\">        connection_wait_time (int, optional): Amount of time to wait inside the SageMaker cluster before</span>\n<span class=\"sd\">            continuing with normal execution. Useful if you want to connect before a dedicated job starts</span>\n<span class=\"sd\">            (e.g. training). If you don&#39;t want to wait, set it to ``0``.</span>\n<span class=\"sd\">            If no estimator is provided, will default to ``0``.</span>\n<span class=\"sd\">        job_name (str, optional): Name to provide for a training job. If not provided will generate a default name</span>\n<span class=\"sd\">            based on the image name and current timestamp (e.g. ``pytorch-training-2023-08-28-20-57-55-113``).</span>\n<span class=\"sd\">        server_port (bool, optional): Port to use for the server (Default: ``32300``).</span>\n<span class=\"sd\">        server_host (bool, optional): Host from which the server listens for traffic (i.e. the --host argument</span>\n<span class=\"sd\">            `runhouse start` run on the cluster).</span>\n<span class=\"sd\">            *Note: For SageMaker, since we connect to the Runhouse API server via an SSH tunnel, the only valid</span>\n<span class=\"sd\">            host is localhost.*</span>\n<span class=\"sd\">        server_connection_type (ServerConnectionType or str, optional): Type of connection to use for the Runhouse</span>\n<span class=\"sd\">            API server. *Note: For SageMaker, only ``aws_ssm`` is currently valid as the server connection type.*</span>\n<span class=\"sd\">        ssl_keyfile(str, optional): Path to SSL key file to use for launching the API server with HTTPS.</span>\n<span class=\"sd\">        ssl_certfile(str, optional): Path to SSL certificate file to use for launching the API server with HTTPS.</span>\n<span class=\"sd\">        domain(str, optional): Domain name for the cluster. Relevant if enabling HTTPs on the cluster.</span>\n<span class=\"sd\">        den_auth (bool, optional): Whether to use Den authorization on the server. If ``True``, will validate incoming</span>\n<span class=\"sd\">            requests with a Runhouse token provided in the auth headers of the request with the format:</span>\n<span class=\"sd\">            ``{&quot;Authorization&quot;: &quot;Bearer &lt;token&gt;&quot;}``. (Default: ``None``).</span>\n<span class=\"sd\">        default_env (Env or str, optional): Environment that the Runhouse server is started on in the cluster. Used to</span>\n<span class=\"sd\">            specify an isolated environment (e.g. conda env) or any setup and requirements prior to starting the Runhouse</span>\n<span class=\"sd\">            server. (Default: ``None``)</span>\n<span class=\"sd\">        dryrun (bool): Whether to create the SageMakerCluster if it doesn&#39;t exist, or load a SageMakerCluster object</span>\n<span class=\"sd\">            as a dryrun.</span>\n<span class=\"sd\">            (Default: ``False``)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        SageMakerCluster: The resulting cluster.</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; import runhouse as rh</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Launch a new SageMaker instance and keep it up indefinitely.</span>\n<span class=\"sd\">        &gt;&gt;&gt; # Note: This will use Role ARN associated with the &quot;sagemaker&quot; profile defined in the local aws credentials</span>\n<span class=\"sd\">        &gt;&gt;&gt; c = rh.sagemaker_cluster(name=&#39;sm-cluster&#39;, profile=&quot;sagemaker&quot;).save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # Running a training job with a provided Estimator</span>\n<span class=\"sd\">        &gt;&gt;&gt; c = rh.sagemaker_cluster(name=&#39;sagemaker-cluster&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                          estimator=PyTorch(entry_point=&#39;train.py&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                            role=&#39;arn:aws:iam::123456789012:role/MySageMakerRole&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                            source_dir=&#39;/Users/myuser/dev/sagemaker&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                            framework_version=&#39;1.8.1&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                            py_version=&#39;py36&#39;,</span>\n<span class=\"sd\">        &gt;&gt;&gt;                                            instance_type=&#39;ml.p3.2xlarge&#39;),</span>\n<span class=\"sd\">        &gt;&gt;&gt;                          ).save()</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; # Load cluster from above</span>\n<span class=\"sd\">        &gt;&gt;&gt; reloaded_cluster = rh.sagemaker_cluster(name=&quot;sagemaker-cluster&quot;)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span>\n        <span class=\"s2\">&quot;aws-cli/2.&quot;</span>\n        <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;aws&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;--version&quot;</span><span class=\"p\">],</span> <span class=\"n\">capture_output</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">stdout</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;SageMaker SDK requires AWS CLI v2. You may also need to run `pip uninstall awscli` to ensure the right &quot;</span>\n            <span class=\"s2\">&quot;version is being used. For more info: https://www.run.house/docs/api/python/cluster#id9&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"n\">ssh_key_path</span> <span class=\"o\">=</span> <span class=\"n\">relative_ssh_path</span><span class=\"p\">(</span><span class=\"n\">ssh_key_path</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">ssh_key_path</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span>\n        <span class=\"n\">server_connection_type</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n        <span class=\"ow\">and</span> <span class=\"n\">server_connection_type</span> <span class=\"o\">!=</span> <span class=\"n\">ServerConnectionType</span><span class=\"o\">.</span><span class=\"n\">AWS_SSM</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;SageMaker Cluster currently requires a server connection type of `aws_ssm`.&quot;</span>\n        <span class=\"p\">)</span>\n    <span class=\"n\">server_connection_type</span> <span class=\"o\">=</span> <span class=\"n\">ServerConnectionType</span><span class=\"o\">.</span><span class=\"n\">AWS_SSM</span><span class=\"o\">.</span><span class=\"n\">value</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">server_host</span> <span class=\"ow\">and</span> <span class=\"n\">server_host</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">LOCAL_HOSTS</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;SageMaker Cluster currently requires a server host of `localhost` or `127.0.0.1`&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"n\">server_port</span> <span class=\"o\">=</span> <span class=\"n\">server_port</span> <span class=\"ow\">or</span> <span class=\"n\">DEFAULT_SERVER_PORT</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n        <span class=\"n\">alt_options</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n            <span class=\"n\">role</span><span class=\"o\">=</span><span class=\"n\">role</span><span class=\"p\">,</span>\n            <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"n\">profile</span><span class=\"p\">,</span>\n            <span class=\"n\">ssh_key_path</span><span class=\"o\">=</span><span class=\"n\">ssh_key_path</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_id</span><span class=\"o\">=</span><span class=\"n\">instance_id</span><span class=\"p\">,</span>\n            <span class=\"n\">image_uri</span><span class=\"o\">=</span><span class=\"n\">image_uri</span><span class=\"p\">,</span>\n            <span class=\"n\">estimator</span><span class=\"o\">=</span><span class=\"n\">estimator</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"n\">instance_type</span><span class=\"p\">,</span>\n            <span class=\"n\">job_name</span><span class=\"o\">=</span><span class=\"n\">job_name</span><span class=\"p\">,</span>\n            <span class=\"n\">num_instances</span><span class=\"o\">=</span><span class=\"n\">num_instances</span><span class=\"p\">,</span>\n            <span class=\"n\">server_host</span><span class=\"o\">=</span><span class=\"n\">server_host</span><span class=\"p\">,</span>\n            <span class=\"n\">server_port</span><span class=\"o\">=</span><span class=\"n\">server_port</span><span class=\"p\">,</span>\n            <span class=\"n\">server_connection_type</span><span class=\"o\">=</span><span class=\"n\">server_connection_type</span><span class=\"p\">,</span>\n            <span class=\"n\">ssl_keyfile</span><span class=\"o\">=</span><span class=\"n\">ssl_keyfile</span><span class=\"p\">,</span>\n            <span class=\"n\">ssl_certfile</span><span class=\"o\">=</span><span class=\"n\">ssl_certfile</span><span class=\"p\">,</span>\n            <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"n\">domain</span><span class=\"p\">,</span>\n            <span class=\"n\">den_auth</span><span class=\"o\">=</span><span class=\"n\">den_auth</span><span class=\"p\">,</span>\n            <span class=\"n\">default_env</span><span class=\"o\">=</span><span class=\"n\">default_env</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># Filter out None/default values</span>\n        <span class=\"n\">alt_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">alt_options</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">}</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">SageMakerCluster</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">,</span> <span class=\"n\">alt_options</span><span class=\"o\">=</span><span class=\"n\">alt_options</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">c</span><span class=\"p\">:</span>\n                <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_connection_defaults</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"n\">c</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">alt_options</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"n\">e</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">RESERVED_SYSTEM_NAMES</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Cluster name </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> is a reserved name. Please use a different name which is not one of &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">RESERVED_SYSTEM_NAMES</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"n\">sm</span> <span class=\"o\">=</span> <span class=\"n\">SageMakerCluster</span><span class=\"p\">(</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">role</span><span class=\"o\">=</span><span class=\"n\">role</span><span class=\"p\">,</span>\n        <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"n\">profile</span><span class=\"p\">,</span>\n        <span class=\"n\">ssh_key_path</span><span class=\"o\">=</span><span class=\"n\">ssh_key_path</span><span class=\"p\">,</span>\n        <span class=\"n\">estimator</span><span class=\"o\">=</span><span class=\"n\">estimator</span><span class=\"p\">,</span>\n        <span class=\"n\">job_name</span><span class=\"o\">=</span><span class=\"n\">job_name</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_id</span><span class=\"o\">=</span><span class=\"n\">instance_id</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"n\">instance_type</span><span class=\"p\">,</span>\n        <span class=\"n\">num_instances</span><span class=\"o\">=</span><span class=\"n\">num_instances</span><span class=\"p\">,</span>\n        <span class=\"n\">image_uri</span><span class=\"o\">=</span><span class=\"n\">image_uri</span><span class=\"p\">,</span>\n        <span class=\"n\">autostop_mins</span><span class=\"o\">=</span><span class=\"n\">autostop_mins</span><span class=\"p\">,</span>\n        <span class=\"n\">connection_wait_time</span><span class=\"o\">=</span><span class=\"n\">connection_wait_time</span><span class=\"p\">,</span>\n        <span class=\"n\">server_host</span><span class=\"o\">=</span><span class=\"n\">server_host</span><span class=\"p\">,</span>\n        <span class=\"n\">server_port</span><span class=\"o\">=</span><span class=\"n\">server_port</span><span class=\"p\">,</span>\n        <span class=\"n\">server_connection_type</span><span class=\"o\">=</span><span class=\"n\">server_connection_type</span><span class=\"p\">,</span>\n        <span class=\"n\">den_auth</span><span class=\"o\">=</span><span class=\"n\">den_auth</span><span class=\"p\">,</span>\n        <span class=\"n\">ssl_keyfile</span><span class=\"o\">=</span><span class=\"n\">ssl_keyfile</span><span class=\"p\">,</span>\n        <span class=\"n\">ssl_certfile</span><span class=\"o\">=</span><span class=\"n\">ssl_certfile</span><span class=\"p\">,</span>\n        <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"n\">domain</span><span class=\"p\">,</span>\n        <span class=\"n\">default_env</span><span class=\"o\">=</span><span class=\"n\">default_env</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">set_connection_defaults</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">den_auth</span><span class=\"p\">:</span>\n        <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">sm</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/resources/hardware/cluster_factory", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12"}