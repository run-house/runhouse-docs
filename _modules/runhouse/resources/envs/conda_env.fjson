{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "runhouse.resources.envs.conda_env", "body": "<h1>Source code for runhouse.resources.envs.conda_env</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shlex</span>\n<span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.globals</span> <span class=\"kn\">import</span> <span class=\"n\">obj_store</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.packages</span> <span class=\"kn\">import</span> <span class=\"n\">Package</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.utils</span> <span class=\"kn\">import</span> <span class=\"n\">install_conda</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.env</span> <span class=\"kn\">import</span> <span class=\"n\">Env</span>\n\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"CondaEnv\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.CondaEnv\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CondaEnv</span><span class=\"p\">(</span><span class=\"n\">Env</span><span class=\"p\">):</span>\n    <span class=\"n\">RESOURCE_TYPE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;env&quot;</span>\n\n<div class=\"viewcode-block\" id=\"CondaEnv.__init__\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.CondaEnv.__init__\">[docs]</a>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">conda_yaml</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">],</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">reqs</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Package</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[],</span>\n        <span class=\"n\">setup_cmds</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">env_vars</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{},</span>\n        <span class=\"n\">working_dir</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Path</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;./&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">secrets</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Secret&quot;</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[],</span>\n        <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>  <span class=\"c1\"># We have this here to ignore extra arguments when calling from_config</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Runhouse CondaEnv object.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">            To create a CondaEnv, please use the factory methods :func:`env` or :func:`conda_env`.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reqs</span> <span class=\"o\">=</span> <span class=\"n\">reqs</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">conda_yaml</span> <span class=\"o\">=</span> <span class=\"n\">conda_yaml</span>  <span class=\"c1\"># dict representing conda env</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">reqs</span><span class=\"o\">=</span><span class=\"n\">reqs</span><span class=\"p\">,</span>\n            <span class=\"n\">setup_cmds</span><span class=\"o\">=</span><span class=\"n\">setup_cmds</span><span class=\"p\">,</span>\n            <span class=\"n\">env_vars</span><span class=\"o\">=</span><span class=\"n\">env_vars</span><span class=\"p\">,</span>\n            <span class=\"n\">working_dir</span><span class=\"o\">=</span><span class=\"n\">working_dir</span><span class=\"p\">,</span>\n            <span class=\"n\">secrets</span><span class=\"o\">=</span><span class=\"n\">secrets</span><span class=\"p\">,</span>\n            <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"CondaEnv.from_config\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.CondaEnv.from_config\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">CondaEnv</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">condensed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">condensed</span><span class=\"p\">)</span>\n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s2\">&quot;conda_yaml&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">conda_yaml</span><span class=\"p\">})</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">env_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">conda_yaml</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_create_conda_env</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;~/.rh/envs&quot;</span>\n        <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;mkdir -p </span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"n\">local_env_exists</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_name</span><span class=\"si\">}</span><span class=\"s2\"> &quot;</span> <span class=\"ow\">in</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_output</span><span class=\"p\">(</span>\n            <span class=\"n\">shlex</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;conda info --envs&quot;</span><span class=\"p\">),</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">yaml_exists</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()</span> <span class=\"o\">/</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_name</span><span class=\"si\">}</span><span class=\"s2\">.yml&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">force</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"n\">yaml_exists</span> <span class=\"ow\">and</span> <span class=\"n\">local_env_exists</span><span class=\"p\">):</span>\n            <span class=\"n\">python_commands</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;; &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;import yaml&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;from pathlib import Path&quot;</span><span class=\"p\">,</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;path = Path(&#39;</span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">&#39;).expanduser()&quot;</span><span class=\"p\">,</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;yaml.dump(</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">conda_yaml</span><span class=\"si\">}</span><span class=\"s2\">, open(path / &#39;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_name</span><span class=\"si\">}</span><span class=\"s2\">.yml&#39;, &#39;w&#39;))&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;python -c &quot;</span><span class=\"si\">{</span><span class=\"n\">python_commands</span><span class=\"si\">}</span><span class=\"s1\">&quot;&#39;</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">local_env_exists</span><span class=\"p\">:</span>\n                <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;conda env create -f </span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_name</span><span class=\"si\">}</span><span class=\"s2\">.yml&quot;</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n                <span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_name</span><span class=\"si\">}</span><span class=\"s2\"> &quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_output</span><span class=\"p\">(</span>\n                    <span class=\"n\">shlex</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;conda info --envs&quot;</span><span class=\"p\">),</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n                <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">):</span>\n                    <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span>\n                        <span class=\"sa\">f</span><span class=\"s2\">&quot;conda env </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_name</span><span class=\"si\">}</span><span class=\"s2\"> not created properly.&quot;</span>\n                    <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"CondaEnv.install\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.CondaEnv.install\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">install</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Locally install packages and run setup commands.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">[</span><span class=\"s2\">&quot;python&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">dep</span> <span class=\"k\">for</span> <span class=\"n\">dep</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">conda_yaml</span><span class=\"p\">[</span><span class=\"s2\">&quot;dependencies&quot;</span><span class=\"p\">]]:</span>\n            <span class=\"n\">base_python_version</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_output</span><span class=\"p\">(</span><span class=\"n\">shlex</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;python --version&quot;</span><span class=\"p\">),</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n                <span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">conda_yaml</span><span class=\"p\">[</span><span class=\"s2\">&quot;dependencies&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;python==</span><span class=\"si\">{</span><span class=\"n\">base_python_version</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">install_conda</span><span class=\"p\">()</span>\n        <span class=\"n\">local_env_exists</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_name</span><span class=\"si\">}</span><span class=\"s2\"> &quot;</span> <span class=\"ow\">in</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_output</span><span class=\"p\">(</span>\n            <span class=\"n\">shlex</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;conda info --envs&quot;</span><span class=\"p\">),</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Hash the config_for_rns to check if we need to create/install the conda env</span>\n        <span class=\"n\">env_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">()</span>\n        <span class=\"c1\"># Remove the name because auto-generated names will be different, but the installed components are the same</span>\n        <span class=\"n\">env_config</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">install_hash</span> <span class=\"o\">=</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">env_config</span><span class=\"p\">))</span>\n        <span class=\"c1\"># Check the existing hash</span>\n        <span class=\"k\">if</span> <span class=\"n\">local_env_exists</span> <span class=\"ow\">and</span> <span class=\"n\">install_hash</span> <span class=\"ow\">in</span> <span class=\"n\">obj_store</span><span class=\"o\">.</span><span class=\"n\">installed_envs</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">force</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">&quot;Env already installed, skipping&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n        <span class=\"n\">obj_store</span><span class=\"o\">.</span><span class=\"n\">installed_envs</span><span class=\"p\">[</span><span class=\"n\">install_hash</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_conda_env</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reqs</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">package</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reqs</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">package</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                    <span class=\"n\">pkg</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"n\">package</span><span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">package</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_install&quot;</span><span class=\"p\">):</span>\n                    <span class=\"n\">pkg</span> <span class=\"o\">=</span> <span class=\"n\">package</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;package </span><span class=\"si\">{</span><span class=\"n\">package</span><span class=\"si\">}</span><span class=\"s2\"> not recognized&quot;</span><span class=\"p\">)</span>\n\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Installing package: </span><span class=\"si\">{</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">pkg</span><span class=\"o\">.</span><span class=\"n\">_install</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_run_command</span><span class=\"p\">([</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup_cmds</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">&#39; &amp;&amp; &#39;</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">])</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup_cmds</span>\n            <span class=\"k\">else</span> <span class=\"kc\">None</span>\n        <span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_run_cmd</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Command prefix to run on Conda Env.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;conda run -n </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_activate_cmd</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Command to activate Conda Env.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;conda activate </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/resources/envs/conda_env", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}