{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "runhouse.resources.envs.env", "body": "<h1>Source code for runhouse.resources.envs.env</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shlex</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.globals</span> <span class=\"kn\">import</span> <span class=\"n\">obj_store</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.logger</span> <span class=\"kn\">import</span> <span class=\"n\">get_logger</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.envs.utils</span> <span class=\"kn\">import</span> <span class=\"n\">_process_env_vars</span><span class=\"p\">,</span> <span class=\"n\">run_setup_command</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.hardware</span> <span class=\"kn\">import</span> <span class=\"n\">_get_cluster_from</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.packages</span> <span class=\"kn\">import</span> <span class=\"n\">InstallTarget</span><span class=\"p\">,</span> <span class=\"n\">Package</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.resource</span> <span class=\"kn\">import</span> <span class=\"n\">Resource</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.utils</span> <span class=\"kn\">import</span> <span class=\"n\">run_with_logs</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"Env\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.Env\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Env</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"n\">RESOURCE_TYPE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;env&quot;</span>\n\n<div class=\"viewcode-block\" id=\"Env.__init__\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.Env.__init__\">[docs]</a>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">reqs</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Package</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[],</span>\n        <span class=\"n\">setup_cmds</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">env_vars</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{},</span>\n        <span class=\"n\">working_dir</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Path</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">secrets</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Secret&quot;</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[],</span>\n        <span class=\"n\">compute</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{},</span>\n        <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>  <span class=\"c1\"># We have this here to ignore extra arguments when calling from_config</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Runhouse Env object.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">            To create an Env, please use the factory method :func:`env`.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reqs</span> <span class=\"o\">=</span> <span class=\"n\">reqs</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup_cmds</span> <span class=\"o\">=</span> <span class=\"n\">setup_cmds</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span> <span class=\"o\">=</span> <span class=\"n\">env_vars</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_dir</span> <span class=\"o\">=</span> <span class=\"n\">working_dir</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secrets</span> <span class=\"o\">=</span> <span class=\"n\">secrets</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute</span> <span class=\"o\">=</span> <span class=\"n\">compute</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">env_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;base&quot;</span>\n\n<div class=\"viewcode-block\" id=\"Env.from_config\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.Env.from_config\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">_resolve_children</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">_resolve_children</span><span class=\"o\">=</span><span class=\"n\">_resolve_children</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span> <span class=\"n\">req</span>\n            <span class=\"k\">for</span> <span class=\"n\">req</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;working_dir&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span>\n                <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;working_dir&quot;</span><span class=\"p\">],</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">_resolve_children</span><span class=\"o\">=</span><span class=\"n\">_resolve_children</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;working_dir&quot;</span><span class=\"p\">),</span> <span class=\"nb\">dict</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;working_dir&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">resource_subtype</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;resource_subtype&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">resource_subtype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;CondaEnv&quot;</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">runhouse</span> <span class=\"kn\">import</span> <span class=\"n\">CondaEnv</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">CondaEnv</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">Env</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_set_env_vars</span><span class=\"p\">(</span><span class=\"n\">env_vars</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">env_vars</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n\n<div class=\"viewcode-block\" id=\"Env.add_env_var\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.Env.add_env_var\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">add_env_var</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add an env var to the environment. Environment must be re-installed to propagate new</span>\n<span class=\"sd\">        environment variables if it already lives on a cluster.&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">})</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">condensed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">condensed</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">save_attrs_to_config</span><span class=\"p\">(</span>\n            <span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;setup_cmds&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;env_vars&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;env_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;compute&quot;</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_resource_string_for_subconfig</span><span class=\"p\">(</span><span class=\"n\">package</span><span class=\"p\">,</span> <span class=\"n\">condensed</span><span class=\"p\">)</span>\n                    <span class=\"k\">for</span> <span class=\"n\">package</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reqs</span>\n                <span class=\"p\">],</span>\n                <span class=\"s2\">&quot;working_dir&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_resource_string_for_subconfig</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_dir</span><span class=\"p\">,</span> <span class=\"n\">condensed</span>\n                <span class=\"p\">),</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">reqs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reqs</span> <span class=\"ow\">or</span> <span class=\"p\">[])</span> <span class=\"o\">+</span> <span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_dir</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_dir</span> <span class=\"k\">else</span> <span class=\"p\">[])</span>\n\n    <span class=\"nd\">@reqs</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">reqs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">reqs</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reqs</span> <span class=\"o\">=</span> <span class=\"n\">reqs</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_reqs_to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">],</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Send self.reqs to the system (cluster or file system)&quot;&quot;&quot;</span>\n        <span class=\"n\">new_reqs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">req</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reqs</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                <span class=\"n\">new_req</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n                <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">new_req</span>\n\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">Package</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span>\n                <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">install_target</span><span class=\"p\">,</span> <span class=\"n\">InstallTarget</span>\n            <span class=\"p\">):</span>\n                <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                    <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n            <span class=\"n\">new_reqs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_dir</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">new_reqs</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">new_reqs</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_reqs</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_secrets_to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">]):</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets</span> <span class=\"kn\">import</span> <span class=\"n\">Secret</span>\n\n        <span class=\"n\">new_secrets</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">secret</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secrets</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                <span class=\"n\">secret</span> <span class=\"o\">=</span> <span class=\"n\">Secret</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"p\">)</span>\n            <span class=\"n\">new_secrets</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_secrets</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_install_reqs</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"p\">:</span> <span class=\"n\">Cluster</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">reqs</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;all&quot;</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">reqs</span> <span class=\"o\">=</span> <span class=\"n\">reqs</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reqs</span>\n        <span class=\"k\">if</span> <span class=\"n\">reqs</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">package</span> <span class=\"ow\">in</span> <span class=\"n\">reqs</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">package</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                    <span class=\"n\">pkg</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"n\">package</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">pkg</span><span class=\"o\">.</span><span class=\"n\">install_method</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;reqs&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;local&quot;</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"n\">cluster</span><span class=\"p\">:</span>\n                        <span class=\"n\">pkg</span> <span class=\"o\">=</span> <span class=\"n\">pkg</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">package</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_install&quot;</span><span class=\"p\">):</span>\n                    <span class=\"n\">pkg</span> <span class=\"o\">=</span> <span class=\"n\">package</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;package </span><span class=\"si\">{</span><span class=\"n\">package</span><span class=\"si\">}</span><span class=\"s2\"> not recognized&quot;</span><span class=\"p\">)</span>\n\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Installing package: </span><span class=\"si\">{</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">pkg</span><span class=\"o\">.</span><span class=\"n\">_install</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">=</span><span class=\"n\">node</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_run_setup_cmds</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"p\">:</span> <span class=\"n\">Cluster</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">setup_cmds</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;all&quot;</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">setup_cmds</span> <span class=\"o\">=</span> <span class=\"n\">setup_cmds</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup_cmds</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">setup_cmds</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">cmd</span> <span class=\"ow\">in</span> <span class=\"n\">setup_cmds</span><span class=\"p\">:</span>\n            <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_full_command</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n            <span class=\"n\">run_setup_command</span><span class=\"p\">(</span>\n                <span class=\"n\">cmd</span><span class=\"p\">,</span>\n                <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">,</span>\n                <span class=\"n\">env_vars</span><span class=\"o\">=</span><span class=\"n\">_process_env_vars</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span><span class=\"p\">),</span>\n                <span class=\"n\">node</span><span class=\"o\">=</span><span class=\"n\">node</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Env.install\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.Env.install\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">install</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">cluster</span><span class=\"p\">:</span> <span class=\"n\">Cluster</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;all&quot;</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Locally install packages and run setup commands.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            force (bool, optional): Whether to setup the installation again if the env already exists</span>\n<span class=\"sd\">                on the cluster. (Default: ``False``)</span>\n<span class=\"sd\">            cluster (Clsuter, optional): Cluster to install the env on. If not provided, env is installed</span>\n<span class=\"sd\">                on the current cluster. (Default: ``None``)</span>\n<span class=\"sd\">            node (str, optional): Node to install the env on. (Default: ``&quot;all&quot;``)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"c1\"># If we&#39;re doing the install remotely via SSH (e.g. for default_env), there is no cache</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">cluster</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Hash the config_for_rns to check if we need to install</span>\n            <span class=\"n\">env_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">()</span>\n            <span class=\"c1\"># Remove the name because auto-generated names will be different, but the installed components are the same</span>\n            <span class=\"n\">env_config</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">install_hash</span> <span class=\"o\">=</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">env_config</span><span class=\"p\">))</span>\n            <span class=\"c1\"># Check the existing hash</span>\n            <span class=\"k\">if</span> <span class=\"n\">install_hash</span> <span class=\"ow\">in</span> <span class=\"n\">obj_store</span><span class=\"o\">.</span><span class=\"n\">installed_envs</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">force</span><span class=\"p\">:</span>\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">&quot;Env already installed, skipping&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span>\n            <span class=\"n\">obj_store</span><span class=\"o\">.</span><span class=\"n\">installed_envs</span><span class=\"p\">[</span><span class=\"n\">install_hash</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_install_reqs</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">=</span><span class=\"n\">node</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_run_setup_cmds</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">=</span><span class=\"n\">node</span><span class=\"p\">)</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_full_command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_run_cmd</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_run_cmd</span><span class=\"si\">}</span><span class=\"s2\"> $</span><span class=\"se\">{{</span><span class=\"s2\">SHELL:-/bin/bash</span><span class=\"se\">}}</span><span class=\"s2\"> -c </span><span class=\"si\">{</span><span class=\"n\">shlex</span><span class=\"o\">.</span><span class=\"n\">quote</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">command</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_run_command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Run command locally inside the environment&quot;&quot;&quot;</span>\n        <span class=\"n\">command</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_full_command</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">)</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Running command in </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">: </span><span class=\"si\">{</span><span class=\"n\">command</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">run_with_logs</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Env.to\"><a class=\"viewcode-back\" href=\"../../../../../api/python/env/#runhouse.Env.to\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">to</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">],</span>\n        <span class=\"n\">node_idx</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">force_install</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Send environment to the system, and set it up if on a cluster.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            system (str or Cluster): Cluster or file system to send the env to.</span>\n<span class=\"sd\">            node_idx (int, optional): Node index of the cluster to send the env to. If not specified,</span>\n<span class=\"sd\">                uses the head node. (Default: ``None``)</span>\n<span class=\"sd\">            path (str, optional): Path on the cluster to sync the env&#39;s working dir to. Uses a default</span>\n<span class=\"sd\">                path if not specified. (Default: ``None``)</span>\n<span class=\"sd\">            force_install (bool, optional): Whether to setup the installation again if the env already</span>\n<span class=\"sd\">                exists on the cluster. (Default: ``False``)</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; env = rh.env(reqs=[&quot;numpy&quot;, &quot;pip&quot;])</span>\n<span class=\"sd\">            &gt;&gt;&gt; cluster_env = env.to(my_cluster)</span>\n<span class=\"sd\">            &gt;&gt;&gt; s3_env = env.to(&quot;s3&quot;, path=&quot;s3_bucket/my_env&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">_get_cluster_from</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">)</span>\n            <span class=\"ow\">and</span> <span class=\"n\">node_idx</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n            <span class=\"ow\">and</span> <span class=\"n\">node_idx</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">ips</span><span class=\"p\">)</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Cluster </span><span class=\"si\">{</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> has only </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">ips</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\"> nodes. Requested node index </span><span class=\"si\">{</span><span class=\"n\">node_idx</span><span class=\"si\">}</span><span class=\"s2\"> is out of bounds.&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">new_env</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">reqs</span><span class=\"p\">,</span> <span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">working_dir</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reqs_to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">node_idx</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">compute</span> <span class=\"o\">=</span> <span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">compute</span> <span class=\"ow\">or</span> <span class=\"p\">{}</span>\n                <span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">compute</span><span class=\"p\">[</span><span class=\"s2\">&quot;node_idx&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">node_idx</span>\n                <span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">ips</span><span class=\"p\">[</span><span class=\"n\">node_idx</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;all&quot;</span>\n\n            <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">put_resource</span><span class=\"p\">(</span><span class=\"n\">new_env</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">name</span>\n                <span class=\"k\">else</span> <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">default_env</span><span class=\"o\">.</span><span class=\"n\">name</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">env_vars</span> <span class=\"o\">=</span> <span class=\"n\">_process_env_vars</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">env_vars</span><span class=\"p\">:</span>\n                <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_set_env_vars&quot;</span><span class=\"p\">,</span> <span class=\"n\">env_vars</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"s2\">&quot;install&quot;</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"n\">force_install</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">=</span><span class=\"n\">node</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_install_reqs&quot;</span><span class=\"p\">,</span> <span class=\"n\">reqs</span><span class=\"o\">=</span><span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">reqs</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">=</span><span class=\"n\">node</span><span class=\"p\">)</span>\n                <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span>\n                    <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_run_setup_cmds&quot;</span><span class=\"p\">,</span> <span class=\"n\">setup_cmds</span><span class=\"o\">=</span><span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">setup_cmds</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">=</span><span class=\"n\">node</span>\n                <span class=\"p\">)</span>\n\n            <span class=\"c1\"># Secrets are resources that go in the env, so put them in after the env is created</span>\n            <span class=\"n\">new_env</span><span class=\"o\">.</span><span class=\"n\">secrets</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_secrets_to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">new_env</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_activate_cmd</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_run_cmd</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/resources/envs/env", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}