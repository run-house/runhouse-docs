{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "runhouse.resources.secrets.secret_factory", "body": "<h1>Source code for runhouse.resources.secrets.secret_factory</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.blobs.file</span> <span class=\"kn\">import</span> <span class=\"n\">File</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets.provider_secrets.provider_secret</span> <span class=\"kn\">import</span> <span class=\"n\">ProviderSecret</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets.secret</span> <span class=\"kn\">import</span> <span class=\"n\">Secret</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.provider_secrets.providers</span> <span class=\"kn\">import</span> <span class=\"n\">_get_provider_class</span>\n\n\n<div class=\"viewcode-block\" id=\"secret\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.secret\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">secret</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">provider</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Secret</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Builds an instance of :class:`Secret`.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        name (str, optional): Name to assign the secret resource.</span>\n<span class=\"sd\">        values (Dict, optional): Dictionary of secret key-value pairs.</span>\n<span class=\"sd\">        dryrun (bool, optional): Whether to create in dryrun mode. (Default: False)</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        Secret: The resulting Secret object.</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; rh.secret(&quot;in_memory_secret&quot;, values={&quot;secret_key&quot;: &quot;secret_val&quot;})</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">provider</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">provider_secret</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"n\">provider</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">values</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">Secret</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">values</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;values must be provided for an in-memory secret.&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">Secret</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"provider_secret\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.provider_secret\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">provider_secret</span><span class=\"p\">(</span>\n    <span class=\"n\">provider</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">File</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">env_vars</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ProviderSecret</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Builds an instance of :class:`ProviderSecret`. At most one of values, path, and env_vars</span>\n<span class=\"sd\">    can be provided, to maintain one source of truth. If None are provided, will infer the values</span>\n<span class=\"sd\">    from the default path or env vars for the given provider.</span>\n\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        provider (str): Provider corresponding to the secret. Currently supported options are:</span>\n<span class=\"sd\">            [&quot;aws&quot;, &quot;azure&quot;, &quot;huggingface&quot;, &quot;lambda&quot;, &quot;github&quot;, &quot;gcp&quot;, &quot;ssh&quot;]</span>\n<span class=\"sd\">        name (str, optional): Name to assign the resource. If none is provided, resource name defaults to the</span>\n<span class=\"sd\">            provider name.</span>\n<span class=\"sd\">        values (Dict, optional): Dictionary mapping of secret keys and values.</span>\n<span class=\"sd\">        path (str or Path, optional): Path where the secret values are held.</span>\n<span class=\"sd\">        env_vars (Dict, optional): Dictionary mapping secret keys to the corresponding</span>\n<span class=\"sd\">            environment variable key.</span>\n<span class=\"sd\">        dryrun (bool): Whether to creat in dryrun mode. (Default: False)</span>\n\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        ProviderSecret: The resulting provider secret object.</span>\n\n<span class=\"sd\">    Example:</span>\n<span class=\"sd\">        &gt;&gt;&gt; aws_secret = rh.provider_secret(&quot;aws&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; lamdba_secret = rh.provider_secret(&quot;lambda&quot;, values={&quot;api_key&quot;: &quot;xxxxx&quot;})</span>\n<span class=\"sd\">        &gt;&gt;&gt;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">provider</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Either name or provider must be provided.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">([</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">env_vars</span><span class=\"p\">]):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Secret</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">([</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">env_vars</span><span class=\"p\">]):</span>\n        <span class=\"k\">if</span> <span class=\"n\">provider</span> <span class=\"ow\">in</span> <span class=\"n\">Secret</span><span class=\"o\">.</span><span class=\"n\">builtin_providers</span><span class=\"p\">(</span><span class=\"n\">as_str</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n            <span class=\"n\">secret_class</span> <span class=\"o\">=</span> <span class=\"n\">_get_provider_class</span><span class=\"p\">(</span><span class=\"n\">provider</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">secret_class</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"n\">provider</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">ProviderSecret</span><span class=\"o\">.</span><span class=\"n\">from_name</span><span class=\"p\">(</span><span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"n\">provider</span><span class=\"p\">)</span>\n\n    <span class=\"k\">elif</span> <span class=\"nb\">sum</span><span class=\"p\">([</span><span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">env_vars</span><span class=\"p\">]])</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"n\">secret_class</span> <span class=\"o\">=</span> <span class=\"n\">_get_provider_class</span><span class=\"p\">(</span><span class=\"n\">provider</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">secret_class</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"n\">provider</span><span class=\"p\">,</span>\n            <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">values</span><span class=\"p\">,</span>\n            <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span>\n            <span class=\"n\">env_vars</span><span class=\"o\">=</span><span class=\"n\">env_vars</span><span class=\"p\">,</span>\n            <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Only one of values, path, and env_vars should be set.&quot;</span><span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/resources/secrets/secret_factory", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.13"}