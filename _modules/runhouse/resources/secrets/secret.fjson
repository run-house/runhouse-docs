{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "runhouse.resources.secrets.secret", "body": "<h1>Source code for runhouse.resources.secrets.secret</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.globals</span> <span class=\"kn\">import</span> <span class=\"n\">configs</span><span class=\"p\">,</span> <span class=\"n\">rns_client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.logger</span> <span class=\"kn\">import</span> <span class=\"n\">get_logger</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.hardware</span> <span class=\"kn\">import</span> <span class=\"n\">_get_cluster_from</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.resource</span> <span class=\"kn\">import</span> <span class=\"n\">Resource</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets.utils</span> <span class=\"kn\">import</span> <span class=\"n\">_delete_vault_secrets</span><span class=\"p\">,</span> <span class=\"n\">load_config</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.rns.utils.api</span> <span class=\"kn\">import</span> <span class=\"n\">load_resp_content</span><span class=\"p\">,</span> <span class=\"n\">read_resp_data</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.utils</span> <span class=\"kn\">import</span> <span class=\"n\">generate_default_name</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"Secret\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Secret</span><span class=\"p\">(</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"n\">RESOURCE_TYPE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;secret&quot;</span>\n\n    <span class=\"n\">USER_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;user/secret&quot;</span>\n    <span class=\"n\">GROUP_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;group/secret&quot;</span>\n\n    <span class=\"n\">DEFAULT_DIR</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;~/.rh/secrets&quot;</span>\n\n<div class=\"viewcode-block\" id=\"Secret.__init__\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.__init__\">[docs]</a>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span>\n        <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Runhouse Secret object.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">            To create a Secret, please use one of the factory methods.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_values</span> <span class=\"o\">=</span> <span class=\"n\">values</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">values</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_values</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">condensed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">condensed</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_values</span> <span class=\"ow\">and</span> <span class=\"n\">values</span><span class=\"p\">:</span>\n            <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;values&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_values</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_write_shared_secret_to_local</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">runhouse</span> <span class=\"k\">as</span> <span class=\"nn\">rh</span>\n\n        <span class=\"n\">new_creds_values</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;values&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">folder_name</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">Secret</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_DIR</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"n\">folder_name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">private_key_value</span><span class=\"p\">,</span> <span class=\"n\">public_key_value</span> <span class=\"o\">=</span> <span class=\"n\">new_creds_values</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;private_key&quot;</span>\n        <span class=\"p\">),</span> <span class=\"n\">new_creds_values</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;public_key&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">private_key_path</span> <span class=\"o\">=</span> <span class=\"n\">public_key_path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">private_key_value</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">private_key_path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">private_key_path</span><span class=\"p\">))</span>\n            <span class=\"n\">private_file_path</span> <span class=\"o\">=</span> <span class=\"n\">private_key_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;ssh-key&quot;</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">private_file_path</span><span class=\"p\">),</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">private_key_value</span><span class=\"p\">)</span>\n            <span class=\"n\">private_file_path</span><span class=\"o\">.</span><span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"mo\">0o600</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">public_key_value</span><span class=\"p\">:</span>\n            <span class=\"n\">public_file_path</span> <span class=\"o\">=</span> <span class=\"n\">public_key_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;ssh-key.pub&quot;</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">public_key_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;ssh-key.pub&quot;</span><span class=\"p\">),</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">public_key_value</span><span class=\"p\">)</span>\n            <span class=\"n\">public_file_path</span><span class=\"o\">.</span><span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"mo\">0o600</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">private_key_value</span> <span class=\"ow\">and</span> <span class=\"n\">public_key_value</span><span class=\"p\">:</span>\n            <span class=\"n\">new_creds_values</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;ssh_private_key&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">private_key_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;ssh-key&quot;</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;ssh_public_key&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">public_key_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;ssh-key.pub&quot;</span><span class=\"p\">),</span>\n            <span class=\"p\">}</span>\n        <span class=\"k\">if</span> <span class=\"n\">private_key_value</span> <span class=\"ow\">and</span> <span class=\"n\">new_creds_values</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;ssh_user&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">new_creds_values</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;ssh_private_key&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">private_key_path</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;ssh-key&quot;</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;ssh_user&quot;</span><span class=\"p\">:</span> <span class=\"n\">new_creds_values</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;ssh_user&quot;</span><span class=\"p\">),</span>\n            <span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">secret</span><span class=\"p\">(</span>\n            <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">new_creds_values</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;loaded_secret_</span><span class=\"si\">{</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Secret.from_config\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.from_config\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">_resolve_children</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;provider&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets.provider_secrets.providers</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n                <span class=\"n\">_get_provider_class</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">provider_class</span> <span class=\"o\">=</span> <span class=\"n\">_get_provider_class</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;provider&quot;</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">provider_class</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># checks if the config is a of a shared secret</span>\n        <span class=\"n\">current_user</span> <span class=\"o\">=</span> <span class=\"n\">configs</span><span class=\"o\">.</span><span class=\"n\">username</span>\n        <span class=\"n\">owner_user</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;owner&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;username&quot;</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;owner&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">owner_user</span> <span class=\"ow\">and</span> <span class=\"n\">current_user</span> <span class=\"o\">!=</span> <span class=\"n\">owner_user</span> <span class=\"ow\">and</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;values&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"n\">Secret</span><span class=\"o\">.</span><span class=\"n\">_write_shared_secret_to_local</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">Secret</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Secret.from_name\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.from_name\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_name</span><span class=\"p\">(</span>\n        <span class=\"bp\">cls</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">load_from_den</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">_alt_options</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">_resolve_children</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">USER_ENDPOINT</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">config</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">builtin_providers</span><span class=\"p\">(</span><span class=\"n\">as_str</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets.provider_secrets.providers</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n                <span class=\"n\">_get_provider_class</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">provider_class</span> <span class=\"o\">=</span> <span class=\"n\">_get_provider_class</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">provider_class</span><span class=\"p\">(</span><span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Could not locate secret </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Secret.builtin_providers\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.builtin_providers\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">builtin_providers</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">as_str</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return list of all Runhouse providers (as class objects) supported out of the box.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            as_str (bool, optional): Whether to return the providers as a string or as a class.</span>\n<span class=\"sd\">                (Default: ``False``)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets.provider_secrets.providers</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n            <span class=\"n\">_str_to_provider_class</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">as_str</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">_str_to_provider_class</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">_str_to_provider_class</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())</span></div>\n\n<div class=\"viewcode-block\" id=\"Secret.vault_secrets\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.vault_secrets\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">vault_secrets</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get secret names that are stored in Vault&quot;&quot;&quot;</span>\n        <span class=\"n\">uri</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">api_server_url</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">USER_ENDPOINT</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n            <span class=\"n\">uri</span><span class=\"p\">,</span>\n            <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span> <span class=\"ow\">or</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">request_headers</span><span class=\"p\">(),</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">404</span><span class=\"p\">]:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Received [</span><span class=\"si\">{</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span><span class=\"si\">}</span><span class=\"s2\">] from Den GET &#39;</span><span class=\"si\">{</span><span class=\"n\">uri</span><span class=\"si\">}</span><span class=\"s2\">&#39;: Failed to download secrets from Vault.&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">read_resp_data</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span></div>\n\n<div class=\"viewcode-block\" id=\"Secret.local_secrets\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.local_secrets\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">local_secrets</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Secret&quot;</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get list of local secrets.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            names (List[str], optional): Specific names of local secrets to retrieve. If ``None``, returns all</span>\n<span class=\"sd\">                locally detected secrets. (Default: ``None``)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s2\">&quot;~/.rh/secrets&quot;</span><span class=\"p\">)):</span>\n            <span class=\"k\">return</span> <span class=\"p\">{}</span>\n\n        <span class=\"n\">all_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">stem</span>\n            <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">listdir</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s2\">&quot;~/.rh/secrets&quot;</span><span class=\"p\">))</span>\n            <span class=\"k\">if</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;json&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">names</span> <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">all_names</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">names</span> <span class=\"k\">else</span> <span class=\"n\">all_names</span>\n\n        <span class=\"n\">secrets</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">:</span>\n            <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;~/.rh/secrets/</span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">.json&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;~&quot;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;^&quot;</span><span class=\"p\">):</span>\n                    <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">:]</span>\n                <span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Secret</span><span class=\"o\">.</span><span class=\"n\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">JSONDecodeError</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Ignore any empty / corrupted files</span>\n                <span class=\"k\">continue</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">secrets</span></div>\n\n<div class=\"viewcode-block\" id=\"Secret.extract_provider_secrets\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.extract_provider_secrets\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">extract_provider_secrets</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Secret&quot;</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Extract secret values from providers. Returns a Dict mapping the provider name to Secret.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            names (List[str]): List of provider names to extract secrets for. If ``None``, returns</span>\n<span class=\"sd\">                secrets for all detected providers. (Default: ``None``)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets.provider_secrets.providers</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n            <span class=\"n\">_str_to_provider_class</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets.secret_factory</span> <span class=\"kn\">import</span> <span class=\"n\">provider_secret</span>\n\n        <span class=\"n\">secrets</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"n\">names</span> <span class=\"ow\">or</span> <span class=\"n\">_str_to_provider_class</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">provider</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">provider</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;ssh&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;sky&quot;</span><span class=\"p\">]:</span>\n                <span class=\"k\">continue</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">secret</span> <span class=\"o\">=</span> <span class=\"n\">provider_secret</span><span class=\"p\">(</span><span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"n\">provider</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">provider</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;sky&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">provider</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;ssh-</span><span class=\"si\">{</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                <span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"n\">provider</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">secret</span>\n            <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n\n        <span class=\"c1\"># locally configured ssh secrets</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;ssh&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">:</span>\n            <span class=\"n\">default_ssh_folder</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;~/.ssh&quot;</span>\n            <span class=\"n\">ssh_files</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">listdir</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"n\">default_ssh_folder</span><span class=\"p\">))</span>\n            <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">ssh_files</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">file</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;sky-key&quot;</span> <span class=\"ow\">and</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">file</span><span class=\"si\">}</span><span class=\"s2\">.pub&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">ssh_files</span><span class=\"p\">:</span>\n                    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;ssh-</span><span class=\"si\">{</span><span class=\"n\">file</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                    <span class=\"n\">secret</span> <span class=\"o\">=</span> <span class=\"n\">provider_secret</span><span class=\"p\">(</span>\n                        <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;ssh&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                        <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">default_ssh_folder</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">),</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">secret</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">secrets</span></div>\n\n    <span class=\"c1\"># TODO: refactor this code to reuse rns_client save_config code instead of rewriting</span>\n<div class=\"viewcode-block\" id=\"Secret.save\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.save\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">save</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">save_values</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Save the secret config to Den. Save the secret values into Vault if the user is logged in,</span>\n<span class=\"sd\">        or to local if not or if the resource is a local resource.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            name (str, optional): Name to save the secret resource as.</span>\n<span class=\"sd\">            save_values (str, optional): Whether to save the values of the secret to Vault in addition</span>\n<span class=\"sd\">                to saving the metadata to Den. (Default: ``True``)</span>\n<span class=\"sd\">            headers (Dict, optional): Request headers to provide for the request to RNS. Contains the</span>\n<span class=\"sd\">                user&#39;s auth token. Example: ``{&quot;Authorization&quot;: f&quot;Bearer {token}&quot;}`` (Default: ``None``)</span>\n<span class=\"sd\">            folder (str, optional): If specified, save the secret to that folder in Den (e.g. saving secrets</span>\n<span class=\"sd\">                for a cluster associated with an organization). (Default: ``None``)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;A resource must have a name to be saved.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_rns_folder</span> <span class=\"o\">=</span> <span class=\"n\">folder</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_rns_folder</span> <span class=\"ow\">or</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">current_folder</span>\n\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">()</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rns_address</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;values&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"p\">:</span>\n            <span class=\"c1\"># don&#39;t save values into Den config</span>\n            <span class=\"k\">del</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;values&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"n\">headers</span> <span class=\"ow\">or</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">request_headers</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># Save metadata to Den</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rns_address</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Saving config for </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> to Den&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">resource_request_payload</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n            <span class=\"n\">uri</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">api_server_url</span><span class=\"si\">}</span><span class=\"s2\">/resource&quot;</span>\n            <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n                <span class=\"n\">uri</span><span class=\"p\">,</span>\n                <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"p\">),</span>\n                <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"c1\"># If resource config hasn&#39;t changed (i.e. nothing to update) will return a 422</span>\n            <span class=\"k\">if</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">422</span><span class=\"p\">]:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;Received [</span><span class=\"si\">{</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span><span class=\"si\">}</span><span class=\"s2\">] from Den POST &#39;</span><span class=\"si\">{</span><span class=\"n\">uri</span><span class=\"si\">}</span><span class=\"s2\">&#39;: Failed to save metadata to Den: </span><span class=\"si\">{</span><span class=\"n\">load_resp_content</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                <span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">save_values</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">:</span>\n                <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Saving secrets for </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> to Vault&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">resource_uri</span> <span class=\"o\">=</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">resource_uri</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rns_address</span><span class=\"p\">)</span>\n                <span class=\"n\">uri</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">api_server_url</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">USER_ENDPOINT</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"n\">resource_uri</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span>\n                    <span class=\"n\">uri</span><span class=\"p\">,</span>\n                    <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span>\n                        <span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rns_address</span><span class=\"p\">,</span> <span class=\"s2\">&quot;data&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;values&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">}}</span>\n                    <span class=\"p\">),</span>\n                    <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">!=</span> <span class=\"mi\">200</span><span class=\"p\">:</span>\n                    <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span>\n                        <span class=\"sa\">f</span><span class=\"s2\">&quot;Received [</span><span class=\"si\">{</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span><span class=\"si\">}</span><span class=\"s2\">] from Den PUT &#39;</span><span class=\"si\">{</span><span class=\"n\">uri</span><span class=\"si\">}</span><span class=\"s2\">&#39;: Failed to put resources in Vault: </span><span class=\"si\">{</span><span class=\"n\">load_resp_content</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                    <span class=\"p\">)</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">config_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;~/.rh/secrets/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">.json&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">config_path</span><span class=\"p\">),</span> <span class=\"n\">exist_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">save_values</span><span class=\"p\">:</span>\n                <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">&quot;values&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span>\n\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">config_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Saving config for </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rns_address</span><span class=\"si\">}</span><span class=\"s2\"> to: </span><span class=\"si\">{</span><span class=\"n\">config_path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"Secret.delete\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.delete\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Delete the secret config from Den and from Vault/local.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">in_vault</span><span class=\"p\">()</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">in_local</span><span class=\"p\">()):</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Can not delete a secret that has not been saved down to Vault or local.&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rns_address</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rns_address</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_delete_secret_configs</span><span class=\"p\">(</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_delete_local_config</span><span class=\"p\">()</span>\n        <span class=\"n\">configs</span><span class=\"o\">.</span><span class=\"n\">delete_provider</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_delete_local_config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">config_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;~/.rh/secrets/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">.json&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">config_path</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">config_path</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_delete_secret_configs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"n\">headers</span> <span class=\"ow\">or</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">request_headers</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># Delete secrets in Vault</span>\n        <span class=\"n\">resource_uri</span> <span class=\"o\">=</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">resource_uri</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rns_address</span><span class=\"p\">)</span>\n        <span class=\"n\">_delete_vault_secrets</span><span class=\"p\">(</span><span class=\"n\">resource_uri</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">USER_ENDPOINT</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Delete RNS data for resource</span>\n        <span class=\"n\">uri</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">api_server_url</span><span class=\"si\">}</span><span class=\"s2\">/resource/</span><span class=\"si\">{</span><span class=\"n\">resource_uri</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span>\n            <span class=\"n\">uri</span><span class=\"p\">,</span>\n            <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">!=</span> <span class=\"mi\">200</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Received [</span><span class=\"si\">{</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span><span class=\"si\">}</span><span class=\"s2\">] from Den DELETE &#39;</span><span class=\"si\">{</span><span class=\"n\">uri</span><span class=\"si\">}</span><span class=\"s2\">&#39;: Failed to delete secret resource from Den: </span><span class=\"si\">{</span><span class=\"n\">load_resp_content</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Secret.to\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.to\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">to</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">],</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"s2\">&quot;Env&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return a copy of the secret on a system.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            system (str or Cluster): Cluster to send the secret to</span>\n<span class=\"sd\">            name (str, optional): Name to assign the resource on the cluster.</span>\n<span class=\"sd\">            env (Env, optional): Env to send the secret to.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; secret.to(my_cluster, path=secret.path)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">new_secret</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"n\">generate_default_name</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;secret&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">_get_cluster_from</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">on_this_cluster</span><span class=\"p\">():</span>\n            <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">pin</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">env</span> <span class=\"ow\">or</span> <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">default_env</span>\n            <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">put_resource</span><span class=\"p\">(</span><span class=\"n\">new_secret</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">env</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">new_secret</span></div>\n\n<div class=\"viewcode-block\" id=\"Secret.in_local\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.in_local\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">in_local</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Whether the secret config is stored locally (as opposed to Vault).&quot;&quot;&quot;</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;~/.rh/secrets/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">.json&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Secret.in_vault\"><a class=\"viewcode-back\" href=\"../../../../../api/python/secrets/#runhouse.Secret.in_vault\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">in_vault</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Whether the secret is stored in Vault&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rns_address</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">resource_uri</span> <span class=\"o\">=</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">resource_uri</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rns_address</span><span class=\"p\">)</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">api_server_url</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">USER_ENDPOINT</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"n\">resource_uri</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span> <span class=\"ow\">or</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">request_headers</span><span class=\"p\">(),</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">!=</span> <span class=\"mi\">200</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">read_resp_data</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n        <span class=\"c1\"># TODO: switch this to use self.name once vault updates</span>\n        <span class=\"k\">if</span> <span class=\"n\">response</span> <span class=\"ow\">and</span> <span class=\"n\">response</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())[</span><span class=\"mi\">0</span><span class=\"p\">]]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">is_present</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/resources/secrets/secret", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}