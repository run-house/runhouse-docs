{"parents": [{"link": "../../../../../", "title": "Module code"}], "title": "runhouse.resources.secrets.provider_secrets.provider_secret", "body": "<h1>Source code for runhouse.resources.secrets.provider_secrets.provider_secret</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.constants</span> <span class=\"kn\">import</span> <span class=\"n\">DEFAULT_PROCESS_NAME</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.globals</span> <span class=\"kn\">import</span> <span class=\"n\">configs</span><span class=\"p\">,</span> <span class=\"n\">rns_client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.hardware.cluster</span> <span class=\"kn\">import</span> <span class=\"n\">Cluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.hardware.utils</span> <span class=\"kn\">import</span> <span class=\"n\">_get_cluster_from</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets.secret</span> <span class=\"kn\">import</span> <span class=\"n\">Secret</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.resources.secrets.utils</span> <span class=\"kn\">import</span> <span class=\"n\">_check_file_for_mismatches</span>\n<span class=\"kn\">from</span> <span class=\"nn\">runhouse.utils</span> <span class=\"kn\">import</span> <span class=\"n\">create_local_dir</span>\n\n\n<div class=\"viewcode-block\" id=\"ProviderSecret\"><a class=\"viewcode-back\" href=\"../../../../../../api/python/secrets/#runhouse.ProviderSecret\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ProviderSecret</span><span class=\"p\">(</span><span class=\"n\">Secret</span><span class=\"p\">):</span>\n    <span class=\"n\">_PROVIDER</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">_DEFAULT_CREDENTIALS_PATH</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">_DEFAULT_ENV_VARS</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n<div class=\"viewcode-block\" id=\"ProviderSecret.__init__\"><a class=\"viewcode-back\" href=\"../../../../../../api/python/secrets/#runhouse.ProviderSecret.__init__\">[docs]</a>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">provider</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">env_vars</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Provider Secret class. Built-in provider classes contain default path and/or environment variable mappings,</span>\n<span class=\"sd\">        based on it&#39;s expected usage.</span>\n\n<span class=\"sd\">        Currently supported built-in providers:</span>\n<span class=\"sd\">        anthropic, aws, azure, gcp, github, huggingface, lambda, langchain, openai, pinecone, ssh, sky, wandb.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">            To create a ProviderSecret, please use the factory method :func:`provider_secret`.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">provider</span> <span class=\"o\">=</span> <span class=\"n\">provider</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_PROVIDER</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span> <span class=\"o\">=</span> <span class=\"n\">env_vars</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">([</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">env_vars</span><span class=\"p\">]):</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_from_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_DEFAULT_CREDENTIALS_PATH</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_DEFAULT_CREDENTIALS_PATH</span>\n            <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_from_env</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_DEFAULT_ENV_VARS</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_DEFAULT_ENV_VARS</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;Secrets values not provided and could not be extracted from default file &quot;</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;(</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_DEFAULT_CREDENTIALS_PATH</span><span class=\"si\">}</span><span class=\"s2\">) or env vars (</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_DEFAULT_ENV_VARS</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">) locations.&quot;</span>\n                <span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">values</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_values</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_values</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_from_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_from_env</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">condensed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">condensed</span><span class=\"p\">)</span>\n        <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s2\">&quot;provider&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">provider</span><span class=\"p\">})</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">:</span>\n            <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s2\">&quot;path&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">})</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span><span class=\"p\">:</span>\n            <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s2\">&quot;env_vars&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span><span class=\"p\">})</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">values</span><span class=\"p\">:</span>\n            <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;values&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n<div class=\"viewcode-block\" id=\"ProviderSecret.from_config\"><a class=\"viewcode-back\" href=\"../../../../../../api/python/secrets/#runhouse.ProviderSecret.from_config\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">_resolve_children</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a ProviderSecret object from a config dictionary.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">ProviderSecret</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"ProviderSecret.save\"><a class=\"viewcode-back\" href=\"../../../../../../api/python/secrets/#runhouse.ProviderSecret.save\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">save</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">save_values</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rns_address</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">provider</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">save_values</span><span class=\"o\">=</span><span class=\"n\">save_values</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span> <span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"n\">folder</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"ProviderSecret.delete\"><a class=\"viewcode-back\" href=\"../../../../../../api/python/secrets/#runhouse.ProviderSecret.delete\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">contents</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Delete the secret config from Den and from Vault/local. Optionally also delete contents of secret file</span>\n<span class=\"sd\">        or env vars.&quot;&quot;&quot;</span>\n        <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"n\">headers</span> <span class=\"ow\">or</span> <span class=\"n\">rns_client</span><span class=\"o\">.</span><span class=\"n\">request_headers</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"ow\">and</span> <span class=\"n\">contents</span> <span class=\"ow\">and</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">))</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span> <span class=\"ow\">and</span> <span class=\"n\">contents</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">env_var</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n                <span class=\"k\">if</span> <span class=\"n\">env_var</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">:</span>\n                    <span class=\"k\">del</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"n\">env_var</span><span class=\"p\">]</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">)</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">write</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">env_vars</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">write_config</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Could not determine values to write down.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">file</span> <span class=\"ow\">or</span> <span class=\"n\">path</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"n\">env</span> <span class=\"ow\">or</span> <span class=\"n\">env_vars</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Can only save to one of file or env at a given time.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">([</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">env_vars</span><span class=\"p\">]):</span>\n            <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>  <span class=\"c1\"># default write to file</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">file</span> <span class=\"ow\">or</span> <span class=\"n\">path</span><span class=\"p\">:</span>\n            <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_DEFAULT_CREDENTIALS_PATH</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_write_to_file</span><span class=\"p\">(</span>\n                <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"n\">overwrite</span><span class=\"p\">,</span> <span class=\"n\">write_config</span><span class=\"o\">=</span><span class=\"n\">write_config</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">env</span> <span class=\"ow\">or</span> <span class=\"n\">env_vars</span><span class=\"p\">:</span>\n            <span class=\"n\">env_vars</span> <span class=\"o\">=</span> <span class=\"n\">env_vars</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_DEFAULT_ENV_VARS</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_write_to_env</span><span class=\"p\">(</span><span class=\"n\">env_vars</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"n\">overwrite</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"ProviderSecret.to\"><a class=\"viewcode-back\" href=\"../../../../../../api/python/secrets/#runhouse.ProviderSecret.to\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">to</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">],</span>\n        <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">process</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return a copy of the secret on a system.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            system (str or Cluster): Cluster to send the secret to</span>\n<span class=\"sd\">            path (str or Path, optional): Path on cluster to write down the secret values to.</span>\n<span class=\"sd\">                If not provided and secret is not already associated with a path, the secret values</span>\n<span class=\"sd\">                will not be written down on the cluster.</span>\n<span class=\"sd\">            env (str or Env, optional): Env to send the secret to. This will save down the secrets</span>\n<span class=\"sd\">                as env vars in the env.</span>\n<span class=\"sd\">            values (bool, optional): Whether to save down the values in the resource config. By default,</span>\n<span class=\"sd\">                save down values if the secret is not being written down to a file or environment variable.</span>\n<span class=\"sd\">                Otherwise, values are not written down. (Default: None)</span>\n<span class=\"sd\">            name (str, ooptional): Name to assign the resource on the cluster.</span>\n\n<span class=\"sd\">        Example:</span>\n<span class=\"sd\">            &gt;&gt;&gt; secret.to(my_cluster, path=secret.path)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">_get_cluster_from</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">on_this_cluster</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">process</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">path</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">process</span><span class=\"p\">)</span>\n            <span class=\"n\">new_secret</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n            <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">_values</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span>\n            <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n            <span class=\"k\">return</span> <span class=\"n\">new_secret</span>\n\n        <span class=\"n\">new_secret</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">provider</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">values</span><span class=\"p\">:</span>\n            <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">_values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span>\n        <span class=\"k\">elif</span> <span class=\"n\">values</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"n\">path</span> <span class=\"ow\">or</span> <span class=\"n\">process</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span><span class=\"p\">):</span>\n            <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">_values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span>\n        <span class=\"k\">elif</span> <span class=\"n\">values</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n            <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">_values</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"n\">process</span> <span class=\"o\">=</span> <span class=\"n\">process</span> <span class=\"ow\">or</span> <span class=\"n\">DEFAULT_PROCESS_NAME</span>\n        <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">put_resource</span><span class=\"p\">(</span><span class=\"n\">new_secret</span><span class=\"p\">,</span> <span class=\"n\">process</span><span class=\"o\">=</span><span class=\"n\">process</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">path</span><span class=\"p\">:</span>\n            <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_file_to</span><span class=\"p\">(</span>\n                <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">process</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span><span class=\"p\">:</span>\n            <span class=\"n\">env_vars</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_DEFAULT_ENV_VARS</span>\n            <span class=\"k\">if</span> <span class=\"n\">env_vars</span><span class=\"p\">:</span>\n                <span class=\"n\">env_vars</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                    <span class=\"n\">env_vars</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">values</span> <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">env_vars</span>\n                <span class=\"p\">}</span>\n                <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">set_process_env_vars</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">process</span><span class=\"p\">,</span> <span class=\"n\">env_vars</span><span class=\"o\">=</span><span class=\"n\">env_vars</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_secret</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_file_to</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Cluster</span><span class=\"p\">],</span>\n        <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_write_to_file&quot;</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">values</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">path</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_write_to_file</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">write_config</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">new_secret</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">_check_file_for_mismatches</span><span class=\"p\">(</span>\n            <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_from_path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">),</span> <span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">full_path</span> <span class=\"o\">=</span> <span class=\"n\">create_local_dir</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">full_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">write_config</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_to_rh_config</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n        <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">_values</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_secret</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_write_to_env</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">env_vars</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">):</span>\n        <span class=\"n\">existing_keys</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n        <span class=\"n\">added_keys</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">env_vars</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">env_vars</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">existing_keys</span> <span class=\"ow\">or</span> <span class=\"n\">overwrite</span><span class=\"p\">:</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"n\">env_vars</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n                <span class=\"n\">added_keys</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">env_vars</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">])</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">added_keys</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_to_rh_config</span><span class=\"p\">(</span><span class=\"n\">added_keys</span><span class=\"p\">)</span>\n\n        <span class=\"n\">new_secret</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">_values</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">env_vars</span> <span class=\"o\">=</span> <span class=\"n\">env_vars</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_secret</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_from_env</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">env_vars</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">env_vars</span> <span class=\"o\">=</span> <span class=\"n\">env_vars</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env_vars</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">env_vars</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">{}</span>\n\n        <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">env_vars</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"n\">env_vars</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]]</span>\n            <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"p\">{}</span>\n        <span class=\"k\">return</span> <span class=\"n\">values</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_from_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">path</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">{}</span>\n\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n                <span class=\"k\">except</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">decoder</span><span class=\"o\">.</span><span class=\"n\">JSONDecodeError</span><span class=\"p\">:</span>\n                    <span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"n\">contents</span>\n        <span class=\"k\">return</span> <span class=\"p\">{}</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">extract_secrets_from_path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]:</span>\n        <span class=\"n\">secret_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">secret_path</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n        <span class=\"n\">provider_secret</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">secret_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read_text</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">provider_secret</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_add_to_rh_config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">provider</span>\n        <span class=\"n\">configs</span><span class=\"o\">.</span><span class=\"n\">set_nested</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;secrets&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">val</span><span class=\"p\">})</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/resources/secrets/provider_secrets/provider_secret", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}