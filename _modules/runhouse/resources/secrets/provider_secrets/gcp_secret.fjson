{"parents": [{"link": "../../../../../", "title": "Module code"}], "title": "runhouse.resources.secrets.provider_secrets.gcp_secret", "body": "<h1>Source code for runhouse.resources.secrets.provider_secrets.gcp_secret</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">copy</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">json</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">os</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">pathlib</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">typing</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Dict</span>\n\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">runhouse.resources.secrets.provider_secrets.provider_secret</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">ProviderSecret</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">runhouse.resources.secrets.utils</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">_check_file_for_mismatches</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">runhouse.utils</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">create_local_dir</span>\n\n\n<div class=\"viewcode-block\" id=\"GCPSecret\"><a class=\"viewcode-back\" href=\"../../../../../../api/python/secrets/#runhouse.resources.secrets.provider_secrets.gcp_secret.GCPSecret\">[docs]</a><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">GCPSecret</span><span class=\"p\">(</span><span class=\"n\">ProviderSecret</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    .. note::</span>\n<span class=\"sd\">            To create a GCPSecret, please use the factory method :func:`provider_secret` with ``provider=&quot;gcp&quot;``.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">_PROVIDER</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;gcp&quot;</span>\n    <span class=\"n\">_DEFAULT_CREDENTIALS_PATH</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;~/.config/gcloud/application_default_credentials.json&quot;</span>\n    <span class=\"n\">_DEFAULT_ENV_VARS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;client_id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;CLIENT_ID&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;client_secret&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;CLIENT_SECRET&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">from_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">_resolve_children</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">GCPSecret</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"n\">dryrun</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_write_to_file</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">write_config</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">new_secret</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">_check_file_for_mismatches</span><span class=\"p\">(</span>\n            <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_from_path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">),</span> <span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">parents</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">exist_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n            <span class=\"n\">full_path</span> <span class=\"o\">=</span> <span class=\"n\">create_local_dir</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">full_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w+&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">write_config</span><span class=\"p\">:</span>\n                <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">_add_to_rh_config</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n        <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">_values</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">new_secret</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_secret</span>\n\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">_from_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"n\">path</span> <span class=\"ow\">and</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)):</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">),</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">config_file</span><span class=\"p\">:</span>\n                <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span></div>\n</pre></div>", "current_page_name": "_modules/runhouse/resources/secrets/provider_secrets/gcp_secret", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}