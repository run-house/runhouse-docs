{"parents": [], "prev": {"link": "../debugging-logging/", "title": "Debugging and Logging"}, "next": {"link": "../docker-workflows/", "title": "Docker: Dev and Prod Workflows with Runhouse"}, "title": "Docker: Cluster Setup", "meta": {}, "body": "<section id=\"docker-cluster-setup\">\n<h1>Docker: Cluster Setup<a class=\"headerlink\" href=\"#docker-cluster-setup\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p><a href=\"https://colab.research.google.com/github/run-house/notebooks/blob/stable/docs/docker-setup.ipynb\">\n<img height=\"20px\" width=\"117px\" src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a></p><p>Runhouse integrates with\n<a class=\"reference external\" href=\"https://skypilot.readthedocs.io/en/latest/docs/index.html\">SkyPilot</a>\nto enable automatic setup of an existing Docker container when you\nlaunch your <a class=\"reference external\" href=\"https://www.run.house/docs/api/python/cluster#ondemandcluster-class\">on-demand\ncluster</a>.\nWhen you specify a Docker image for an on-demand cluster, the container\nis automatically built and set up remotely on the cluster. The Runhouse\nserver will start directly inside the remote container.</p>\n<p><strong>NOTE:</strong> This guide details the setup and usage for on-demand clusters\nonly. It is not yet supported for static clusters.</p>\n<section id=\"cluster-docker-setup\">\n<h2>Cluster &amp; Docker Setup<a class=\"headerlink\" href=\"#cluster-docker-setup\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<section id=\"public-docker-image\">\n<h3>Public Docker Image<a class=\"headerlink\" href=\"#public-docker-image\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>One can specify a Docker Image through the Runhouse Image class, which is\npassed into the cluster factory. Call <code class=\"docutils literal notranslate\"><span class=\"pre\">.from_docker(image_id)</span></code> on the image,\npassing in the Docker container in the format <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;registry&gt;/&lt;image&gt;:&lt;tag&gt;</span></code>.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>base_image = rh.Image(&quot;base_image&quot;).from_docker(&quot;nvcr.io/nvidia/pytorch:23.10-py3&quot;)\n\ndocker_cluster = rh.ondemand_cluster(\n    name=&quot;pytorch_cluster&quot;,\n    image=base_image,\n    instance_type=&quot;CPU:2+&quot;,\n    provider=&quot;aws&quot;,\n)\n</pre></div>\n</div>\n</section>\n<section id=\"private-docker-image\">\n<h3>Private Docker Image<a class=\"headerlink\" href=\"#private-docker-image\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>To use a Docker image hosted on a private registry, such as ECR, you\nneed to additionally provide the <code class=\"docutils literal notranslate\"><span class=\"pre\">user</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">password</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">registry</span> <span class=\"pre\">server</span></code>\nvalues, as used in <code class=\"docutils literal notranslate\"><span class=\"pre\">docker</span> <span class=\"pre\">login</span> <span class=\"pre\">-u</span> <span class=\"pre\">&lt;user&gt;</span> <span class=\"pre\">-p</span> <span class=\"pre\">&lt;password&gt;</span> <span class=\"pre\">&lt;registry</span> <span class=\"pre\">server&gt;</span></code>.</p>\n<p>These values are propagated to SkyPilot at launch time, which will be used\nfor setting up the base container on the cluster.</p>\n<p>There are two approaches to providing this information:</p>\n<ol class=\"arabic simple\">\n<li><p>Creating a runhouse Secret as follows, and pass it to the Image along with the\nDocker image above.</p></li>\n</ol>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>values = {\n    &quot;username&quot;: &lt;user&gt;,\n    &quot;password&quot;: &lt;password&gt;,\n    &quot;server&quot;: &lt;server&gt;,\n}\ndocker_secret = rh.provider_secret(&quot;docker&quot;, values=values)\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">base_image</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"s2\">&quot;base_image&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">from_docker</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;pytorch-training:2.2.0-cpu-py310-ubuntu20.04-ec2&quot;</span><span class=\"p\">,</span> <span class=\"n\">docker_secret</span><span class=\"o\">=</span><span class=\"n\">docker_secret</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<ol class=\"arabic simple\" start=\"2\">\n<li><p>Directly set your local environment variables, as expected by and extracted by\nSkypilot during launch time. In this case, you do not need to specify the secret\nduring the runhouse Image construction.</p>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">SKYPILOT_DOCKER_USERNAME</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;user&gt;</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">SKYPILOT_DOCKER_PASSWORD</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;password&gt;</span></code></p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">SKYPILOT_DOCKER_SERVER</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;registry</span> <span class=\"pre\">server&gt;</span></code></p></li>\n</ul>\n</li>\n</ol>\n<p>For instance, to use the PyTorch2.2 ECR Framework provided\n<a class=\"reference external\" href=\"https://github.com/aws/deep-learning-containers/blob/master/available_images.md#ec2-framework-containers-tested-on-ec2-ecs-and-eks-only\">here</a>,\nyou can set your environment variables as so:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>$ export SKYPILOT_DOCKER_USERNAME=AWS\n$ export SKYPILOT_DOCKER_PASSWORD=$(aws ecr get-login-password --region us-east-1)\n$ export SKYPILOT_DOCKER_SERVER=763104351884.dkr.ecr.us-east-1.amazonaws.com\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">base_image</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"s2\">&quot;base_image&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">from_docker</span><span class=\"p\">(</span><span class=\"s2\">&quot;pytorch-training:2.2.0-cpu-py310-ubuntu20.04-ec2&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>In either case, we can then construct the cluster with the image as follows:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ecr_cluster</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">ondemand_cluster</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;ecr_pytorch_cluster&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">image_id</span><span class=\"o\">=</span><span class=\"n\">base_image</span><span class=\"p\">,</span>\n    <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;CPU:2+&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;aws&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<section id=\"launching-the-cluster\">\n<h4>Launching the Cluster<a class=\"headerlink\" href=\"#launching-the-cluster\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>You can then launch the docker cluster with <code class=\"docutils literal notranslate\"><span class=\"pre\">ecr_cluster.up()</span></code>. If for\nany reason the docker pull fails on the cluster (for instance, due to\nincorrect credentials or permission error), you must first teardown the\ncluster with <code class=\"docutils literal notranslate\"><span class=\"pre\">ecr_cluster.teardown()</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">sky</span> <span class=\"pre\">stop</span> <span class=\"pre\">ecr_pytorch_cluster</span></code> in CLI before re-launching the cluster\nwith new credentials in order for them to propagate through.</p>\n</section>\n</section>\n<section id=\"ssh\">\n<h3>SSH<a class=\"headerlink\" href=\"#ssh\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>To SSH directly onto the container, where the Runhouse server is\nstarted, you can use <code class=\"docutils literal notranslate\"><span class=\"pre\">runhouse</span> <span class=\"pre\">cluster</span> <span class=\"pre\">ssh</span> <span class=\"pre\">&lt;cluster_name&gt;</span></code>.</p>\n</section>\n<section id=\"user-and-container-name\">\n<h3>User and Container Name<a class=\"headerlink\" href=\"#user-and-container-name\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>By default, the remote Docker container, which is set up through\nSkypilot, will be named <code class=\"docutils literal notranslate\"><span class=\"pre\">sky_container</span></code>, and the user will be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">root</span></code>.</p>\n</section>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            name: \"python3\",\n            path: \"./.\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["docker-workflows", "Docker: Dev and Prod Workflows with Runhouse", "N", "next"], ["debugging-logging", "Debugging and Logging", "P", "previous"]], "sourcename": "docker-setup.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Docker: Cluster Setup</a><ul>\n<li><a class=\"reference internal\" href=\"#cluster-docker-setup\">Cluster &amp; Docker Setup</a><ul>\n<li><a class=\"reference internal\" href=\"#public-docker-image\">Public Docker Image</a></li>\n<li><a class=\"reference internal\" href=\"#private-docker-image\">Private Docker Image</a><ul>\n<li><a class=\"reference internal\" href=\"#launching-the-cluster\">Launching the Cluster</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#ssh\">SSH</a></li>\n<li><a class=\"reference internal\" href=\"#user-and-container-name\">User and Container Name</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "globaltoc": "<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Getting Started</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"installation-setup/\">Installation and Compute Setup</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick-start-cloud/\">Quick Start</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick-start-den/\">Den Quick Start</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"development-guide/\">Development Guide</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"runhouse-in-your-stack/\">Working with Common Libraries and Tools</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Basics</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-clusters/\">Clusters</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-modules/\">Functions and Modules</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-process/\">Processes</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-images/\">Images</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-folders/\">Folders</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-secrets/\">Secrets</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-resources/\">Resource Management</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Reference</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/python/\">Python API</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/resource/\">Resource</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/function/\">Function</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/cluster/\">Cluster</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/image/\">Image</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/package/\">Package</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/module/\">Module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/folder/\">Folder</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/secrets/\">Secrets</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/login/\">Login/Logout</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/cli/\">Command Line Interface</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Other Topics</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/async/\">Asynchronous Programming</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"installation/\">Installation and Setup</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"debugging-logging/\">Debugging and Logging</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"docker-setup/\">Docker: Cluster Setup</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"docker-workflows/\">Docker: Dev and Prod Workflows with Runhouse</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"security-and-authentication/\">Security and Authentication</a></li>\n</ul>\n", "current_page_name": "docker-setup", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}