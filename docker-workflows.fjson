{"parents": [], "prev": {"link": "../docker-setup/", "title": "Docker: Cluster Setup"}, "next": {"link": "../troubleshooting/", "title": "Manual Setup and Troubleshooting"}, "title": "Docker: Dev and Prod Workflows", "meta": {}, "body": "<section id=\"docker-dev-and-prod-workflows\">\n<h1>Docker: Dev and Prod Workflows<a class=\"headerlink\" href=\"#docker-dev-and-prod-workflows\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p><a href=\"https://colab.research.google.com/github/run-house/notebooks/blob/stable/docs/docker-workflows.ipynb\">\n<img height=\"20px\" width=\"117px\" src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a></p><p>This guide demonstrates how to use the same Docker image with your\nRunhouse cluster, for both:</p>\n<ul class=\"simple\">\n<li><p><strong>Production</strong>: running functions and code that is pre-installed on\nthe Docker image</p></li>\n<li><p><strong>Local development</strong>: making local edits to your repo, and having\nlocal changes propagated over to the cluster for experimentation</p></li>\n</ul>\n<p>Afterwards, we provide a script that shows how to easily set up and\ntoggle between these two settings, using the same cluster setup.</p>\n<p>In this example, we are going to be using the <a class=\"reference external\" href=\"https://github.com/aws/deep-learning-containers/blob/master/available_images.md#large-model-inference-containers\">DJLServing 0.27.0 with\nDeepSpeed\n0.12.6</a>\nContainer, which includes HuggingFace Tranformers (4.39.0), Diffusers\n(0.16.0), and Accelerate (0.28.0). We will use both the container\nversion of these packages, as well as local editable versions to\nshowcase both production ready and local experimentation use cases for\nusing the same Docker image.</p>\n<section id=\"setup\">\n<h2>Setup<a class=\"headerlink\" href=\"#setup\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Runhouse uses SkyPilot under the hood to set up the Docker image on the\ncluster. Because we are pulling the Docker image from AWS ECR, we first\nset some environment variables necessary to pull the Docker image.</p>\n<p>For more specific details on getting your Docker image set up with\nRunhouse, please take a look at the <a class=\"reference external\" href=\"https://www.run.house/docs/docker-setup\">Docker Setup\nGuide</a>.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>! export SKYPILOT_DOCKER_USERNAME=AWS\n! export SKYPILOT_DOCKER_PASSWORD=$(aws ecr get-login-password --region us-west-1)\n! export SKYPILOT_DOCKER_SERVER=763104351884.dkr.ecr.us-west-1.amazonaws.com\n</pre></div>\n</div>\n<p>Once these variables are set, we can import runhouse and construct an\nondemand cluster, specifying the container image id as follows, and call\n<code class=\"docutils literal notranslate\"><span class=\"pre\">cluster.up_if_not()</span></code> to launch the cluster with the Docker image\nloaded on it.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>import runhouse as rh\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"mf\">48.921683</span> <span class=\"o\">|</span> <span class=\"n\">Loaded</span> <span class=\"n\">Runhouse</span> <span class=\"n\">config</span> <span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">caroline</span><span class=\"o\">/.</span><span class=\"n\">rh</span><span class=\"o\">/</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">yaml</span>\n</pre></div>\n</div>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>cluster = rh.ondemand_cluster(\n    name=&quot;diffusers_docker&quot;,\n    image_id=&quot;docker:djl-inference:0.27.0-deepspeed0.12.6-cu121&quot;,\n    instance_type=&quot;g5.8xlarge&quot;,\n    provider=&quot;aws&quot;,\n)\ncluster.up_if_not()\n</pre></div>\n</div>\n<p>The function we\u2019ll be using in our demo is <code class=\"docutils literal notranslate\"><span class=\"pre\">is_transformers_available</span></code>\nfrom <code class=\"docutils literal notranslate\"><span class=\"pre\">diffusers.utils</span></code>. We\u2019ll first show what using this function\ndirectly on the box (e.g.\u00a0a production setting) looks like. After, we\u2019ll\nshow the case if we had local versions of the repositories, that we\u2019d\nmodified, and wanted to test out our changes on the cluster.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>from diffusers.utils import is_transformers_available\n</pre></div>\n</div>\n</section>\n<section id=\"production-workflow\">\n<h2>Production Workflow<a class=\"headerlink\" href=\"#production-workflow\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>The core of the production workflow is that the Docker image already\ncontains the exact packages and versions we want, probably published\ninto the registry in CI/CD. We don\u2019t want to perform any installs or\ncode changes within the image throughout execution so we can preserve\nexact reproducibility.</p>\n<p><strong>NOTE</strong>: By default, Ray and Runhouse are installed on the ondemand\ncluster during setup time (generally attempting to match the versions\nyou have locally), unless we detect that they\u2019re already present. To\nmake sure that no installs occur in production, please make sure that\nyou have Runhouse and Ray installed in your docker image.</p>\n<section id=\"defining-the-env\">\n<h3>Defining the Env<a class=\"headerlink\" href=\"#defining-the-env\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Here, we construct a Runhouse env containing anything you need for\nrunning your code, that doesn\u2019t already live on the cluster. For\ninstance, any environment variables or additional packages that you\nmight need installed. Do <strong>NOT</strong> include the packages already installed\non the container that you want pinned to the specific version, in this\ncase diffusers and transformers.</p>\n<p>Then send and create the env on the cluster by directly calling\n<code class=\"docutils literal notranslate\"><span class=\"pre\">env.to(cluster)</span></code>.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>prod_env = rh.env(name=&quot;prod_env&quot;, env_vars={&quot;HF_TOKEN&quot;: &quot;****&quot;})\nprod_env.to(cluster)\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mf\">13.168591</span> <span class=\"o\">|</span> <span class=\"n\">Port</span> <span class=\"mi\">32300</span> <span class=\"ow\">is</span> <span class=\"n\">already</span> <span class=\"ow\">in</span> <span class=\"n\">use</span><span class=\"o\">.</span> <span class=\"n\">Trying</span> <span class=\"nb\">next</span> <span class=\"n\">port</span><span class=\"o\">.</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mf\">13.172968</span> <span class=\"o\">|</span> <span class=\"n\">Running</span> <span class=\"n\">forwarding</span> <span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"n\">ssh</span> <span class=\"o\">-</span><span class=\"n\">T</span> <span class=\"o\">-</span><span class=\"n\">L</span> <span class=\"mi\">32301</span><span class=\"p\">:</span><span class=\"n\">localhost</span><span class=\"p\">:</span><span class=\"mi\">32300</span> <span class=\"o\">-</span><span class=\"n\">i</span> <span class=\"o\">~/.</span><span class=\"n\">ssh</span><span class=\"o\">/</span><span class=\"n\">sky</span><span class=\"o\">-</span><span class=\"n\">key</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">Port</span><span class=\"o\">=</span><span class=\"mi\">10022</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">StrictHostKeyChecking</span><span class=\"o\">=</span><span class=\"n\">no</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">UserKnownHostsFile</span><span class=\"o\">=/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">null</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">IdentitiesOnly</span><span class=\"o\">=</span><span class=\"n\">yes</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">ExitOnForwardFailure</span><span class=\"o\">=</span><span class=\"n\">yes</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">ServerAliveInterval</span><span class=\"o\">=</span><span class=\"mi\">5</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">ServerAliveCountMax</span><span class=\"o\">=</span><span class=\"mi\">3</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">ConnectTimeout</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"n\">s</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">ForwardAgent</span><span class=\"o\">=</span><span class=\"n\">yes</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">ProxyCommand</span><span class=\"o\">=</span><span class=\"s1\">&#39;ssh -T -L 32301:localhost:32300 -i ~/.ssh/sky-key -o Port=22 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ExitOnForwardFailure=yes -o ServerAliveInterval=5 -o ServerAliveCountMax=3 -o ConnectTimeout=30s -o ForwardAgent=yes -W %h:%p ubuntu@3.142.171.243&#39;</span> <span class=\"n\">root</span><span class=\"nd\">@localhost</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mf\">16.685047</span> <span class=\"o\">|</span> <span class=\"n\">Calling</span> <span class=\"n\">prod_env</span><span class=\"o\">.</span><span class=\"n\">_set_env_vars</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>----------------\n\u001b[36mdiffusers_docker\u001b[0m\n----------------\n\u001b[36mprod_env env: Calling method _set_env_vars on module prod_env\n\u001b[0m\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mf\">17.273890</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">call</span> <span class=\"n\">prod_env</span><span class=\"o\">.</span><span class=\"n\">_set_env_vars</span><span class=\"p\">:</span> <span class=\"mf\">0.59</span> <span class=\"n\">seconds</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mf\">17.350932</span> <span class=\"o\">|</span> <span class=\"n\">Calling</span> <span class=\"n\">prod_env</span><span class=\"o\">.</span><span class=\"n\">install</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>\u001b[36mprod_env env: Calling method install on module prod_env\n\u001b[0m\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mf\">17.929387</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">call</span> <span class=\"n\">prod_env</span><span class=\"o\">.</span><span class=\"n\">install</span><span class=\"p\">:</span> <span class=\"mf\">0.58</span> <span class=\"n\">seconds</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"o\">&lt;</span><span class=\"n\">runhouse</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">envs</span><span class=\"o\">.</span><span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">Env</span> <span class=\"n\">at</span> <span class=\"mh\">0x133a6eb60</span><span class=\"o\">&gt;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"defining-the-function\">\n<h3>Defining the Function<a class=\"headerlink\" href=\"#defining-the-function\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>The function is the <code class=\"docutils literal notranslate\"><span class=\"pre\">is_transformers_available</span></code> function imported\nabove. When creating the function to run remotely on the production\nRunhouse env, we pass in the <strong>name</strong> of the Runhouse env. By passing in\nthe env name, rather than the object, it simply signals that we want to\nuse the env that already lives on the cluster, without re-syncing over\nanything.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>prod_fn = rh.function(is_transformers_available).to(cluster, env=prod_env.name)\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>INFO | 2024-08-01 02:19:22.140840 | Sending module is_transformers_available of type &lt;class &#39;runhouse.resources.functions.function.Function&#39;&gt; to diffusers_docker\n</pre></div>\n</div>\n</section>\n<section id=\"calling-the-function\">\n<h3>Calling the Function<a class=\"headerlink\" href=\"#calling-the-function\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Now, simply call the function, and it will detect the corresponding\nfunction on the cluster to run. In this case, it returns whether or not\ntransformers is available on the cluster, which it is, as it was part of\nthe Docker image.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>prod_fn()\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mf\">27.817880</span> <span class=\"o\">|</span> <span class=\"n\">Calling</span> <span class=\"n\">is_transformers_available</span><span class=\"o\">.</span><span class=\"n\">call</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>\u001b[36mprod_env env: Calling method call on module is_transformers_available\n\u001b[0m\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mf\">31.554237</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">call</span> <span class=\"n\">is_transformers_available</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">:</span> <span class=\"mf\">3.74</span> <span class=\"n\">seconds</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kc\">True</span>\n</pre></div>\n</div>\n</section>\n</section>\n<section id=\"local-development\">\n<h2>Local Development<a class=\"headerlink\" href=\"#local-development\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Now for the local development and experimentation case. Let\u2019s say we\nhave the HuggingFace diffusers and transformers repositories cloned and\ninstalled as a local editable package, and are making changes to it that\nwe want reflected when we run it on the cluster.</p>\n<section id=\"local-changes\">\n<h3>Local Changes<a class=\"headerlink\" href=\"#local-changes\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Let\u2019s continue using the <code class=\"docutils literal notranslate\"><span class=\"pre\">is_transformers_available</span></code> function, except\nthis time we\u2019ll change the function to return the version number of the\ntransformers package if it exists, instead of True.</p>\n<p>In my local diffusers/src/diffusers/utils/import_utils.py file:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">is_transformers_available</span><span class=\"p\">:</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">transformers</span>\n        <span class=\"k\">return</span> <span class=\"n\">transformers</span><span class=\"o\">.</span><span class=\"n\">__version__</span>\n    <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n</pre></div>\n</div>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>from diffusers.utils import is_transformers_available\n\nis_transformers_available()\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"s1\">&#39;4.44.0.dev0&#39;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"id1\">\n<h3>Defining the Env<a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>In this case, because we want to use our local diffusers package, as\nwell as our local transformers package and version, we include these as\nrequirements inside our Runhouse env. There is no need to preemptively\nsend over the env, as now we can directly pass in the env object when we\ndefine the function, to sync over the local changes.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>dev_env = rh.env(name=&quot;dev_env&quot;, env_vars={&quot;HF_TOKEN&quot;: &quot;****&quot;}, reqs=[&quot;diffusers&quot;, &quot;transformers&quot;])\n</pre></div>\n</div>\n</section>\n<section id=\"id2\">\n<h3>Defining the Function<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Define a Runhouse function normally, passing in the function, and\nsending it to the cluster. Here, we simply pass in the <code class=\"docutils literal notranslate\"><span class=\"pre\">dev_env</span></code>\nobject into the env argument. This will ensure that the folder that this\nfunction is locally found in, along with any requirements in the env\nrequirements is synced over to the cluster properly. Even though the\ncontainer already contains its own version of these packages,\nrequirements that can be found locally, such as our local modified\ndiffusers and transformers (v 4.44.0.dev0) repositories will be synced\nto the cluster.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>dev_fn = rh.function(is_transformers_available).to(cluster, env=dev_env)\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">34</span><span class=\"p\">:</span><span class=\"mf\">20.997084</span> <span class=\"o\">|</span> <span class=\"n\">Copying</span> <span class=\"n\">package</span> <span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">file</span><span class=\"p\">:</span><span class=\"o\">///</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">caroline</span><span class=\"o\">/</span><span class=\"n\">Documents</span><span class=\"o\">/</span><span class=\"n\">diffusers</span> <span class=\"n\">to</span><span class=\"p\">:</span> <span class=\"n\">diffusers_docker</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">34</span><span class=\"p\">:</span><span class=\"mf\">24.924803</span> <span class=\"o\">|</span> <span class=\"n\">Copying</span> <span class=\"n\">package</span> <span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">file</span><span class=\"p\">:</span><span class=\"o\">///</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">caroline</span><span class=\"o\">/</span><span class=\"n\">Documents</span><span class=\"o\">/</span><span class=\"n\">transformers</span> <span class=\"n\">to</span><span class=\"p\">:</span> <span class=\"n\">diffusers_docker</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">34</span><span class=\"p\">:</span><span class=\"mf\">31.626250</span> <span class=\"o\">|</span> <span class=\"n\">Calling</span> <span class=\"n\">dev_env</span><span class=\"o\">.</span><span class=\"n\">_set_env_vars</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>\u001b[36mdev_env env: Calling method _set_env_vars on module dev_env\n\u001b[0m\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">34</span><span class=\"p\">:</span><span class=\"mf\">32.324740</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">call</span> <span class=\"n\">dev_env</span><span class=\"o\">.</span><span class=\"n\">_set_env_vars</span><span class=\"p\">:</span> <span class=\"mf\">0.7</span> <span class=\"n\">seconds</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">34</span><span class=\"p\">:</span><span class=\"mf\">32.444053</span> <span class=\"o\">|</span> <span class=\"n\">Calling</span> <span class=\"n\">dev_env</span><span class=\"o\">.</span><span class=\"n\">install</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>\u001b[36mdev_env env: Calling method install on module dev_env\n\u001b[0m\u001b[36mInstalling Package: diffusers with method pip.\n\u001b[0m\u001b[36mRunning via install_method pip: python3 -m pip install /root/diffusers\n\u001b[0m\u001b[36mInstalling Package: transformers with method pip.\n\u001b[0m\u001b[36mRunning via install_method pip: python3 -m pip install /root/transformers\n\u001b[0m\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>INFO | 2024-08-01 02:34:56.084695 | Time to call dev_env.install: 23.64 seconds\nINFO | 2024-08-01 02:34:56.239915 | Sending module is_transformers_available of type &lt;class &#39;runhouse.resources.functions.function.Function&#39;&gt; to diffusers_docker\n</pre></div>\n</div>\n</section>\n<section id=\"id3\">\n<h3>Calling the Function<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Now, we call the function</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>dev_fn()\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">35</span><span class=\"p\">:</span><span class=\"mf\">01.303550</span> <span class=\"o\">|</span> <span class=\"n\">Calling</span> <span class=\"n\">is_transformers_available</span><span class=\"o\">.</span><span class=\"n\">call</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>\u001b[36mdev_env env: Calling method call on module is_transformers_available\n\u001b[0m\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">02</span><span class=\"p\">:</span><span class=\"mi\">35</span><span class=\"p\">:</span><span class=\"mf\">02.946712</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">call</span> <span class=\"n\">is_transformers_available</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">:</span> <span class=\"mf\">1.64</span> <span class=\"n\">seconds</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"s1\">&#39;4.44.0.dev0&#39;</span>\n</pre></div>\n</div>\n</section>\n</section>\n<section id=\"summary-setting-up-your-code\">\n<h2>Summary - Setting Up Your Code<a class=\"headerlink\" href=\"#summary-setting-up-your-code\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Here, we implement the above as a script that can be used to toggle\nbetween dev and prod. The script can easily be adapted and shared\nbetween teammates developing and working with the same repos, with a\nflag or variable flip to differentiate between experimentation and\nproduction branches.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">diffusers.utils</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">is_transformers_available</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n    <span class=\"n\">cluster</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">ondemand_cluster</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">up_if_not</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">prod</span><span class=\"p\">:</span>\n        <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">env</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;prod_env_name&quot;</span><span class=\"p\">,</span> <span class=\"n\">env_vars</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">},</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n        <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n        <span class=\"n\">remote_fn</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">is_transformers_available</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">env</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;dev_env_name&quot;</span><span class=\"p\">,</span> <span class=\"n\">reqs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;diffusers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;trasnformers&quot;</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n        <span class=\"n\">remote_fn</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">is_transformers_available</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">env</span><span class=\"p\">)</span>\n\n    <span class=\"n\">remote_fn</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>To summarize the core differences between local experimentation and\nproduction workflow:</p>\n<p><strong>Local Development</strong>: Include local packages to sync in the <code class=\"docutils literal notranslate\"><span class=\"pre\">reqs</span></code>\nfield of the <code class=\"docutils literal notranslate\"><span class=\"pre\">env</span></code> that the function is associated with.</p>\n<p><strong>Production Workflow</strong>: Do not include production packages that are\npart of the Docker image in the <code class=\"docutils literal notranslate\"><span class=\"pre\">reqs</span></code> field of the <code class=\"docutils literal notranslate\"><span class=\"pre\">env</span></code>. Send the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">env</span></code> to the cluster prior to defining the function, and then pass in\nthe env name rather than the env object for the function. Also, include\nRunhouse and Ray on the image to pin those for production as well.</p>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            name: \"python3\",\n            path: \"./.\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["troubleshooting", "Manual Setup and Troubleshooting", "N", "next"], ["docker-setup", "Docker: Cluster Setup", "P", "previous"]], "sourcename": "docker-workflows.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Docker: Dev and Prod Workflows</a><ul>\n<li><a class=\"reference internal\" href=\"#setup\">Setup</a></li>\n<li><a class=\"reference internal\" href=\"#production-workflow\">Production Workflow</a><ul>\n<li><a class=\"reference internal\" href=\"#defining-the-env\">Defining the Env</a></li>\n<li><a class=\"reference internal\" href=\"#defining-the-function\">Defining the Function</a></li>\n<li><a class=\"reference internal\" href=\"#calling-the-function\">Calling the Function</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#local-development\">Local Development</a><ul>\n<li><a class=\"reference internal\" href=\"#local-changes\">Local Changes</a></li>\n<li><a class=\"reference internal\" href=\"#id1\">Defining the Env</a></li>\n<li><a class=\"reference internal\" href=\"#id2\">Defining the Function</a></li>\n<li><a class=\"reference internal\" href=\"#id3\">Calling the Function</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#summary-setting-up-your-code\">Summary - Setting Up Your Code</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "globaltoc": "<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Getting Started</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"how-to-use-runhouse/\">How to Use Runhouse</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick-start-den/\">Setting Up Runhouse</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick-start-cloud/\">API Quick Start</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"runhouse-in-your-stack/\">Working with Common Libraries and Tools</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Basics</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-clusters/\">Clusters</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-modules/\">Functions and Modules</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-folders/\">Folders</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-secrets/\">Secrets</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-resources/\">Resource Management</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Reference</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/python/\">Python API</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/resource/\">Resource</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/function/\">Function</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/cluster/\">Cluster</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/image/\">Image</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/package/\">Package</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/module/\">Module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/folder/\">Folder</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/secrets/\">Secrets</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/login/\">Login/Logout</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/cli/\">Command Line Interface</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Other Topics</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/async/\">Asynchronous Programming</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"installation/\">Installation and Setup</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"debugging-logging/\">Debugging and Logging</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"docker-setup/\">Docker: Cluster Setup</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"docker-workflows/\">Docker: Dev and Prod Workflows</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"troubleshooting/\">Manual Setup and Troubleshooting</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"security-and-authentication/\">Security and Authentication</a></li>\n</ul>\n", "current_page_name": "docker-workflows", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}