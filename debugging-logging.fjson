{"parents": [], "prev": {"link": "../architecture/", "title": "Architecture Overview"}, "next": {"link": "../docker/", "title": "Docker Runtime Env"}, "title": "Debugging and Logging", "meta": {}, "body": "<section id=\"debugging-and-logging\">\n<h1>Debugging and Logging<a class=\"headerlink\" href=\"#debugging-and-logging\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>Below, we describe how to access log outputs and show a sample debugging flow. We are still currently\nworking on making logs more accessible and improving the debugging flow.</p>\n<section id=\"logging\">\n<h2>Logging<a class=\"headerlink\" href=\"#logging\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>There are two main ways to access logs.</p>\n<p>Logs are automatically output onto the cluster, in the file <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.rh/cluster_server_&lt;cluster_name&gt;.log</span></code>.\nYou can ssh into the cluster with <code class=\"docutils literal notranslate\"><span class=\"pre\">ssh</span> <span class=\"pre\">cluster-name</span></code> to access these logs.</p>\n<p>Alternatively, to see logs on your local machine while running a remote function, you can add the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">stream_logs=True</span></code> argument to your function call.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">remote_fn</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">)</span>\n<span class=\"n\">fn</span><span class=\"p\">(</span><span class=\"n\">fn_args</span><span class=\"p\">,</span> <span class=\"n\">stream_logs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"debugging\">\n<h2>Debugging<a class=\"headerlink\" href=\"#debugging\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>For general debugging that doesn\u2019t occur within remote function calls, you can add\n<code class=\"docutils literal notranslate\"><span class=\"pre\">import</span> <span class=\"pre\">pdb;</span> <span class=\"pre\">pdb.set_trace()</span></code> whereever you want to set your debugging session.\nIf the code is being run locally at the point of the debugger, you\u2019ll be able to access the session from your\nlocal machine. If the code is being run remotely on a cluster, you will need to ssh into the cluster with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ssh</span> <span class=\"pre\">cluster-name</span></code>, and then run <code class=\"docutils literal notranslate\"><span class=\"pre\">screen</span> <span class=\"pre\">-r</span></code> inside the cluster. From there, you will see the RPC logs\nbeing printed out, and can debug normally inside the <code class=\"docutils literal notranslate\"><span class=\"pre\">screen</span></code>.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>When debugging inside <code class=\"docutils literal notranslate\"><span class=\"pre\">screen</span></code>, please use <code class=\"docutils literal notranslate\"><span class=\"pre\">Ctrl</span> <span class=\"pre\">A+D</span></code> to exit out of the screen. Do NOT use <code class=\"docutils literal notranslate\"><span class=\"pre\">Ctrl</span> <span class=\"pre\">C</span></code>,\nwhich will terminate the RPC server.</p>\n<p>If you accidentally terminate the RPC server, you can run <code class=\"docutils literal notranslate\"><span class=\"pre\">cluster.restart_server()</span></code> to restart the\nserver.</p>\n</div>\n<p>For debugging remote functions, which are launched using <code class=\"docutils literal notranslate\"><span class=\"pre\">ray</span></code>, we can utilize Ray\u2019s debugger. Add a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">breakpoint()</span></code> call inside the function where you want to start the debugging session, then ssh into the\ncluster with <code class=\"docutils literal notranslate\"><span class=\"pre\">ssh</span> <span class=\"pre\">cluster-name</span></code>, and call <code class=\"docutils literal notranslate\"><span class=\"pre\">ray</span> <span class=\"pre\">debug</span></code> to view select the breakpoint to enter. You can run\nnormal <code class=\"docutils literal notranslate\"><span class=\"pre\">pdb</span></code> commands within the debugging session, and can refer to\n<a class=\"reference external\" href=\"https://docs.ray.io/en/latest/ray-contribute/debugging.html\">Ray Debugger</a> for more information.</p>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./.\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.18.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["docker", "Docker Runtime Env", "N", "next"], ["architecture", "Architecture Overview", "P", "previous"]], "sourcename": "debugging-logging.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Debugging and Logging</a><ul>\n<li><a class=\"reference internal\" href=\"#logging\">Logging</a></li>\n<li><a class=\"reference internal\" href=\"#debugging\">Debugging</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "globaltoc": "<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Getting Started</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick-start-cloud/\">Cloud Quick Start</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick-start-local/\">Local Quick Start</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick-start-den/\">Den Quick Start</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Basics</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-clusters/\">Clusters</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-modules/\">Functions and Modules</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-envs/\">Envs and Packages</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-folders/\">Folders</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-secrets/\">Secrets</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/api-resources/\">Resource Management</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Reference</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/python/\">Python API</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/resource/\">Resource</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/function/\">Function</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/cluster/\">Cluster</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/env/\">Env</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/package/\">Package</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/module/\">Module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/mapper/\">Mapper</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/folder/\">Folder</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/table/\">Table</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/blob/\">Blob</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/file/\">File</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/secrets/\">Secrets</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/login/\">Login/Logout</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/cli/\">Command Line Interface</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Other Topics</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/async/\">Asynchronous Programming</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"architecture/\">Architecture Overview</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"debugging-logging/\">Debugging and Logging</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"docker/\">Docker Runtime Env</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"troubleshooting/\">Manual Setup and Troubleshooting</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"security-and-authentication/\">Security and Authentication</a></li>\n</ul>\n", "current_page_name": "debugging-logging", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12"}