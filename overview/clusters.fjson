{"parents": [], "prev": {"link": "../overview/", "title": "High Level Overview"}, "next": {"link": "../functions/", "title": "Functions"}, "title": "Clusters", "meta": {}, "body": "<section id=\"clusters\">\n<h1>Clusters<a class=\"headerlink\" href=\"#clusters\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>A <a class=\"reference internal\" href=\"../../rh_primitives/cluster/#id1\"><span class=\"std std-ref\">Cluster</span></a> represents a set of machines which can be sent code or data, or a machine spec that could be spun up in the\nevent that we have some code or data to function to the machine.\nGenerally they are <a class=\"reference external\" href=\"https://docs.ray.io/en/latest/cluster/getting-started.html\">Ray clusters</a> under the hood.</p>\n<p>There are a few kinds of clusters today:</p>\n<section id=\"byo-cluster\">\n<h2>BYO Cluster<a class=\"headerlink\" href=\"#byo-cluster\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>This is a machine or group of machines specified by IP addresses and SSH credentials, which can be dispatched code\nor data through the Runhouse APIs. This is useful if you have an on-prem instance, or an account with <a class=\"reference external\" href=\"https://www.paperspace.com/\">Paperspace</a>,\n<a class=\"reference external\" href=\"https://www.coreweave.com/\">CoreWeave</a>, or another vertical provider, or simply want to spin up machines\nyourself through the cloud UI.</p>\n<p>You can use the <a class=\"reference internal\" href=\"../../rh_primitives/cluster/#cluster-factory-method\"><span class=\"std std-ref\">Cluster Factory Method</span></a> constructor like so:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gpu</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">ips</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;&lt;ip of the cluster&gt;&#39;</span><span class=\"p\">],</span>\n                 <span class=\"n\">ssh_creds</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;ssh_user&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;...&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ssh_private_key&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&lt;path_to_key&gt;&#39;</span><span class=\"p\">},</span>\n                 <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;rh-a10x&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"on-demand-clusters\">\n<h2>On-Demand Clusters<a class=\"headerlink\" href=\"#on-demand-clusters\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Runhouse can spin up and down boxes for you as needed using <a class=\"reference external\" href=\"https://github.com/skypilot-org/skypilot/\">SkyPilot</a>.\nWhen you define a SkyPilot \u201ccluster,\u201d\nyou\u2019re primarily defining the configuration for us to spin up the compute resources on-demand.\nWhen someone then calls a function or similar, we\u2019ll spin the box back up for you. You can also create these through the\ncluster factory constructor:</p>\n<p>You can use the cluster factory constructor like so:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gpu</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;rh-4-a100s&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;A100:4&#39;</span><span class=\"p\">,</span>    <span class=\"c1\"># Can also be &#39;CPU:8&#39; or cloud-specific strings, like &#39;g5.2xlarge&#39;</span>\n                 <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s1\">&#39;gcp&#39;</span><span class=\"p\">,</span>            <span class=\"c1\"># defaults to default_provider or cheapest if left empty</span>\n                 <span class=\"n\">autostop_mins</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">,</span>          <span class=\"c1\"># Defaults to 30 mins or default_autostop_mins, -1 suspends autostop</span>\n                 <span class=\"n\">use_spot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>             <span class=\"c1\"># You must have spot quota approved to use this</span>\n                 <span class=\"n\">image_id</span><span class=\"o\">=</span><span class=\"s1\">&#39;my_ami_string&#39;</span><span class=\"p\">,</span>  <span class=\"c1\"># Generally defaults to basic deep-learning AMIs through SkyPilot</span>\n                 <span class=\"n\">region</span><span class=\"o\">=</span><span class=\"s1\">&#39;us-east-1&#39;</span>         <span class=\"c1\"># Looks for cheapest on your continent if empty</span>\n                 <span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>SkyPilot also provides an excellent suite of CLI commands for basic instance management operations.\nSome important ones are:</p>\n<p><code class=\"code docutils literal notranslate\"><span class=\"pre\">sky</span> <span class=\"pre\">status</span> <span class=\"pre\">--refresh</span></code>: Get the status of the clusters you launched from this machine.\nThis will not pull the status for all the machines you\u2019ve launched from various environments.\nWe plan to add this feature soon.</p>\n<p><code class=\"code docutils literal notranslate\"><span class=\"pre\">sky</span> <span class=\"pre\">down</span> <span class=\"pre\">--all</span></code>: This will take down (terminate, without persisting the disk image) all clusters in the local\nSkyPilot context (the ones that show when you run sky status \u2013refresh). However, the best way to confirm that you\ndon\u2019t have any machines left running is always to check the cloud provider\u2019s UI.</p>\n<p><code class=\"code docutils literal notranslate\"><span class=\"pre\">sky</span> <span class=\"pre\">down</span> <span class=\"pre\">&lt;cluster_name&gt;</span></code>: This will take down a specific cluster.</p>\n<p><code class=\"code docutils literal notranslate\"><span class=\"pre\">ssh</span> <span class=\"pre\">&lt;cluster_name&gt;</span></code>: This will ssh into the head node of the cluster.\nSkyPilot cleverly adds the host information to your <code class=\"code docutils literal notranslate\"><span class=\"pre\">~/.ssh/config</span> <span class=\"pre\">file</span></code>, so ssh will just work.</p>\n<p><code class=\"code docutils literal notranslate\"><span class=\"pre\">sky</span> <span class=\"pre\">autostop</span> <span class=\"pre\">-i</span> <span class=\"pre\">&lt;minutes,</span> <span class=\"pre\">or</span> <span class=\"pre\">-1&gt;</span> <span class=\"pre\">&lt;cluster_name&gt;</span></code>: This will set the cluster to autostop after that many minutes of inactivity.\nBy default this number is 10 minutes, but you can set it to -1 to disable autostop entirely. You can set your default autostop in <code class=\"code docutils literal notranslate\"><span class=\"pre\">~/.rh/config.yaml</span></code>.</p>\n</section>\n<section id=\"existing-clusters\">\n<h2>Existing Clusters<a class=\"headerlink\" href=\"#existing-clusters\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>\u201cExisting cluster\u201d can mean either a saved <a class=\"reference internal\" href=\"../../rh_primitives/cluster/#ondemandcluster\"><span class=\"std std-ref\">OnDemandCluster</span></a> config, which will be brought back up if needed,\nor a BYO or OnDemandCluster that\u2019s already up. If you save the Cluster to the <a class=\"reference internal\" href=\"../accessibility/#resource-name-system-rns\"><span class=\"std std-ref\">Resource Name System (RNS)</span></a>,\nyou\u2019ll be able to dispatch to it from any environment. Multiple users or environments can function requests to a cluster\nwithout issue, and either the OS or Ray (depending on the call to the cluster) will handle the resource contention.</p>\n<p>You can load an existing cluster by name from local or Runhouse RNS simply by:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gpu</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;~/my-local-a100&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">gpu</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;@/my-a100-in-rh-rns&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">gpu</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;^rh-v100&#39;</span><span class=\"p\">)</span>  <span class=\"c1\"># Loads a builtin cluster config</span>\n\n<span class=\"c1\"># or, if you just want to load the Cluster object without refreshing its status</span>\n<span class=\"n\">gpu</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;^rh-v100&#39;</span><span class=\"p\">,</span> <span class=\"n\">dryrun</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"advanced-cluster-usage\">\n<h2>Advanced Cluster Usage<a class=\"headerlink\" href=\"#advanced-cluster-usage\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>To start an ssh session into the cluster so you can poke around or debug:</p>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>ssh<span class=\"w\"> </span>rh-v100\n</pre></div>\n</div>\n<p>or in Python:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_cluster</span><span class=\"o\">.</span><span class=\"n\">ssh</span><span class=\"p\">()</span>\n<span class=\"c1\"># or</span>\n<span class=\"c1\"># my_function.ssh()</span>\n</pre></div>\n</div>\n<p>If you prefer to work in notebooks, you can tunnel a JupyterLab server into your local browser:</p>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>runhouse<span class=\"w\"> </span>notebook<span class=\"w\"> </span>my_cluster\n</pre></div>\n</div>\n<p>or in Python:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_function</span><span class=\"o\">.</span><span class=\"n\">notebook</span><span class=\"p\">()</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">my_cluster</span><span class=\"o\">.</span><span class=\"n\">notebook</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>The <a class=\"reference internal\" href=\"../notebooks/#notebooks\"><span class=\"std std-ref\">Notebooks</span></a> section goes more in depth on notebooks.</p>\n<p>To run a shell command on the cluster:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gpu</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"s1\">&#39;git clone ...&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pip install ...&#39;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>This is useful for installing more complex dependencies. <code class=\"code docutils literal notranslate\"><span class=\"pre\">gpu.run_setup(...)</span></code> will make sure the command is\nonly run once when the cluster is first created.</p>\n<p>To run any Python on the cluster:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gpu</span><span class=\"o\">.</span><span class=\"n\">run_python</span><span class=\"p\">([</span><span class=\"s1\">&#39;import torch&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;print(torch.__version__)&#39;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>This is useful for debugging, or for running a script that you don\u2019t want to function to the cluster\n(e.g. because it has too many dependencies).</p>\n<p>If you want to run an application on the cluster that requires a port to be open,\ne.g. <a class=\"reference external\" href=\"https://www.tensorflow.org/tensorboard/\">Tensorboard</a>, <a class=\"reference external\" href=\"https://gradio.app/\">Gradio</a>.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gpu</span><span class=\"o\">.</span><span class=\"n\">ssh_tunnel</span><span class=\"p\">(</span><span class=\"n\">local_port</span><span class=\"o\">=</span><span class=\"mi\">7860</span><span class=\"p\">,</span> <span class=\"n\">remote_port</span><span class=\"o\">=</span><span class=\"mi\">7860</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./overview\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.18.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["overview/functions", "Functions", "N", "next"], ["overview/overview", "High Level Overview", "P", "previous"]], "sourcename": "overview/clusters.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Clusters</a><ul>\n<li><a class=\"reference internal\" href=\"#byo-cluster\">BYO Cluster</a></li>\n<li><a class=\"reference internal\" href=\"#on-demand-clusters\">On-Demand Clusters</a></li>\n<li><a class=\"reference internal\" href=\"#existing-clusters\">Existing Clusters</a></li>\n<li><a class=\"reference internal\" href=\"#advanced-cluster-usage\">Advanced Cluster Usage</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "overview/clusters", "sidebars": ["sidebar-logo.html", "search-field.html", "sbt-sidebar-nav.html", "sbt-sidebar-footer.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "pagetitle": "Clusters", "page_description": "Clusters  A Cluster represents a set of machines which can be sent code or data, or a machine spec that could be spun up in the event that we have some code or ", "author": "the Runhouse team \ud83c\udfc3\u200d\u2640\ufe0f\ud83c\udfe0", "github_user": "run-house", "github_repo": "runhouse", "github_version": "main", "doc_path": "docs/", "theme_search_bar_text": "Search the docs ...", "theme_show_toc_level": 1}