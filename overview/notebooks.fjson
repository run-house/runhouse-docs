{"parents": [], "prev": {"link": "../functions/", "title": "Functions"}, "next": {"link": "../accessibility/", "title": "Accessibility, Portability, and Sharing"}, "title": "Notebooks", "meta": {}, "body": "<section id=\"notebooks\">\n<h1>Notebooks<a class=\"headerlink\" href=\"#notebooks\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>If you prefer to work or debug in notebooks, you can call the following to tunnel a JupyterLab server into your local\nbrowser from your Runhouse cluster or function:</p>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>runhouse<span class=\"w\"> </span>notebook<span class=\"w\"> </span>my_cluster\n</pre></div>\n</div>\n<p>or in Python:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_cluster</span><span class=\"o\">.</span><span class=\"n\">notebook</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>If you\u2019d like to use a hosted notebook service like Colab, you\u2019ll benefit a lot from creating a\nRunhouse account to store your secrets and loading them into Colab with <code class=\"code docutils literal notranslate\"><span class=\"pre\">rh.login()</span></code>.\nThis is not required, and you can still drop them into the Colab VM manually.</p>\n<section id=\"notes-on-notebooks\">\n<h2>Notes on notebooks<a class=\"headerlink\" href=\"#notes-on-notebooks\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Notebooks are funny beasts. The code and variable inside them are not designed to be reused to shuttled around. As such:</p>\n<ol class=\"arabic simple\">\n<li><p>If you want to <code class=\"code docutils literal notranslate\"><span class=\"pre\">rh.function</span></code> a function defined inside the notebook, it cannot contain variables or imports from outside the function, and you should assign a <code class=\"code docutils literal notranslate\"><span class=\"pre\">name</span></code> to the function. We will write the function out to a separate <code class=\"code docutils literal notranslate\"><span class=\"pre\">.py</span></code> file and import it from there, and the filename will be set to the <code class=\"code docutils literal notranslate\"><span class=\"pre\">function.name</span></code>.</p></li>\n<li><p>If you really want to use local variables or avoid writing out the function, you can set <code class=\"code docutils literal notranslate\"><span class=\"pre\">serialize_notebook_fn=True</span></code> in <code class=\"code docutils literal notranslate\"><span class=\"pre\">rh.function()</span></code>. This will cloudpickle the function before sending it, but we do not support saving and reloading these kinds of functions (cloudpickle does not support this kind of reuse and it will create issues).</p></li>\n<li><p>It is nearly always better to try to write your code in a .py file somewhere and import it into the notebook, rather than define important functions in the notebook itself. You can also use the <code class=\"code docutils literal notranslate\"><span class=\"pre\">%%writefile</span></code> magic to write your code into a file, and then import it back into the notebook.</p></li>\n</ol>\n<p>If you want to sync down your code or data to local from the cluster afterwards:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">folder</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">&#39;remote_directory&#39;</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"s1\">&#39;my_cluster&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"s1\">&#39;here&#39;</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">&#39;local_directory&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./overview\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.18.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["overview/accessibility", "Accessibility, Portability, and Sharing", "N", "next"], ["overview/functions", "Functions", "P", "previous"]], "sourcename": "overview/notebooks.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Notebooks</a><ul>\n<li><a class=\"reference internal\" href=\"#notes-on-notebooks\">Notes on notebooks</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "overview/notebooks", "sidebars": ["sidebar-logo.html", "search-field.html", "sbt-sidebar-nav.html", "sbt-sidebar-footer.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "pagetitle": "Notebooks", "page_description": "Notebooks  If you prefer to work or debug in notebooks, you can call the following to tunnel a JupyterLab server into your local browser from your Runhouse clus", "author": "the Runhouse team \ud83c\udfc3\u200d\u2640\ufe0f\ud83c\udfe0", "github_user": "run-house", "github_repo": "runhouse", "github_version": "main", "doc_path": "docs/", "theme_search_bar_text": "Search the docs ...", "theme_show_toc_level": 1}