{"parents": [], "prev": {"link": "../../secrets/secrets/", "title": "Secrets Management"}, "next": {"link": "../clusters/", "title": "Clusters"}, "title": "High Level Overview", "meta": {}, "body": "<section id=\"high-level-overview\">\n<h1>High Level Overview<a class=\"headerlink\" href=\"#high-level-overview\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>Runhouse has four top-level objectives:</p>\n<ol class=\"arabic simple\">\n<li><p>Allowing users to natively program across compute resources</p></li>\n<li><p>Allowing users to command data between storage and compute</p></li>\n<li><p>Making resources accessible across environments and users</p></li>\n<li><p>Allowing resources to be shared among teams as living assets</p></li>\n</ol>\n<p>It achieves the above by providing four pillar features:</p>\n<section id=\"compute\">\n<h2>Compute<a class=\"headerlink\" href=\"#compute\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>The <a class=\"reference internal\" href=\"../functions/#functions\"><span class=\"std std-ref\">Functions</span></a>, <a class=\"reference internal\" href=\"../clusters/#clusters\"><span class=\"std std-ref\">Clusters</span></a>, and <a class=\"reference internal\" href=\"../../rh_primitives/package/#id1\"><span class=\"std std-ref\">Package</span></a> APIs allow a seamless flow of code and execution across local and remote compute.\nThey blur the line between program execution and deployment, providing both a path of least resistence for running a\nsub-routine on specific hardware, while unceremoniously turning that sub-routine into a reusable service.</p>\n<p>They also provide convenient dependency isolation and management, provider-agnostic provisioning and termination,\nand rich debugging and accessibility interfaces built-in.</p>\n</section>\n<section id=\"data\">\n<h2>Data<a class=\"headerlink\" href=\"#data\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>The <a class=\"reference internal\" href=\"../../rh_primitives/folder/#id1\"><span class=\"std std-ref\">Folder</span></a>, <a class=\"reference internal\" href=\"../../rh_primitives/table/#id1\"><span class=\"std std-ref\">Table</span></a>, and <a class=\"reference internal\" href=\"../../rh_primitives/blob/#id1\"><span class=\"std std-ref\">Blob</span></a> APIs provide a simple interface for storing, recalling, and moving data between the\nuser\u2019s laptop, remote compute, cloud storage, and specialized storage (e.g. data warehouses).\nThey provide least-common-denominator APIs across providers, allowing users to easily specify the actions they want\nto take on the data without needed to dig into provider-specific APIs.</p>\n<p>We\u2019d like to extend this to other data concepts in the future, like kv-stores, time-series, vector and graph databases, etc.</p>\n</section>\n<section id=\"accessibility\">\n<h2>Accessibility<a class=\"headerlink\" href=\"#accessibility\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Runhouse strives to provide a Google-Docs-like experience for portability and sharing of resources across users and environments.</p>\n<p>The <a class=\"reference internal\" href=\"../accessibility/#resource-name-system-rns\"><span class=\"std std-ref\">Resource Name System (RNS)</span></a> allows resources to be named, persisted, and recalled across environments.\nIt consists of a lightweight metadata standard for each resource type which captures the information needed to load\nit in a new environment (e.g. Folder -&gt; provider, bucket, path, etc.), and a mechanism for saving and loading from\neither the working git repo or a remote Runhouse key-value metadata store.</p>\n<p>The metadata store allows resources to be shared across users and environments, while the git approach allows for\nlocal persistence and versioning or sharing across OSS projects.</p>\n<p>The <a class=\"reference internal\" href=\"../../secrets/secrets/#secrets-management\"><span class=\"std std-ref\">Secrets Management</span></a> API provides a simple interface for storing and retrieving secrets to a allow a more seamless\nexperience when accessing resources across environments. It provides a simple interface for storing and retrieving\nsecrets from a variety of providers (e.g. AWS, Azure, GCP, Hugging Face, Github, etc.) as well as SSH Keys and\ncustom secrets, and stores them in Hashicorp Vault.</p>\n</section>\n<section id=\"management\">\n<h2>Management<a class=\"headerlink\" href=\"#management\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Runhouse provides tools for visibility and management of resources as long-living assets shared by teams or projects.\nBoth resources and users can be organized into arbitrarily-nested groups to apply access permissions,\ndefault behaviors (e.g. default storage locations, compute providers, instance autotermination, etc.),\nproject delineation, or staging (e.g. dev vs. prod).</p>\n<p>The <a class=\"reference external\" href=\"https://api.run.house/\">management UI</a> provides an individual or admin view of all resources, secrets, groups,\nand sharing (this is only an MVP, and will be overhauled soon). Resource metadata is automatically versioned in RNS,\nallowing teams to maintain single-sources of truth for assets with zero downtime to update or roll back, and trace\nexact lineage for any resource (assuming the underlying the resources are not being deleted).\nWe provide basic logging out of the box today, and are working on providing comprehensive logging, monitoring, alerting.</p>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./overview\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.18.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["overview/clusters", "Clusters", "N", "next"], ["secrets/secrets", "Secrets Management", "P", "previous"]], "sourcename": "overview/overview.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">High Level Overview</a><ul>\n<li><a class=\"reference internal\" href=\"#compute\">Compute</a></li>\n<li><a class=\"reference internal\" href=\"#data\">Data</a></li>\n<li><a class=\"reference internal\" href=\"#accessibility\">Accessibility</a></li>\n<li><a class=\"reference internal\" href=\"#management\">Management</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "overview/overview", "sidebars": ["sidebar-logo.html", "search-field.html", "sbt-sidebar-nav.html", "sbt-sidebar-footer.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "pagetitle": "High Level Overview", "page_description": "High Level Overview  Runhouse has four top-level objectives:  Allowing users to natively program across compute resources  Allowing users to command data betwee", "author": "the Runhouse team \ud83c\udfc3\u200d\u2640\ufe0f\ud83c\udfe0", "github_user": "run-house", "github_repo": "runhouse", "github_version": "main", "doc_path": "docs/", "theme_search_bar_text": "Search the docs ...", "theme_show_toc_level": 1}