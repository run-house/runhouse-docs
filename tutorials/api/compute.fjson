{"parents": [], "prev": {"link": "../resource/", "title": "Resource Basics"}, "next": {"link": "../data/", "title": "Data: Folders, Blobs, Tables"}, "title": "Compute: Cluster, Functions, Env", "meta": {}, "body": "<section id=\"compute-cluster-functions-env\">\n<h1>Compute: Cluster, Functions, Env<a class=\"headerlink\" href=\"#compute-cluster-functions-env\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p><a href=\"https://colab.research.google.com/github/run-house/runhouse/blob/stable/docs/notebooks/compute.ipynb\">\n<img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a></p><p>Runhouse has several abstractions to provide a seamless flow of code and\nexecution across local and remote compute. The abstractions are cloud\nprovider-agnostic, and provide living, reusable services.</p>\n<p>The Cluster and Function APIs blur the line between program execution\nand deployment.</p>\n<p>The Env and Package APIs help to provide convenient dependency isolation\nand management.</p>\n<section id=\"install-runhouse\">\n<h2>Install Runhouse<a class=\"headerlink\" href=\"#install-runhouse\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span>!pip install runhouse\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">runhouse</span> <span class=\"k\">as</span> <span class=\"nn\">rh</span>\n</pre></div>\n</div>\n<p>Optionally, to login to Runhouse to sync any secrets.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span>!runhouse login\n</pre></div>\n</div>\n</section>\n<section id=\"cluster\">\n<h2>Cluster<a class=\"headerlink\" href=\"#cluster\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Runhouse provides various APIs for interacting with remote clusters,\nsuch as terminating an on-demand cloud cluster or running remote CLI or\nPython commands from your local dev environment.</p>\n<section id=\"initialize-your-cluster\">\n<h3>Initialize your Cluster<a class=\"headerlink\" href=\"#initialize-your-cluster\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>There are two types of supported cluster types:</p>\n<ol class=\"arabic simple\">\n<li><p>Bring-your-own (BYO) Cluster: these are existing clusters that you\nalready have up, and access through an IP address and SSH\ncredentials.</p></li>\n<li><p>On-demand Cluster associated with your cloud account (AWS, GCP,\nAzure, LambdaLabs). There are additional features for these clusters,\nsuch as cluster (auto) stop. Please refer to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Installation</span> <span class=\"pre\">and</span> <span class=\"pre\">Setup</span> <span class=\"pre\">Guide</span></code> for instructions on first getting\ncloud credentials set up.</p></li>\n</ol>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># BYO cluster</span>\n<span class=\"n\">cluster</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span>\n              <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;cpu-cluster&quot;</span><span class=\"p\">,</span>\n              <span class=\"n\">ips</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;&lt;ip of the cluster&gt;&#39;</span><span class=\"p\">],</span>\n              <span class=\"n\">ssh_creds</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;ssh_user&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&lt;user&gt;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ssh_private_key&#39;</span><span class=\"p\">:</span><span class=\"s1\">&#39;&lt;path_to_key&gt;&#39;</span><span class=\"p\">},</span>\n          <span class=\"p\">)</span>\n\n<span class=\"c1\"># Using a Cloud provider</span>\n<span class=\"n\">cluster</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span>\n              <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;cpu-cluster&quot;</span><span class=\"p\">,</span>\n              <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;CPU:8&quot;</span><span class=\"p\">,</span>\n              <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;cheapest&quot;</span><span class=\"p\">,</span>       <span class=\"c1\"># &quot;AWS&quot;, &quot;GCP&quot;, &quot;Azure&quot;, &quot;Lambda&quot;, or &quot;cheapest&quot; (default)</span>\n              <span class=\"n\">autostop_mins</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span>          <span class=\"c1\"># Optional, defaults to default_autostop_mins; -1 suspends autostop</span>\n          <span class=\"p\">)</span>\n<span class=\"c1\"># Launch the cluster, only supported for on-demand clusters</span>\n<span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">up</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> parameter provided is used for saving down or loading\nprevious saved clusters. It is also used for various CLI commands for\nthe cluster.</p>\n<p>To ssh into the cluster:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span># Python\ncluster.ssh()\n\n# CLI\n!ssh cpu-cluster\n</pre></div>\n</div>\n<p>To tunnel a JupyterLab server into your local browser:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span># Python\ncluster.notebook()\n\n# CLI\n!runhouse notebook cpu-cluster\n</pre></div>\n</div>\n<p>To run CLI or Python commands on the cluster:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"s1\">&#39;pip install numpy &amp;&amp; pip freeze | grep numpy&#39;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">52</span><span class=\"p\">:</span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">632</span> <span class=\"o\">|</span> <span class=\"n\">Running</span> <span class=\"n\">command</span> <span class=\"n\">on</span> <span class=\"n\">cpu</span><span class=\"o\">-</span><span class=\"n\">cluster</span><span class=\"p\">:</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">numpy</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">pip</span> <span class=\"n\">freeze</span> <span class=\"o\">|</span> <span class=\"n\">grep</span> <span class=\"n\">numpy</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Requirement</span> <span class=\"n\">already</span> <span class=\"n\">satisfied</span><span class=\"p\">:</span> <span class=\"n\">numpy</span> <span class=\"ow\">in</span> <span class=\"o\">/</span><span class=\"n\">opt</span><span class=\"o\">/</span><span class=\"n\">conda</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python3</span><span class=\"mf\">.10</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span> <span class=\"p\">(</span><span class=\"mf\">1.24.3</span><span class=\"p\">)</span>\n<span class=\"n\">numpy</span><span class=\"o\">==</span><span class=\"mf\">1.24.3</span>\n</pre></div>\n</div>\n<pre class=\"literal-block\">[(0,\n  'Requirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (1.24.3)nnumpy==1.24.3n',\n  &quot;Warning: Permanently added '3.95.164.76' (ECDSA) to the list of known hosts.rn&quot;)]</pre>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">run_python</span><span class=\"p\">([</span><span class=\"s1\">&#39;import numpy&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;print(numpy.__version__)&#39;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">52</span><span class=\"p\">:</span><span class=\"mi\">27</span><span class=\"p\">,</span><span class=\"mi\">945</span> <span class=\"o\">|</span> <span class=\"n\">Running</span> <span class=\"n\">command</span> <span class=\"n\">on</span> <span class=\"n\">cpu</span><span class=\"o\">-</span><span class=\"n\">cluster</span><span class=\"p\">:</span> <span class=\"n\">python3</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s2\">&quot;import numpy; print(numpy.__version__)&quot;</span>\n<span class=\"mf\">1.24.3</span>\n</pre></div>\n</div>\n<pre class=\"literal-block\">[(0, '1.24.3n', '')]</pre>\n</section>\n</section>\n<section id=\"function\">\n<h2>Function<a class=\"headerlink\" href=\"#function\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Runhouse\u2019s Function API lets you define functions to be run on remote\nhardware. Simply pass in a local (or a GitHub) function, the intended\nremote hardware, and any dependencies; Runhouse will handle the rest for\nyou.</p>\n<section id=\"basic-functions\">\n<h3>Basic Functions<a class=\"headerlink\" href=\"#basic-functions\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Let\u2019s start with a simple local function <code class=\"docutils literal notranslate\"><span class=\"pre\">getpid</span></code>, which takes in an\noptional parameter <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and returns the process ID plus <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Local Function</span>\n<span class=\"k\">def</span> <span class=\"nf\">getpid</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">os</span>\n    <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getpid</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n</pre></div>\n</div>\n<p>To construct a function that runs <code class=\"docutils literal notranslate\"><span class=\"pre\">getpid</span></code> on a remote cluster, we\nwrap it using <code class=\"docutils literal notranslate\"><span class=\"pre\">rh.function</span></code>, and specify <code class=\"docutils literal notranslate\"><span class=\"pre\">system=cluster</span></code>. There are\ntwo ways of doing so:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Remote Function</span>\n<span class=\"n\">getpid_remote</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">getpid</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n<span class=\"c1\"># or, equivalently</span>\n<span class=\"n\">getpid_remote</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">getpid</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">52</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">822</span> <span class=\"o\">|</span> <span class=\"n\">Writing</span> <span class=\"n\">out</span> <span class=\"n\">function</span> <span class=\"n\">function</span> <span class=\"n\">to</span> <span class=\"o\">/</span><span class=\"n\">content</span><span class=\"o\">/</span><span class=\"n\">getpid_fn</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"o\">.</span> <span class=\"n\">Please</span> <span class=\"n\">make</span> <span class=\"n\">sure</span> <span class=\"n\">the</span> <span class=\"n\">function</span> <span class=\"n\">does</span> <span class=\"ow\">not</span> <span class=\"n\">rely</span> <span class=\"n\">on</span> <span class=\"nb\">any</span> <span class=\"n\">local</span> <span class=\"n\">variables</span><span class=\"p\">,</span> <span class=\"n\">including</span> <span class=\"n\">imports</span> <span class=\"p\">(</span><span class=\"n\">which</span> <span class=\"n\">should</span> <span class=\"n\">be</span> <span class=\"n\">moved</span> <span class=\"n\">inside</span> <span class=\"n\">the</span> <span class=\"n\">function</span> <span class=\"n\">body</span><span class=\"p\">)</span><span class=\"o\">.</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">52</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">825</span> <span class=\"o\">|</span> <span class=\"n\">Setting</span> <span class=\"n\">up</span> <span class=\"n\">Function</span> <span class=\"n\">on</span> <span class=\"n\">cluster</span><span class=\"o\">.</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">52</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"mi\">829</span> <span class=\"o\">|</span> <span class=\"n\">Copying</span> <span class=\"n\">local</span> <span class=\"n\">package</span> <span class=\"n\">content</span> <span class=\"n\">to</span> <span class=\"n\">cluster</span> <span class=\"o\">&lt;</span><span class=\"n\">cpu</span><span class=\"o\">-</span><span class=\"n\">cluster</span><span class=\"o\">&gt;</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">52</span><span class=\"p\">:</span><span class=\"mi\">49</span><span class=\"p\">,</span><span class=\"mi\">316</span> <span class=\"o\">|</span> <span class=\"n\">Installing</span> <span class=\"n\">packages</span> <span class=\"n\">on</span> <span class=\"n\">cluster</span> <span class=\"n\">cpu</span><span class=\"o\">-</span><span class=\"n\">cluster</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;./&#39;</span><span class=\"p\">]</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">52</span><span class=\"p\">:</span><span class=\"mi\">49</span><span class=\"p\">,</span><span class=\"mi\">474</span> <span class=\"o\">|</span> <span class=\"n\">Function</span> <span class=\"n\">setup</span> <span class=\"n\">complete</span><span class=\"o\">.</span>\n</pre></div>\n</div>\n<p>To run the function, simply call it just as you would a local function,\nand the function automatically runs on your specified hardware!</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;local: </span><span class=\"si\">{</span><span class=\"n\">getpid</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;remote: </span><span class=\"si\">{</span><span class=\"n\">getpid_remote</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">local</span><span class=\"p\">:</span> <span class=\"mi\">163</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">53</span><span class=\"p\">:</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">020</span> <span class=\"o\">|</span> <span class=\"n\">Running</span> <span class=\"n\">getpid</span> <span class=\"n\">via</span> <span class=\"n\">gRPC</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">53</span><span class=\"p\">:</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">152</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">send</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"mf\">0.12</span> <span class=\"n\">seconds</span>\n<span class=\"n\">remote</span><span class=\"p\">:</span> <span class=\"mi\">24056</span>\n</pre></div>\n</div>\n</section>\n<section id=\"git-functions\">\n<h3>Git Functions<a class=\"headerlink\" href=\"#git-functions\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>A neat feature of Runhouse is the ability to take a function from a\nGithub repo, and create a wrapper around that function to be run on\nremote. This saves you the effort of needing to clone or copy a\nfunction. To do so, simply pass in the function url into\n<code class=\"docutils literal notranslate\"><span class=\"pre\">rh.function</span></code>.</p>\n<p>We\u2019ve implemented the same <code class=\"docutils literal notranslate\"><span class=\"pre\">getpid</span></code> function in our Runhouse test\nsuite\n<a class=\"reference external\" href=\"https://github.com/run-house/runhouse/blob/v0.0.4/tests/test_function.py#L114\">here</a>.\nBelow, we demonstrate how we can directly use the GitHub link and\nfunction name to run this function on remote hardware, without needing\nto clone the repo ourselves or reimplement the function locally.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pid_git_remote</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span>\n    <span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"s1\">&#39;https://github.com/run-house/runhouse/blob/v0.0.4/tests/test_function.py:getpid&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">53</span><span class=\"p\">:</span><span class=\"mi\">34</span><span class=\"p\">,</span><span class=\"mi\">652</span> <span class=\"o\">|</span> <span class=\"n\">Setting</span> <span class=\"n\">up</span> <span class=\"n\">Function</span> <span class=\"n\">on</span> <span class=\"n\">cluster</span><span class=\"o\">.</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">53</span><span class=\"p\">:</span><span class=\"mi\">34</span><span class=\"p\">,</span><span class=\"mi\">671</span> <span class=\"o\">|</span> <span class=\"n\">Installing</span> <span class=\"n\">packages</span> <span class=\"n\">on</span> <span class=\"n\">cluster</span> <span class=\"n\">cpu</span><span class=\"o\">-</span><span class=\"n\">cluster</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;GitPackage: https://github.com/huggingface/diffusers.git@v0.11.1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;torch==1.12.1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;torchvision==0.13.1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;transformers&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;datasets&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;evaluate&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;accelerate&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pip:./diffusers&#39;</span><span class=\"p\">]</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">54</span><span class=\"p\">:</span><span class=\"mi\">21</span><span class=\"p\">,</span><span class=\"mi\">841</span> <span class=\"o\">|</span> <span class=\"n\">Function</span> <span class=\"n\">setup</span> <span class=\"n\">complete</span><span class=\"o\">.</span>\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pid_git_remote</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</section>\n<section id=\"additional-function-call-types-and-utils\">\n<h3>Additional Function Call Types and Utils<a class=\"headerlink\" href=\"#additional-function-call-types-and-utils\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>In addition to the usual function call, Runhouse also supports the\nfollowing function types: <code class=\"docutils literal notranslate\"><span class=\"pre\">remote</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">get</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">repeat</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">enqueue</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">map</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">starmap</span></code>.</p>\n<p>We demonstrate the behavior of each of these using the same\n<code class=\"docutils literal notranslate\"><span class=\"pre\">getpid_remote</span></code> function above.</p>\n<section id=\"remote-and-get\">\n<h4><code class=\"docutils literal notranslate\"><span class=\"pre\">.remote</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">.get</span></code><a class=\"headerlink\" href=\"#remote-and-get\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>Call the function async (using Ray) and return a reference (Ray\nObjectRef) to the object on the cluster.</p>\n<p>This is a convenient way to avoid passing large objects back and forth\nto your laptop, or to run longer execution in notebooks without locking\nup the kernel.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">getpid_remote_ref</span> <span class=\"o\">=</span> <span class=\"n\">getpid_remote</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<pre class=\"literal-block\">INFO | 2023-05-06 21:03:17,494 | Running getpid via gRPC\nINFO | 2023-05-06 21:03:17,622 | Time to send message: 0.12 seconds\nINFO | 2023-05-06 21:03:17,624 | Submitted remote call to cluster. Result or logs can be retrieved\n with run_key &quot;getpid_20230506_210317&quot;, e.g.\n<cite>rh.cluster(name=&quot;/carolineechen/cpu-cluster&quot;).get(&quot;getpid_20230506_210317&quot;, stream_logs=True)</cite> in python\n<cite>runhouse logs &quot;cpu-cluster&quot; getpid_20230506_210317</cite> from the command line.\n or cancelled with\n<cite>rh.cluster(name=&quot;/carolineechen/cpu-cluster&quot;).cancel(&quot;getpid_20230506_210317&quot;)</cite> in python or\n<cite>runhouse cancel &quot;cpu-cluster&quot; getpid_20230506_210317</cite> from the command line.</pre>\n<p>You can use <code class=\"docutils literal notranslate\"><span class=\"pre\">.get</span></code> to retrive the value of a reference.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">getpid_remote</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">getpid_remote_ref</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">23</span><span class=\"p\">,</span><span class=\"mi\">068</span> <span class=\"o\">|</span> <span class=\"n\">Running</span> <span class=\"n\">getpid</span> <span class=\"n\">via</span> <span class=\"n\">gRPC</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">23</span><span class=\"p\">,</span><span class=\"mi\">194</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">send</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"mf\">0.12</span> <span class=\"n\">seconds</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"mi\">26948</span>\n</pre></div>\n</div>\n<p>You can also directly pass in the ref to another function, and it will\nbe automatically dereferenced once on the cluster.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">getpid_remote</span><span class=\"p\">(</span><span class=\"n\">getpid_remote_ref</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">388</span> <span class=\"o\">|</span> <span class=\"n\">Running</span> <span class=\"n\">getpid</span> <span class=\"n\">via</span> <span class=\"n\">gRPC</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">513</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">send</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"mf\">0.12</span> <span class=\"n\">seconds</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"mi\">51004</span>\n</pre></div>\n</div>\n</section>\n<section id=\"repeat\">\n<h4><code class=\"docutils literal notranslate\"><span class=\"pre\">.repeat</span></code><a class=\"headerlink\" href=\"#repeat\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>To repeat the function call multiple times, call <code class=\"docutils literal notranslate\"><span class=\"pre\">.repeat</span></code> and pass in\nthe number of times to repeat the function. The function calls take\nplace across multiple processes, so we see that there are several\nprocess IDs being returned.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">getpid_remote</span><span class=\"o\">.</span><span class=\"n\">repeat</span><span class=\"p\">(</span><span class=\"n\">num_repeats</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">59</span><span class=\"p\">:</span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">495</span> <span class=\"o\">|</span> <span class=\"n\">Running</span> <span class=\"n\">getpid</span> <span class=\"n\">via</span> <span class=\"n\">gRPC</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">59</span><span class=\"p\">:</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mi\">381</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">send</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"mf\">1.88</span> <span class=\"n\">seconds</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">[</span><span class=\"mi\">26201</span><span class=\"p\">,</span> <span class=\"mi\">26196</span><span class=\"p\">,</span> <span class=\"mi\">26200</span><span class=\"p\">,</span> <span class=\"mi\">26198</span><span class=\"p\">,</span> <span class=\"mi\">26203</span><span class=\"p\">,</span> <span class=\"mi\">26202</span><span class=\"p\">,</span> <span class=\"mi\">26199</span><span class=\"p\">,</span> <span class=\"mi\">26197</span><span class=\"p\">,</span> <span class=\"mi\">26346</span><span class=\"p\">,</span> <span class=\"mi\">26375</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</section>\n<section id=\"enqueue\">\n<h4><code class=\"docutils literal notranslate\"><span class=\"pre\">.enqueue</span></code><a class=\"headerlink\" href=\"#enqueue\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>This queues up the function call on the cluster. It ensures a function\ncall doesn\u2019t run simultaneously with other calls, but will wait until\nthe execution completes.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">getpid_remote</span><span class=\"o\">.</span><span class=\"n\">enqueue</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)]</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">02</span><span class=\"p\">,</span><span class=\"mi\">004</span> <span class=\"o\">|</span> <span class=\"n\">Running</span> <span class=\"n\">getpid</span> <span class=\"n\">via</span> <span class=\"n\">gRPC</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">02</span><span class=\"p\">,</span><span class=\"mi\">772</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">send</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"mf\">0.77</span> <span class=\"n\">seconds</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">02</span><span class=\"p\">,</span><span class=\"mi\">774</span> <span class=\"o\">|</span> <span class=\"n\">Running</span> <span class=\"n\">getpid</span> <span class=\"n\">via</span> <span class=\"n\">gRPC</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">,</span><span class=\"mi\">583</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">send</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"mf\">0.81</span> <span class=\"n\">seconds</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">,</span><span class=\"mi\">585</span> <span class=\"o\">|</span> <span class=\"n\">Running</span> <span class=\"n\">getpid</span> <span class=\"n\">via</span> <span class=\"n\">gRPC</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">04</span><span class=\"p\">,</span><span class=\"mi\">339</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">send</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"mf\">0.75</span> <span class=\"n\">seconds</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">[</span><span class=\"mi\">26786</span><span class=\"p\">,</span> <span class=\"mi\">26815</span><span class=\"p\">,</span> <span class=\"mi\">26845</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</section>\n<section id=\"map-and-starmap\">\n<h4><code class=\"docutils literal notranslate\"><span class=\"pre\">.map</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">.starmap</span></code><a class=\"headerlink\" href=\"#map-and-starmap\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>These are ways to parallelize a function. <code class=\"docutils literal notranslate\"><span class=\"pre\">.map</span></code> maps a function over\na list of arguments, while <code class=\"docutils literal notranslate\"><span class=\"pre\">.starmap</span></code> unpacks the elements of the\niterable while mapping.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">a_map</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"n\">b_map</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"n\">getpid_remote</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"n\">a_map</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"n\">b_map</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">06</span><span class=\"p\">:</span><span class=\"mi\">05</span><span class=\"p\">,</span><span class=\"mi\">078</span> <span class=\"o\">|</span> <span class=\"n\">Running</span> <span class=\"n\">getpid</span> <span class=\"n\">via</span> <span class=\"n\">gRPC</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">06</span> <span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">06</span><span class=\"p\">:</span><span class=\"mi\">06</span><span class=\"p\">,</span><span class=\"mi\">310</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">send</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"mf\">1.22</span> <span class=\"n\">seconds</span>\n</pre></div>\n</div>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">[</span><span class=\"mi\">27024</span><span class=\"p\">,</span> <span class=\"mi\">27023</span><span class=\"p\">,</span> <span class=\"mi\">27021</span><span class=\"p\">,</span> <span class=\"mi\">27019</span><span class=\"p\">,</span> <span class=\"mi\">27020</span><span class=\"p\">,</span> <span class=\"mi\">27022</span><span class=\"p\">,</span> <span class=\"mi\">27023</span><span class=\"p\">,</span> <span class=\"mi\">27023</span><span class=\"p\">,</span> <span class=\"mi\">27023</span><span class=\"p\">,</span> <span class=\"mi\">27023</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">starmap_args</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]]</span>\n<span class=\"n\">getpid_remote</span><span class=\"o\">.</span><span class=\"n\">starmap</span><span class=\"p\">(</span><span class=\"n\">starmap_args</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"stream-logs\">\n<h4><code class=\"docutils literal notranslate\"><span class=\"pre\">stream_logs</span></code><a class=\"headerlink\" href=\"#stream-logs\" title=\"Permalink to this heading\">\u00b6</a></h4>\n<p>To stream logs, pass in <code class=\"docutils literal notranslate\"><span class=\"pre\">stream_logs=True</span></code> to the function call.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">getpid_remote</span><span class=\"p\">(</span><span class=\"n\">stream_logs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<pre class=\"literal-block\">INFO | 2023-05-06 21:06:29,351 | Running getpid via gRPC\nINFO | 2023-05-06 21:06:29,477 | Time to send message: 0.12 seconds\nINFO | 2023-05-06 21:06:29,483 | Submitted remote call to cluster. Result or logs can be retrieved\n with run_key &quot;getpid_20230506_210629&quot;, e.g.\n<cite>rh.cluster(name=&quot;/carolineechen/cpu-cluster&quot;).get(&quot;getpid_20230506_210629&quot;, stream_logs=True)</cite> in python\n<cite>runhouse logs &quot;cpu-cluster&quot; getpid_20230506_210629</cite> from the command line.\n or cancelled with\n<cite>rh.cluster(name=&quot;/carolineechen/cpu-cluster&quot;).cancel(&quot;getpid_20230506_210629&quot;)</cite> in python or\n<cite>runhouse cancel &quot;cpu-cluster&quot; getpid_20230506_210629</cite> from the command line.\n:task_name:getpid\n:task_name:getpid</pre>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"mi\">27165</span>\n</pre></div>\n</div>\n</section>\n</section>\n</section>\n<section id=\"env-packages\">\n<h2>Env + Packages<a class=\"headerlink\" href=\"#env-packages\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Our sample <code class=\"docutils literal notranslate\"><span class=\"pre\">getpid</span></code> function used only builtin Python dependencies, so\nwe did not need to worry about the function environment.</p>\n<p>For more complex functions relying on external dependencies, Runhouse\nprovides concepts for packages (individual dependencies/installations)\nand environments (group of packages or a conda env).</p>\n<section id=\"package-types\">\n<h3>Package Types<a class=\"headerlink\" href=\"#package-types\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Runhouse supports <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">conda</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">reqs</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">git</span></code> packages,\nwhich can be constructed in the following ways.</p>\n<p>Often times, if using Packages in the context of environments (Envs),\nyou don\u2019t need to construct them yourself, but can just pass in the\ncorresponding string, and Runhouse internals will handle the conversion\nand installation for you.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip_package</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;pip:numpy&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">conda_package</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;conda:torch&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">reqs_package</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;reqs:./&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">git_package</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">GitPackage</span><span class=\"p\">(</span><span class=\"n\">git_url</span><span class=\"o\">=</span><span class=\"s1\">&#39;https://github.com/huggingface/diffusers.git&#39;</span><span class=\"p\">,</span>\n                  <span class=\"n\">install_method</span><span class=\"o\">=</span><span class=\"s1\">&#39;pip&#39;</span><span class=\"p\">,</span>\n                  <span class=\"n\">revision</span><span class=\"o\">=</span><span class=\"s1\">&#39;v0.11.1&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>You can also send packages between local, remote, and file storage.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">local_package</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;local/path/to/folder&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">package_on_s3</span> <span class=\"o\">=</span> <span class=\"n\">local_package</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">=</span><span class=\"s2\">&quot;s3&quot;</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">&quot;/s3/path/to/folder&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">package_on_cluster</span> <span class=\"o\">=</span> <span class=\"n\">local_package</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"envs\">\n<h3>Envs<a class=\"headerlink\" href=\"#envs\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Envs, or environments, keep track of your package installs and\ncorresponding versions. This allows for reproducible dev environments,\nand convenient dependency isolation and management.</p>\n<p>The basic environment just consists of a list of Packages, or strings\nthat represent the packages.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">env</span><span class=\"p\">(</span><span class=\"n\">reqs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;numpy&quot;</span><span class=\"p\">,</span> <span class=\"n\">reqs_package</span><span class=\"p\">,</span> <span class=\"n\">git_package</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>When you send an environment object to a cluster, the environment is\nautomatically set up (packages are installed) on the cluster.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">env_on_cluster</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</section>\n<section id=\"putting-it-all-together-cluster-function-env\">\n<h2>Putting it all together \u2013 Cluster, Function, Env<a class=\"headerlink\" href=\"#putting-it-all-together-cluster-function-env\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Now that we understand how clusters, functions, and\npackages/environments work, we can go on to implement more complex\nfunctions that require external dependencies, and seamlessly run them on\na remote cluster.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">add_lists</span><span class=\"p\">(</span><span class=\"n\">list_a</span><span class=\"p\">,</span> <span class=\"n\">list_b</span><span class=\"p\">):</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n  <span class=\"k\">return</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">list_a</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">list_b</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>Note that in the function defined, we include the import statement\n<code class=\"docutils literal notranslate\"><span class=\"pre\">import</span> <span class=\"pre\">numpy</span> <span class=\"pre\">as</span> <span class=\"pre\">np</span></code> within the function. The import needs to be\ninside the function definition in notebook or interactive environments,\nbut can be outside the function if being used in a Python script.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">env</span><span class=\"p\">(</span><span class=\"n\">reqs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;numpy&quot;</span><span class=\"p\">])</span>\n<span class=\"n\">add_lists_remote</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">add_lists</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">cluster</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">env</span><span class=\"p\">)</span>\n\n<span class=\"n\">list_a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"n\">list_b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"n\">add_lists_remote</span><span class=\"p\">(</span><span class=\"n\">list_a</span><span class=\"p\">,</span> <span class=\"n\">list_b</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"cluster-termination\">\n<h2>Cluster Termination<a class=\"headerlink\" href=\"#cluster-termination\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>To terminate the cluster, you can call <code class=\"docutils literal notranslate\"><span class=\"pre\">sky</span> <span class=\"pre\">down</span> <span class=\"pre\">cluster-name</span></code> in CLI\nor <code class=\"docutils literal notranslate\"><span class=\"pre\">cluster_obj.teardown()</span></code> in Python.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span>!sky down cpu-cluster\n# or\ncluster.teardown()\n</pre></div>\n</div>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./tutorials/api\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.18.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["tutorials/api/data", "Data: Folders, Blobs, Tables", "N", "next"], ["tutorials/api/resource", "Resource Basics", "P", "previous"]], "sourcename": "tutorials/api/compute.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Compute: Cluster, Functions, Env</a><ul>\n<li><a class=\"reference internal\" href=\"#install-runhouse\">Install Runhouse</a></li>\n<li><a class=\"reference internal\" href=\"#cluster\">Cluster</a><ul>\n<li><a class=\"reference internal\" href=\"#initialize-your-cluster\">Initialize your Cluster</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#function\">Function</a><ul>\n<li><a class=\"reference internal\" href=\"#basic-functions\">Basic Functions</a></li>\n<li><a class=\"reference internal\" href=\"#git-functions\">Git Functions</a></li>\n<li><a class=\"reference internal\" href=\"#additional-function-call-types-and-utils\">Additional Function Call Types and Utils</a><ul>\n<li><a class=\"reference internal\" href=\"#remote-and-get\"><code class=\"docutils literal notranslate\"><span class=\"pre\">.remote</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">.get</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#repeat\"><code class=\"docutils literal notranslate\"><span class=\"pre\">.repeat</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#enqueue\"><code class=\"docutils literal notranslate\"><span class=\"pre\">.enqueue</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#map-and-starmap\"><code class=\"docutils literal notranslate\"><span class=\"pre\">.map</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">.starmap</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#stream-logs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">stream_logs</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#env-packages\">Env + Packages</a><ul>\n<li><a class=\"reference internal\" href=\"#package-types\">Package Types</a></li>\n<li><a class=\"reference internal\" href=\"#envs\">Envs</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#putting-it-all-together-cluster-function-env\">Putting it all together \u2013 Cluster, Function, Env</a></li>\n<li><a class=\"reference internal\" href=\"#cluster-termination\">Cluster Termination</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "tutorials/api/compute", "sidebars": ["sidebar-logo.html", "search-field.html", "sbt-sidebar-nav.html", "sbt-sidebar-footer.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "pagetitle": "Compute: Cluster, Functions, Env", "page_description": "Compute: Cluster, Functions, Env  <p><a href=\"https://colab.research.google.com/github/run-house/runhouse/blob/stable/docs/notebooks/compute.ipynb\"> <img src=\"h", "author": "the Runhouse team \ud83c\udfc3\u200d\u2640\ufe0f\ud83c\udfe0", "github_user": "run-house", "github_repo": "runhouse", "github_version": "stable", "doc_path": "docs/", "theme_search_bar_text": "Search the docs ...", "theme_show_toc_level": 1}