{"parents": [], "prev": {"link": "../../", "title": "\ud83c\udfc3\u200d\u2640\ufe0fRunhouse Overview\ud83c\udfe0"}, "next": {"link": "../../architecture/", "title": "Architecture Overview"}, "title": "Quick Start Guide", "meta": {}, "body": "<section id=\"quick-start-guide\">\n<h1>Quick Start Guide<a class=\"headerlink\" href=\"#quick-start-guide\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p><a href=\"https://colab.research.google.com/github/run-house/runhouse/blob/stable/docs/notebooks/api/quick_start.ipynb\">\n<img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a></p><p>This tutorials walks through Runhouse setup (installation, hardware\nsetup, and optional login) and goes through an example that demonstrates\nhow to user Runhouse to bridge the gap between local and remote compute,\nand create Resources that can be saved, reused, and shared.</p>\n<section id=\"installation\">\n<h2>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Runhouse can be installed with:</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>!pip install runhouse\n</pre></div>\n</div>\n<p>If using Runhouse with a cloud provider, you can additionally install\ncloud packages (e.g.\u00a0the right versions of tools like boto, gsutil,\netc.):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>$ pip install &quot;runhouse[aws]&quot;\n$ pip install &quot;runhouse[gcp]&quot;\n$ pip install &quot;runhouse[azure]&quot;\n$ pip install &quot;runhouse[sagemaker]&quot;\n# Or\n$ pip install &quot;runhouse[all]&quot;\n</pre></div>\n</div>\n<p>To import runhouse:</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>import runhouse as rh\n</pre></div>\n</div>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span># Optional: to sync over secrets from your Runhouse account\n# !runhouse login\n</pre></div>\n</div>\n</section>\n<section id=\"cluster-setup\">\n<h2>Cluster Setup<a class=\"headerlink\" href=\"#cluster-setup\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Runhouse provides APIs and Secrets management to make it easy to\ninteract with your clusters. This can be either an existing, on-prem\ncluster you have access to, or cloud instances that Runhouse spins\nup/down for you (through your own cloud account).</p>\n<p><strong>Note that Runhouse is NOT managed compute. Everything runs inside your\nown compute and storage, using your credentials.</strong></p>\n<section id=\"bring-your-own-cluster\">\n<h3>Bring-Your-Own Cluster<a class=\"headerlink\" href=\"#bring-your-own-cluster\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>If you are using an existing, on-prem cluster, no additional setup is\nneeded. Just have your cluster IP address and path to SSH credentials or\npassword ready:</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span># using private key\ncluster = rh.cluster(\n              name=&quot;cpu-cluster&quot;,\n              ips=[&#39;&lt;ip of the cluster&gt;&#39;],\n              ssh_creds={&#39;ssh_user&#39;: &#39;&lt;user&gt;&#39;, &#39;ssh_private_key&#39;:&#39;&lt;path_to_key&gt;&#39;},\n          )\n\n# using password\ncluster = rh.cluster(\n              name=&quot;cpu-cluster&quot;,\n              ips=[&#39;&lt;ip of the cluster&gt;&#39;],\n              ssh_creds={&#39;ssh_user&#39;: &#39;&lt;user&gt;&#39;, &#39;password&#39;:&#39;******&#39;},\n          )\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>For more information see the <a class=\"reference internal\" href=\"../../api/python/cluster/#cluster-class\"><span class=\"std std-ref\">Cluster Class</span></a> section.</p>\n</div>\n</section>\n<section id=\"on-demand-cluster\">\n<h3>On-Demand Cluster<a class=\"headerlink\" href=\"#on-demand-cluster\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>For on-demand clusters through cloud accounts (e.g.\u00a0AWS, Azure, GCP,\nLambdaLabs), Runhouse uses\n<a class=\"reference external\" href=\"https://github.com/skypilot-org/skypilot\">SkyPilot</a> for much of the\nheavy lifting with launching and terminating cloud instances.</p>\n<p>To set up your cloud credentials locally to be able to use on-demand\ncloud clusters, you can either:</p>\n<ol class=\"arabic simple\">\n<li><p>Use SkyPilot\u2019s CLI command <code class=\"docutils literal notranslate\"><span class=\"pre\">!sky</span> <span class=\"pre\">check</span></code>, which provides\ninstructions on logging in or setting up your local config file,\ndepending on the provider (further SkyPilot instructions\n<a class=\"reference external\" href=\"https://skypilot.readthedocs.io/en/latest/getting-started/installation.html#cloud-account-setup\">here</a>)</p></li>\n<li><p>Use Runhouse\u2019s Secrets API to sync your secrets down into the\nappropriate local config.</p></li>\n</ol>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span># SkyPilot CLI\n!sky check\n</pre></div>\n</div>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span># Runhouse Secrets\n# Lambda Labs:\nrh.Secrets.save_provider_secrets(secrets={&quot;lambda&quot;: {&quot;api_key&quot;: &quot;*******&quot;}})\n\n# AWS:\nrh.Secrets.save_provider_secrets(secrets={&quot;aws&quot;: {&quot;access_key&quot;: &quot;******&quot;, &quot;secret_key&quot;: &quot;*******&quot;}})\n\n# GCP:\n!gcloud init\n!gcloud auth application-default login\n!cp -r /content/.config/* ~/.config/gcloud\n\n# Azure\n!az login\n!az account set -s &lt;subscription_id&gt;\n</pre></div>\n</div>\n<p>To check that the provider credentials are properly configured locally,\nrun <code class=\"docutils literal notranslate\"><span class=\"pre\">sky</span> <span class=\"pre\">check</span></code> to confirm that the cloud provider is enabled</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>!sky check\n</pre></div>\n</div>\n<p>To create a cluster instance, use the <code class=\"docutils literal notranslate\"><span class=\"pre\">rh.cluster()</span></code> factory function\nfor an existing cluster, or <code class=\"docutils literal notranslate\"><span class=\"pre\">rh.ondemand_cluster</span></code> for an on-demand\ncluster. We go more in depth about how to launch the cluster, and run a\nfunction on it later in this tutorial.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>cluster = rh.ondemand_cluster(\n              name=&quot;cpu-cluster&quot;,\n              instance_type=&quot;CPU:8&quot;,\n              provider=&quot;cheapest&quot;,      # options: &quot;AWS&quot;, &quot;GCP&quot;, &quot;Azure&quot;, &quot;Lambda&quot;, or &quot;cheapest&quot;\n          ).save()\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>For more information and hardware setup see the <a class=\"reference internal\" href=\"../../api/python/cluster/#ondemandcluster-class\"><span class=\"std std-ref\">OnDemandCluster Class</span></a> section.</p>\n</div>\n</section>\n<section id=\"sagemaker-cluster\">\n<h3>SageMaker Cluster<a class=\"headerlink\" href=\"#sagemaker-cluster\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Runhouse facilitates easy access to existing or new SageMaker compute.\nJust provide your SageMaker execution role ARN or have it configured in your local environment.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span># Launch a new SageMaker instance and keep it up indefinitely\ncluster = rh.sagemaker_cluster(name=&#39;sm-cluster&#39;, profile=&quot;sagemaker&quot;).save()\n\n# Running a training job with a provided Estimator\npytorch_estimator = PyTorch(entry_point=&#39;train.py&#39;,\n                            role=&#39;arn:aws:iam::123456789012:role/MySageMakerRole&#39;,\n                            source_dir=&#39;/Users/myuser/dev/sagemaker&#39;,\n                            framework_version=&#39;1.8.1&#39;,\n                            py_version=&#39;py36&#39;,\n                            instance_type=&#39;ml.p3.2xlarge&#39;)\n\ncluster = rh.sagemaker_cluster(name=&#39;sagemaker-cluster&#39;,\n                               estimator=pytorch_estimator).save()\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>For more information and hardware setup see the <a class=\"reference internal\" href=\"../../api/python/cluster/#sagemakercluster-class\"><span class=\"std std-ref\">SageMakerCluster Class</span></a> section.</p>\n</div>\n</section>\n</section>\n<section id=\"secrets-and-portability\">\n<h2>Secrets and Portability<a class=\"headerlink\" href=\"#secrets-and-portability\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>Using Runhouse with only the OSS Python package is perfectly fine, but\nyou can unlock some unique portability features by creating an (always\nfree) <a class=\"reference external\" href=\"https://www.run.house/account\">account</a> and saving down your secrets\nand/or resource metadata there.</p>\n<p>Think of the OSS-package-only experience as akin to Microsoft Office,\nwhile creating an account will make your cloud resources sharable and\naccessible from anywhere like Google Docs.</p>\n<p>For instance, if you previously set up cloud provider credentials in\norder for launching on-demand clusters, simply call <code class=\"docutils literal notranslate\"><span class=\"pre\">runhouse</span> <span class=\"pre\">login</span></code>\nor <code class=\"docutils literal notranslate\"><span class=\"pre\">rh.login()</span></code> and choose which of your secrets you want to sync into\nyour Runhouse account. Then, from any other environment, you can\ndownload those secrets and use them immediately, without needing to set\nup your local credentials again. To delete any local credentials or\nremove secrets from Runhouse, you can call <code class=\"docutils literal notranslate\"><span class=\"pre\">runhouse</span> <span class=\"pre\">logout</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">rh.logout()</span></code>.</p>\n<p>Some notes on security:</p>\n<ul class=\"simple\">\n<li><p>Our API servers only ever store light metadata about your resources (e.g.\u00a0folder name, cloud provider, storage bucket, path). All actual data and compute stays inside your own cloud account and never hits our servers.</p></li>\n<li><p>Secrets are stored in <a class=\"reference external\" href=\"https://www.vaultproject.io/\">Hashicorp Vault</a> (an industry standard for secrets management), never on our API servers, and our APIs simply call into Vault\u2019s APIs.</p></li>\n</ul>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>!runhouse login\n# or\nrh.login()\n</pre></div>\n</div>\n</section>\n<section id=\"getting-started-example\">\n<h2>Getting Started Example<a class=\"headerlink\" href=\"#getting-started-example\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>In the following example, we demonstrate Runhouse\u2019s simple but powerful\ncompute APIs to run locally defined functions on a remote cluster\nlaunched through Runhouse, bridging the gap between local and remote.\nAdditionally, save, reuse, and share any of your Runhouse Resources.</p>\n<p>Please first make sure that you have successfully followed the\n<a class=\"reference internal\" href=\"#installation\">Installation</a> and <a class=\"reference external\" href=\"#cluster-setup\">Cluster Setup</a> sections above prior to running this\nexample.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>import runhouse as rh\n</pre></div>\n</div>\n<section id=\"running-local-functions-on-remote-hardware\">\n<h3>Running local functions on remote hardware<a class=\"headerlink\" href=\"#running-local-functions-on-remote-hardware\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>First let\u2019s define a simple local function which returns the number of\nCPUs available.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>def num_cpus():\n    import multiprocessing\n    return f&quot;Num cpus: {multiprocessing.cpu_count()}&quot;\n\nnum_cpus()\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"s1\">&#39;Num cpus: 10&#39;</span>\n</pre></div>\n</div>\n<p>Next, instantiate the cluster that we want to run this function on. This\ncan be either an existing cluster where you pass in an IP address and\nSSH credentials, or a cluster associated with supported Cloud account\n(AWS, GCP, Azure, LambdaLabs), where it is automatically launched (and\noptionally terminated) for you.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span># Using an existing, bring-your-own cluster\ncluster = rh.cluster(\n              name=&quot;cpu-cluster&quot;,\n              ips=[&#39;&lt;ip of the cluster&gt;&#39;],\n              ssh_creds={&#39;ssh_user&#39;: &#39;&lt;user&gt;&#39;, &#39;ssh_private_key&#39;:&#39;&lt;path_to_key&gt;&#39;},\n          )\n\n# Using a Cloud provider\ncluster = rh.cluster(\n              name=&quot;cpu-cluster&quot;,\n              instance_type=&quot;CPU:8&quot;,\n              provider=&quot;cheapest&quot;,      # options: &quot;AWS&quot;, &quot;GCP&quot;, &quot;Azure&quot;, &quot;Lambda&quot;, or &quot;cheapest&quot;\n          )\n</pre></div>\n</div>\n<p>If using a cloud cluster, we can launch the cluster with <code class=\"docutils literal notranslate\"><span class=\"pre\">.up()</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.up_if_not()</span></code>.</p>\n<p>Note that it may take a few minutes for the cluster to be launched\nthrough the Cloud provider and set up dependencies.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>cluster.up_if_not()\n</pre></div>\n</div>\n<p>Now that we have our function and remote cluster set up, we\u2019re ready to\nsee how to run this function on our cluster!</p>\n<p>We wrap our local function in <code class=\"docutils literal notranslate\"><span class=\"pre\">rh.function</span></code>, and associate this new\nfunction with the cluster. Now, whenever we call this new function, just\nas we would call any other Python function, it runs on the cluster\ninstead of local.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>num_cpus_cluster = rh.function(name=&quot;num_cpus_cluster&quot;, fn=num_cpus).to(system=cluster, reqs=[&quot;./&quot;])\n</pre></div>\n</div>\n<pre class=\"code-output literal-block\">INFO | 2023-08-29 03:03:52.826786 | Writing out function function to /Users/caroline/Documents/runhouse/runhouse/docs/notebooks/basics/num_cpus_fn.py. Please make sure the function does not rely on any local variables, including imports (which should be moved inside the function body).\n/Users/caroline/Documents/runhouse/runhouse/runhouse/rns/function.py:106: UserWarning: <code class=\"docutils literal notranslate\"><span class=\"pre\">reqs</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">setup_cmds</span></code> arguments has been deprecated. Please use <code class=\"docutils literal notranslate\"><span class=\"pre\">env</span></code> instead.\n  warnings.warn(\nINFO | 2023-08-29 03:03:52.832445 | Setting up Function on cluster.\nINFO | 2023-08-29 03:03:53.271019 | Connected (version 2.0, client OpenSSH_8.2p1)\nINFO | 2023-08-29 03:03:53.546892 | Authentication (publickey) successful!\nINFO | 2023-08-29 03:03:53.557504 | Checking server cpu-cluster\nINFO | 2023-08-29 03:03:54.942843 | Server cpu-cluster is up.\nINFO | 2023-08-29 03:03:54.948097 | Copying package from <a class=\"reference external\" href=\"file:///Users/caroline/Documents/runhouse/runhouse\">file:///Users/caroline/Documents/runhouse/runhouse</a> to: cpu-cluster\nINFO | 2023-08-29 03:03:56.480770 | Calling env_20230829_030349.install</pre>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">base</span> <span class=\"n\">servlet</span><span class=\"p\">:</span> <span class=\"n\">Calling</span> <span class=\"n\">method</span> <span class=\"n\">install</span> <span class=\"n\">on</span> <span class=\"n\">module</span> <span class=\"n\">env_20230829_030349</span>\n<span class=\"n\">Installing</span> <span class=\"n\">package</span><span class=\"p\">:</span> <span class=\"n\">Package</span><span class=\"p\">:</span> <span class=\"n\">runhouse</span>\n<span class=\"n\">Installing</span> <span class=\"n\">Package</span><span class=\"p\">:</span> <span class=\"n\">runhouse</span> <span class=\"k\">with</span> <span class=\"n\">method</span> <span class=\"n\">reqs</span><span class=\"o\">.</span>\n<span class=\"n\">reqs</span> <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">runhouse</span><span class=\"o\">/</span><span class=\"n\">requirements</span><span class=\"o\">.</span><span class=\"n\">txt</span>\n<span class=\"n\">pip</span> <span class=\"n\">installing</span> <span class=\"n\">requirements</span> <span class=\"kn\">from</span> <span class=\"nn\">runhouse</span><span class=\"o\">/</span><span class=\"n\">requirements</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"k\">with</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"n\">r</span> <span class=\"n\">runhouse</span><span class=\"o\">/</span><span class=\"n\">requirements</span><span class=\"o\">.</span><span class=\"n\">txt</span>\n<span class=\"n\">Running</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"n\">opt</span><span class=\"o\">/</span><span class=\"n\">conda</span><span class=\"o\">/</span><span class=\"nb\">bin</span><span class=\"o\">/</span><span class=\"n\">python3</span><span class=\"mf\">.10</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">r</span> <span class=\"n\">runhouse</span><span class=\"o\">/</span><span class=\"n\">requirements</span><span class=\"o\">.</span><span class=\"n\">txt</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">29</span> <span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mf\">58.230209</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">call</span> <span class=\"n\">env_20230829_030349</span><span class=\"o\">.</span><span class=\"n\">install</span><span class=\"p\">:</span> <span class=\"mf\">1.75</span> <span class=\"n\">seconds</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">29</span> <span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mf\">58.462054</span> <span class=\"o\">|</span> <span class=\"n\">Function</span> <span class=\"n\">setup</span> <span class=\"n\">complete</span><span class=\"o\">.</span>\n</pre></div>\n</div>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>num_cpus_cluster()\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">29</span> <span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">04</span><span class=\"p\">:</span><span class=\"mf\">01.105011</span> <span class=\"o\">|</span> <span class=\"n\">Calling</span> <span class=\"n\">num_cpus_cluster</span><span class=\"o\">.</span><span class=\"n\">call</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">base</span> <span class=\"n\">servlet</span><span class=\"p\">:</span> <span class=\"n\">Calling</span> <span class=\"n\">method</span> <span class=\"n\">call</span> <span class=\"n\">on</span> <span class=\"n\">module</span> <span class=\"n\">num_cpus_cluster</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">29</span> <span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">04</span><span class=\"p\">:</span><span class=\"mf\">01.384439</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">call</span> <span class=\"n\">num_cpus_cluster</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">:</span> <span class=\"mf\">0.28</span> <span class=\"n\">seconds</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"s1\">&#39;Num cpus: 8&#39;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"saving-reusing-and-sharing\">\n<h3>Saving, Reusing, and Sharing<a class=\"headerlink\" href=\"#saving-reusing-and-sharing\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>Runhouse supports saving down the metadata and configs for resources\nlike clusters and functions, so that you can load them from a different\nenvironment, or share it with your collaborators.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>num_cpus_cluster.save()\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"o\">&lt;</span><span class=\"n\">runhouse</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"o\">.</span><span class=\"n\">Function</span> <span class=\"n\">at</span> <span class=\"mh\">0x104634ee0</span><span class=\"o\">&gt;</span>\n</pre></div>\n</div>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>num_cpus_cluster.share(\n    users=[&quot;&lt;email_to_runhouse_account&gt;&quot;],\n    access_type=&quot;write&quot;,\n)\n</pre></div>\n</div>\n<p>Now, you, or whoever you shared it with, can reload this function from\nanother dev environment (like a different Colab, local, or on a cluster),\nas long as you are logged in to your Runhouse account.</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>reloaded_function = rh.function(name=&quot;num_cpus_cluster&quot;)\nreloaded_function()\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">29</span> <span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">04</span><span class=\"p\">:</span><span class=\"mf\">24.820884</span> <span class=\"o\">|</span> <span class=\"n\">Checking</span> <span class=\"n\">server</span> <span class=\"n\">cpu</span><span class=\"o\">-</span><span class=\"n\">cluster</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">29</span> <span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">04</span><span class=\"p\">:</span><span class=\"mf\">25.850301</span> <span class=\"o\">|</span> <span class=\"n\">Server</span> <span class=\"n\">cpu</span><span class=\"o\">-</span><span class=\"n\">cluster</span> <span class=\"ow\">is</span> <span class=\"n\">up</span><span class=\"o\">.</span>\n<span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">29</span> <span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">04</span><span class=\"p\">:</span><span class=\"mf\">25.852478</span> <span class=\"o\">|</span> <span class=\"n\">Calling</span> <span class=\"n\">num_cpus_cluster</span><span class=\"o\">.</span><span class=\"n\">call</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">base</span> <span class=\"n\">servlet</span><span class=\"p\">:</span> <span class=\"n\">Calling</span> <span class=\"n\">method</span> <span class=\"n\">call</span> <span class=\"n\">on</span> <span class=\"n\">module</span> <span class=\"n\">num_cpus_cluster</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INFO</span> <span class=\"o\">|</span> <span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">29</span> <span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">04</span><span class=\"p\">:</span><span class=\"mf\">26.127098</span> <span class=\"o\">|</span> <span class=\"n\">Time</span> <span class=\"n\">to</span> <span class=\"n\">call</span> <span class=\"n\">num_cpus_cluster</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">:</span> <span class=\"mf\">0.27</span> <span class=\"n\">seconds</span>\n</pre></div>\n</div>\n<div class=\"code-output highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"s1\">&#39;Num cpus: 8&#39;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"terminate-the-cluster\">\n<h3>Terminate the Cluster<a class=\"headerlink\" href=\"#terminate-the-cluster\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>To terminate the cluster, you can run:</p>\n<div class=\"highlight-ipython3 notranslate\"><div class=\"highlight\"><pre><span></span>cluster.teardown()\n</pre></div>\n</div>\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #008000; text-decoration-color: #008000\">\u2807</span> <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\">Terminating </span><span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">cpu-cluster</span>\n</pre></section>\n<section id=\"summary\">\n<h3>Summary<a class=\"headerlink\" href=\"#summary\" title=\"Permalink to this heading\">\u00b6</a></h3>\n<p>In this tutorial, we demonstrated how to use runhouse to create\nreferences to remote clusters, run local functions on the cluster, and\nsave/share and reuse functions with a Runhouse account.</p>\n<p>Runhouse also lets you:</p>\n<ul class=\"simple\">\n<li><p>Send and save data (folders, blobs, tables) between local, remote, and file storage</p></li>\n<li><p>Send, save, and share dev environments</p></li>\n<li><p>Reload and reuse saved resources (both compute and data) from different environments (with a Runhouse account)</p></li>\n<li><p>\u2026 and much more!</p></li>\n</ul>\n</section>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            name: \"python3\",\n            path: \"./tutorials\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["architecture", "Architecture Overview", "N", "next"], ["index", "\ud83c\udfc3\u200d\u2640\ufe0fRunhouse Overview\ud83c\udfe0", "P", "previous"]], "sourcename": "tutorials/quick_start.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Quick Start Guide</a><ul>\n<li><a class=\"reference internal\" href=\"#installation\">Installation</a></li>\n<li><a class=\"reference internal\" href=\"#cluster-setup\">Cluster Setup</a><ul>\n<li><a class=\"reference internal\" href=\"#bring-your-own-cluster\">Bring-Your-Own Cluster</a></li>\n<li><a class=\"reference internal\" href=\"#on-demand-cluster\">On-Demand Cluster</a></li>\n<li><a class=\"reference internal\" href=\"#sagemaker-cluster\">SageMaker Cluster</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#secrets-and-portability\">Secrets and Portability</a></li>\n<li><a class=\"reference internal\" href=\"#getting-started-example\">Getting Started Example</a><ul>\n<li><a class=\"reference internal\" href=\"#running-local-functions-on-remote-hardware\">Running local functions on remote hardware</a></li>\n<li><a class=\"reference internal\" href=\"#saving-reusing-and-sharing\">Saving, Reusing, and Sharing</a></li>\n<li><a class=\"reference internal\" href=\"#terminate-the-cluster\">Terminate the Cluster</a></li>\n<li><a class=\"reference internal\" href=\"#summary\">Summary</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "globaltoc": "<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Getting Started</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/quick_start/\">Quick Start Guide</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"architecture/\">Architecture Overview</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api_tutorials/\">API Tutorials</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"tutorials/api/compute/\">Compute: Clusters, Functions, Packages, &amp; Envs</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"tutorials/api/data/\">Data: Folders, Tables, &amp; Blobs</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"tutorials/api/accessibility/\">Accessibility: Resource and Secrets Management</a></li>\n</ul>\n</li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">API Reference</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/python/\">Python API</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/resource/\">Resource</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/function/\">Function</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/cluster/\">Cluster</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/env/\">Env</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/package/\">Package</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/run/\">Run</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/module/\">Module</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/folder/\">Folder</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/table/\">Table</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/blob/\">Blob</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/secrets/\">Secrets</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"api/python/login/\">Login/Logout</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api/cli/\">Command Line Interface</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Usage Examples</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/examples/inference/\">Inference: Stable Diffusion and FLAN-T5</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/examples/training/\">Training: Transformers</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tutorials/examples/distributed/\">Distributed: HF Accelerate</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://github.com/run-house/funhouse/tree/main/bert_pipeline\">Pipelining: BERT</a></li>\n</ul>\n<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Additional Resources</span></p>\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"debugging_logging/\">Debugging and Logging</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"troubleshooting/\">Manual Setup and Troubleshooting</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"auth_and_data_collection/\">Security and Metadata Collection</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://github.com/run-house/runhouse\">Source Code</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://api.run.house/docs\">REST API Guide</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://www.run.house/dashboard\">Dashboard</a></li>\n<li class=\"toctree-l1\"><a class=\"reference external\" href=\"https://github.com/run-house/funhouse\">Funhouse</a></li>\n</ul>\n", "current_page_name": "tutorials/quick_start", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.13"}