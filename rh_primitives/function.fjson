{"parents": [{"link": "../../main/", "title": "Python API"}], "prev": {"link": "../resource/", "title": "Resource"}, "next": {"link": "../cluster/", "title": "Cluster"}, "title": "Function", "meta": {}, "body": "<section id=\"function\">\n<h1>Function<a class=\"headerlink\" href=\"#function\" title=\"Permalink to this heading\">\u00b6</a></h1>\n<p>A Function is a portable code block that can be sent to remote hardware to run as a subroutine or service.\nIt is comprised of the entrypoint, system (<a class=\"reference internal\" href=\"../cluster/#cluster\"><span class=\"std std-ref\">Cluster</span></a>), and requirements necessary to run it.</p>\n<section id=\"function-factory-method\">\n<h2>Function Factory Method<a class=\"headerlink\" href=\"#function-factory-method\" title=\"Permalink to this heading\">\u00b6</a></h2>\n</section>\n<section id=\"function-class\">\n<h2>Function Class<a class=\"headerlink\" href=\"#function-class\" title=\"Permalink to this heading\">\u00b6</a></h2>\n</section>\n<section id=\"basic-api-usage\">\n<h2>Basic API Usage<a class=\"headerlink\" href=\"#basic-api-usage\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>To initialize a function, from a local function:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">local_function</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">):</span>  <span class=\"c1\"># standard local Python method</span>\n   <span class=\"o\">...</span>\n\n<span class=\"c1\"># Runhouse Function, to be run on my_cluster Cluster</span>\n<span class=\"n\">my_function</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">local_function</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">my_cluster</span><span class=\"p\">,</span> <span class=\"n\">reqs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;requirements.txt&#39;</span><span class=\"p\">])</span>\n<span class=\"c1\"># or, equivalently</span>\n<span class=\"n\">my_function</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">local_function</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">my_cluster</span><span class=\"p\">,</span> <span class=\"n\">reqs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;requirements.txt&#39;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>To use the function, simply call it as you would the local function.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">my_function</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">)</span>  <span class=\"c1\"># runs the function on my_cluster, and returns the result locally</span>\n</pre></div>\n</div>\n<p>To intialize a function, from an existing Github function:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_github_function</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span>\n                        <span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"s1\">&#39;https://github.com/huggingface/diffusers/blob/v0.11.1/examples/dreambooth/train_dreambooth.py:main&#39;</span><span class=\"p\">,</span>\n                        <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">my_cluster</span><span class=\"p\">,</span>\n                        <span class=\"n\">reqs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;requirements.txt&#39;</span><span class=\"p\">],</span>\n                     <span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>To name the function, to be accessed by name later on, pass in the <cite>name</cite> argument to the factory method.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_function</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"n\">local_function</span><span class=\"p\">,</span> <span class=\"n\">system</span><span class=\"o\">=</span><span class=\"n\">my_cluster</span><span class=\"p\">,</span> <span class=\"n\">reqs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;requirements.txt&#39;</span><span class=\"p\">],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_function_name&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"advanced-api-usage\">\n<h2>Advanced API Usage<a class=\"headerlink\" href=\"#advanced-api-usage\" title=\"Permalink to this heading\">\u00b6</a></h2>\n<p>To stream logs, pass in <code class=\"docutils literal notranslate\"><span class=\"pre\">stream_logs=True</span></code> to the function call.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_function</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">,</span> <span class=\"n\">stream_logs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">.remote()</span></code>: Call the function async (using Ray) and return a reference (Ray ObjectRef) to the object\non the cluster. This ref can be passed into another function, and will be automatically dereferenced\nonce on the cluster. This is a convenient way to avoid passing large objects back and forth to your\nlaptop, or to run longer execution in notebooks without locking up the kernel.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">result_ref</span> <span class=\"o\">=</span> <span class=\"n\">my_function</span><span class=\"o\">.</span><span class=\"n\">remote</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">)</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">result_ref</span><span class=\"p\">)</span>  <span class=\"c1\"># load the result to local</span>\n<span class=\"n\">my_other_function</span><span class=\"p\">(</span><span class=\"n\">result_ref</span><span class=\"p\">)</span>  <span class=\"c1\"># pass in ref to another function</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">.enqueue()</span></code>: Queue up the function call on the cluster. This ensures it doesn\u2019t run simultaneously with other calls, but will wait until the execution completes.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_function</span><span class=\"o\">.</span><span class=\"n\">enqueue</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">.map()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">.starmap()</span></code> are easy way to parallelize a function (again using Ray on the cluster).\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.map</span></code> maps a function over a list of arguments, while <code class=\"docutils literal notranslate\"><span class=\"pre\">.starmap</span></code> unpacks the elements of the iterable\nwhile mapping.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># .map</span>\n<span class=\"n\">arg1_map</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"n\">arg2_map</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"n\">map_results</span> <span class=\"o\">=</span> <span class=\"n\">my_function</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"o\">=</span><span class=\"n\">arg1_map</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"o\">=</span><span class=\"n\">arg2_map</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># .starmap</span>\n<span class=\"n\">starmap_args</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]]</span>\n<span class=\"n\">starmap_results</span> <span class=\"o\">=</span> <span class=\"n\">my_function</span><span class=\"o\">.</span><span class=\"n\">starmap</span><span class=\"p\">(</span><span class=\"n\">starmap_args</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</section>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./rh_primitives\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>", "metatags": "<meta name=\"generator\" content=\"Docutils 0.18.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["rh_primitives/cluster", "Cluster", "N", "next"], ["rh_primitives/resource", "Resource", "P", "previous"]], "sourcename": "rh_primitives/function.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Function</a><ul>\n<li><a class=\"reference internal\" href=\"#function-factory-method\">Function Factory Method</a></li>\n<li><a class=\"reference internal\" href=\"#function-class\">Function Class</a></li>\n<li><a class=\"reference internal\" href=\"#basic-api-usage\">Basic API Usage</a></li>\n<li><a class=\"reference internal\" href=\"#advanced-api-usage\">Advanced API Usage</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "rh_primitives/function", "sidebars": ["sidebar-logo.html", "search-field.html", "sbt-sidebar-nav.html", "sbt-sidebar-footer.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "pagetitle": "Function", "page_description": "Function  A Function is a portable code block that can be sent to remote hardware to run as a subroutine or service. It is comprised of the entrypoint, system (", "author": "the Runhouse team \ud83c\udfc3\u200d\u2640\ufe0f\ud83c\udfe0", "github_user": "run-house", "github_repo": "runhouse", "github_version": "stable", "doc_path": "docs/", "theme_search_bar_text": "Search the docs ...", "theme_show_toc_level": 1}